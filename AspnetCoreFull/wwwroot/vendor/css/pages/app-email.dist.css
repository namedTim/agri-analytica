.app-email {
  position: relative;
  height: calc(100vh - 10.5rem);
  overflow: hidden;
}
@media (min-width: 1200px) {
  .layout-horizontal .app-email {
    height: calc(100vh - 10.5rem - 3.5rem);
  }
}
.app-email .app-email-sidebar {
  position: absolute;
  left: calc(-16.25rem - 1.2rem);
  width: 16.25rem;
  height: 100%;
  z-index: 4;
  flex-basis: 16.25rem;
  transition: all 0.2s;
}
.app-email .app-email-sidebar .btn-compost-wrapper {
  padding: 1.25rem 1.25rem;
}
.app-email .app-email-sidebar.show {
  left: 0;
}
.app-email .app-email-sidebar .email-filters {
  height: calc(100vh - 15.4rem);
}
@media (min-width: 1200px) {
  .layout-horizontal .app-email .app-email-sidebar .email-filters {
    height: calc(100vh - 15.4rem - 3.5rem);
  }
}
.app-email .app-email-sidebar .email-filters li {
  padding: 0.375rem 1.25rem;
  border-left: 2px solid transparent;
}
.app-email .app-email-sidebar .email-filters li h6 {
  font-size: 1rem;
}
.app-email .app-email-sidebar .email-filters .email-filter-folders li.active {
  border-color: #696cff;
}
.app-email .app-email-sidebar .email-filters .email-filter-folders i {
  font-size: 1.25rem;
}
.app-email .app-email-compose .modal-dialog {
  position: fixed;
  bottom: 0;
  right: 0;
  width: 100%;
}
.app-email .app-email-compose .email-compose-to .select2-selection {
  border: none;
}
.app-email .app-email-compose .email-compose-toggle-wrapper {
  width: 80px;
}
.app-email .app-email-compose .ql-editor {
  min-height: 10rem;
}
.app-email .app-email-compose .ql-snow.ql-toolbar {
  padding: 0.5rem 1rem;
}
.app-email .app-email-compose .ql-editor,
.app-email .app-email-compose .ql-editor.ql-blank::before {
  padding-left: 1.5rem;
}
.app-email .app-emails-list .emails-list-header .emails-list-header-hr {
  margin-top: 0.3rem;
}
.app-email .app-emails-list .email-list {
  height: calc(100vh - 17.5rem);
}
@media (min-width: 1200px) {
  .layout-horizontal .app-email .app-emails-list .email-list {
    height: calc(100vh - 17.5rem - 3.5rem);
  }
}
.app-email .app-emails-list .email-list li {
  padding: 0.97rem 1rem;
  transition: all 0.15s ease-in-out;
  cursor: pointer;
  z-index: 1;
}
.app-email .app-emails-list .email-list li .email-list-item-subject {
  font-size: 0.85rem;
}
.app-email .app-emails-list .email-list li .email-list-item-username {
  font-weight: 600;
}
.app-email .app-emails-list .email-list li .email-list-item-time {
  width: 60px;
  display: inline-block;
  text-align: right;
}
.app-email .app-emails-list .email-list li .email-list-item-meta .email-list-item-actions {
  display: none;
}
.app-email .app-emails-list .email-list li .email-list-item-meta .email-list-item-actions li {
  padding: 0;
}
.app-email .app-emails-list .email-list li:not(.list-inline-item):hover {
  z-index: 5;
  transform: translateY(-2px);
}
.app-email .app-emails-list .email-list .email-list-item .form-check {
  margin-bottom: 0;
}
.app-email .app-email-view {
  position: absolute;
  top: 0;
  right: -100%;
  width: 100%;
  height: calc(100vh - 10.5rem);
  z-index: -1;
  transition: all 0.25s ease;
}
@media (min-width: 1200px) {
  .layout-horizontal .app-email .app-email-view {
    height: calc(100vh - 10.5rem - 3.5rem);
  }
}
.app-email .app-email-view.show {
  right: -1px;
  z-index: 4;
}
.app-email .app-email-view .app-email-view-header {
  padding-bottom: 1.3rem;
}
.app-email .app-email-view .app-email-view-content {
  height: calc(100vh - 17rem);
}
@media (min-width: 1200px) {
  .layout-horizontal .app-email .app-email-view .app-email-view-content {
    height: calc(100vh - 17rem - 3.5rem);
  }
}
.app-email .app-email-view .app-email-view-content .ql-container {
  border: 0;
}
.app-email .app-email-view .app-email-view-content .ql-container .ql-editor {
  min-height: 5rem;
}
.app-email .app-email-view .app-email-view-content .ql-editor,
.app-email .app-email-view .app-email-view-content .ql-editor.ql-blank::before {
  padding-left: 0.5rem;
}
.app-email .app-email-view .app-email-view-content .email-card-prev {
  display: none;
}
.app-email .app-email-view .app-email-view-content .email-card-last {
  transition: all 0.25s ease-in-out;
}
.app-email .app-email-view .app-email-view-content .email-card-last:before {
  position: absolute;
  bottom: 1rem;
  left: 1rem;
  right: 1rem;
  top: -2rem;
  border-radius: 0.25rem;
  z-index: -1;
  content: "";
}
.app-email .app-email-view .app-email-view-content .email-card-last:after {
  position: absolute;
  bottom: 0.5rem;
  left: 0.5rem;
  right: 0.5rem;
  top: -1rem;
  border-radius: 0.25rem;
  z-index: -1;
  content: "";
}
.app-email .app-email-view .app-email-view-content .email-card-last.hide-pseudo:before, .app-email .app-email-view .app-email-view-content .email-card-last.hide-pseudo:after {
  display: none !important;
}
@media (min-width: 1199px) {
  .app-email .email-list li .email-list-item-meta {
    margin-right: 0.45rem;
  }
}
@media (min-width: 992px) {
  .app-email .app-email-sidebar {
    position: static;
    height: auto;
    background-color: transparent !important;
  }
  .app-email .email-list li:hover .email-list-item-meta .email-list-item-attachment,
  .app-email .email-list li:hover .email-list-item-meta .email-list-item-time,
  .app-email .email-list li:hover .email-list-item-meta .email-list-item-label {
    display: none !important;
  }
  .app-email .email-list li:hover .email-list-item-meta .email-list-item-actions {
    display: block;
  }
  .app-email .app-email-view {
    width: calc(100% - 16.2rem);
  }
}
@media (max-width: 576px) {
  .app-email .app-emails-list .emails-list-header {
    padding: 1rem;
  }
  .app-email .app-emails-list .email-list li {
    padding: 1rem;
  }
  .app-email .app-emails-list .email-list li .email-list-item-username {
    font-size: 0.85rem;
  }
  .app-email .app-emails-list .email-list li .email-list-item-user {
    min-width: auto !important;
    margin-right: 1rem;
  }
  .app-email .app-email-view .email-list-item-username {
    font-size: 1rem;
  }
}

.light-style .app-email .app-email-sidebar {
  background-color: #fff;
}
.light-style .app-email .app-email-sidebar ul li:not(.active) a {
  color: #697a8d;
}
.light-style .app-email .email-list li.email-list-item {
  border-bottom: 1px solid #d9dee3;
}
.light-style .app-email .email-list li.email-list-item .email-list-item-user {
  min-width: 12rem;
}
.light-style .app-email .email-list li.email-list-item.email-marked-read {
  background-color: rgba(67, 89, 113, 0.04);
}
.light-style .app-email .email-list li.email-list-item:hover {
  box-shadow: 0 2px 5px 0 rgba(67, 89, 113, 0.15);
}
.light-style .app-email .email-list li.email-list-item .email-list-item-actions li {
  box-shadow: none;
}
.light-style .app-email .email-list li.email-list-item[data-starred=true] .email-list-item-bookmark {
  color: #ffab00;
}
.light-style .app-email .app-email-view .email-card-last:before {
  background-color: rgba(255, 255, 255, 0.5);
  box-shadow: 0 2px 6px 0 rgba(67, 89, 113, 0.12);
  border: 1px solid rgba(217, 222, 227, 0.5);
}
.light-style .app-email .app-email-view .email-card-last:after {
  background-color: rgba(255, 255, 255, 0.8);
  box-shadow: 0 2px 6px 0 rgba(67, 89, 113, 0.12);
  border: 1px solid rgba(217, 222, 227, 0.6);
}
.light-style .app-email .app-email-view .app-email-view-header {
  background-color: #fff;
}

.dark-style .app-email .app-email-sidebar {
  background-color: #2b2c40;
}
.dark-style .app-email .app-email-sidebar ul li:not(.active) a {
  color: #a3a4cc;
}
.dark-style .app-email .emails-list-header .email-search-input,
.dark-style .app-email .emails-list-header .input-group-text {
  background-color: transparent;
}
.dark-style .app-email .email-list li.email-list-item {
  border-bottom: 1px solid #444564;
}
.dark-style .app-email .email-list li.email-list-item.email-marked-read {
  background-color: rgba(124, 125, 182, 0.06);
}
.dark-style .app-email .email-list li.email-list-item:hover {
  box-shadow: 0 2px 5px 0 rgba(255, 255, 255, 0.15);
}
.dark-style .app-email .email-list li.email-list-item .email-list-item-actions li {
  box-shadow: none;
}
.dark-style .app-email .email-list li.email-list-item[data-starred=true] .email-list-item-bookmark {
  color: #ffab00;
}
.dark-style .app-email .app-email-view .email-card-last:before {
  background-color: rgba(43, 44, 64, 0.5);
  box-shadow: 0 0.125rem 0.5rem 0 rgba(0, 0, 0, 0.16);
  border: 1px solid rgba(68, 69, 100, 0.4);
}
.dark-style .app-email .app-email-view .email-card-last:after {
  background-color: rgba(43, 44, 64, 0.8);
  box-shadow: 0 0.125rem 0.5rem 0 rgba(0, 0, 0, 0.16);
  border: 1px solid rgba(68, 69, 100, 0.6);
}
.dark-style .app-email .app-email-view .app-email-view-header {
  background-color: #2b2c40;
}

[dir=rtl] .app-email .app-emails-list .emails-list-header .dropdown-menu-end {
  right: auto !important;
  left: 0 !important;
}
[dir=rtl] .app-email .app-email-sidebar {
  right: calc(-16.25rem - 1.2rem);
  left: auto;
}
[dir=rtl] .app-email .app-email-sidebar.show {
  right: 0;
  left: auto;
}
[dir=rtl] .app-email .app-email-sidebar .email-filters li {
  border-left: 0;
  border-right: 2px solid transparent;
}
[dir=rtl] .app-email .app-email-compose .modal-dialog {
  left: 0;
  right: auto;
}
[dir=rtl] .app-email .app-email-view {
  right: auto;
  left: -100%;
}
[dir=rtl] .app-email .app-email-view.show {
  right: auto;
  left: -1px;
}
[dir=rtl] .app-email .app-email-view .app-email-view-header .bx-chevron-right,
[dir=rtl] .app-email .app-email-view .app-email-view-header .bx-chevron-left {
  transform: rotate(180deg);
}
@media (min-width: 1199px) {
  [dir=rtl] .email-list li .email-list-item-meta {
    text-align: left;
  }
}
@media (max-width: 576px) {
  [dir=rtl] .app-emails-list .email-list li .email-list-item-user {
    margin-left: 1rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9zY3NzL3BhZ2VzL2FwcC1lbWFpbC5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9zY3NzL21peGlucy9fYnJlYWtwb2ludHMuc2NzcyIsInZlbmRvci9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvX3ZhcmlhYmxlcy5zY3NzIiwidmVuZG9yL3Njc3MvX2Jvb3RzdHJhcC1leHRlbmRlZC9fdmFyaWFibGVzLWRhcmsuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQkE7RUFDRTtFQUNBLFFBWGlCO0VBWWpCOztBQzJDRTtFRHpDQTtJQUNFOzs7QUFLSjtFQUNFO0VBQ0E7RUFDQSxPQXhCa0I7RUF5QmxCO0VBQ0E7RUFDQSxZQTNCa0I7RUE0QmxCOztBQUVBO0VBQ0U7O0FBR0Y7RUFDRTs7QUFHRjtFQUNFOztBQ2lCRjtFRGZJO0lBQ0U7OztBQUlKO0VBQ0U7RUFDQTs7QUFFQTtFQUNFOztBQU1GO0VBQ0UsY0V6QkQ7O0FGMkJEO0VBQ0UsV0VrSks7O0FGMUlYO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7O0FBR0E7RUFDRTs7QUFJSjtFQUNFOztBQUdGO0VBQ0U7O0FBRUY7RUFDRTs7QUFFRjtBQUFBO0VBRUU7O0FBT0E7RUFDRTs7QUFHSjtFQUNFOztBQ2pERjtFRG1ESTtJQUNFOzs7QUFJSjtFQUNFO0VBQ0E7RUFDQTtFQUNBOztBQUVBO0VBQ0U7O0FBR0Y7RUFDRTs7QUFFRjtFQUNFO0VBQ0E7RUFDQTs7QUFJQTtFQUNFOztBQUVBO0VBQ0U7O0FBS047RUFDRTtFQUNBOztBQU1GO0VBQ0U7O0FBT1I7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBLFFBaktlO0VBa0tmO0VBQ0E7O0FDNUdBO0VENkdBO0lBRUk7OztBQUlKO0VBQ0U7RUFDQTs7QUFHRjtFQUNFOztBQUdGO0VBQ0U7O0FDN0hGO0VEK0hJO0lBQ0U7OztBQUlKO0VBQ0U7O0FBRUE7RUFDRTs7QUFHSjtBQUFBO0VBRUU7O0FBR0Y7RUFDRTs7QUFHRjtFQUNFOztBQUVBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUFHRjtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FBSUE7RUFFRTs7QUFRVjtFQUVJO0lBQ0U7OztBQUtOO0VBQ0U7SUFDRTtJQUNBO0lBQ0E7O0VBTUk7QUFBQTtBQUFBO0lBR0U7O0VBR0Y7SUFDRTs7RUFNUjtJQUNFOzs7QUFJSjtFQUVJO0lBQ0U7O0VBSUE7SUFDRTs7RUFFQTtJQUNFOztFQUVGO0lBQ0U7SUFDQTs7RUFPTjtJQUNFOzs7O0FBVUY7RUFDRSxrQkU5U0E7O0FGbVRNO0VBQ0UsT0V6TUg7O0FGaU5MO0VBRUU7O0FBQ0E7RUFDRTs7QUFFRjtFQUNFOztBQUdGO0VBQ0U7O0FBR0Y7RUFDRTs7QUFJQTtFQUNFLE9FblRMOztBRjJUQztFQUNFO0VBQ0EsWUU4Uk07RUY3Uk47O0FBR0Y7RUFDRTtFQUNBLFlFd1JNO0VGdlJOOztBQUdKO0VBQ0Usa0JFcldGOzs7QUZnWEY7RUFDRSxrQkdyTkU7O0FIeU5JO0VBQ0UsT0doVEg7O0FId1RMO0FBQUE7RUFFRTs7QUFLRjtFQUNFOztBQUNBO0VBQ0U7O0FBR0Y7RUFDRTs7QUFHRjtFQUNFOztBQUdBO0VBQ0UsT0dyWEw7O0FINlhDO0VBQ0U7RUFDQSxZR2hRTTtFSGlRTjs7QUFHRjtFQUNFO0VBQ0EsWUd0UU07RUh1UU47O0FBR0o7RUFDRSxrQkc3UUE7OztBSDBSQTtFQUNFO0VBQ0E7O0FBS047RUFDRTtFQUNBOztBQUNBO0VBQ0U7RUFDQTs7QUFJQTtFQUNFO0VBQ0E7O0FBTUo7RUFDRTtFQUNBOztBQUlKO0VBQ0U7RUFDQTs7QUFFQTtFQUNFO0VBQ0E7O0FBSUE7QUFBQTtFQUVFOztBQU1SO0VBRUk7SUFDRTs7O0FBS047RUFJUTtJQUNFIiwiZmlsZSI6InZlbmRvci9zY3NzL3BhZ2VzL2FwcC1lbWFpbC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAqIEFwcCBFbWFpbFxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG5AdXNlICcuLi9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUnIGFzIGxpZ2h0O1xyXG5AdXNlICcuLi9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUtZGFyaycgYXMgZGFyaztcclxuQGltcG9ydCAnLi4vX2N1c3RvbS12YXJpYWJsZXMvcGFnZXMnO1xyXG5cclxuJGVtYWlsLXNpZGViYXItd2lkdGg6IDE2LjI1cmVtO1xyXG4kZW1haWwtYXBwLWhlaWdodDogY2FsYygxMDB2aCAtIDEwLjVyZW0pO1xyXG4kZW1haWwtYXBwLWhvcml6b250YWwtaGVpZ2h0LWRpZmY6IDMuNXJlbTtcclxuJGVtYWlsLWxpc3QtaXRlbS1tZXRhLXBhZGRpbmctbGVmdDogMnJlbTtcclxuJGVtYWlsLXZpZXctd2lkdGg6IDE2LjJyZW07XHJcbiRlbWFpbC1wYWRkaW5nLXg6IDFyZW07XHJcbiRlbWFpbC1wYWRkaW5nLXk6IDAuOTdyZW07XHJcbiRlbWFpbC1maWx0ZXItcGFkZGluZy15OiAwLjM3NXJlbTtcclxuJGVtYWlsLWZpbHRlci1wYWRkaW5nLXg6IDEuMjVyZW07XHJcblxyXG4uYXBwLWVtYWlsIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgaGVpZ2h0OiAkZW1haWwtYXBwLWhlaWdodDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIEBpbmNsdWRlIGxpZ2h0Lm1lZGlhLWJyZWFrcG9pbnQtdXAoeGwpIHtcclxuICAgIC5sYXlvdXQtaG9yaXpvbnRhbCAmIHtcclxuICAgICAgaGVpZ2h0OiBjYWxjKCRlbWFpbC1hcHAtaGVpZ2h0IC0gJGVtYWlsLWFwcC1ob3Jpem9udGFsLWhlaWdodC1kaWZmKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIEVtYWlsIHNpZGViYXJcclxuICAuYXBwLWVtYWlsLXNpZGViYXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogY2FsYygtI3skZW1haWwtc2lkZWJhci13aWR0aH0gLSAxLjJyZW0pO1xyXG4gICAgd2lkdGg6ICRlbWFpbC1zaWRlYmFyLXdpZHRoO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgei1pbmRleDogNDtcclxuICAgIGZsZXgtYmFzaXM6ICRlbWFpbC1zaWRlYmFyLXdpZHRoO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XHJcblxyXG4gICAgLmJ0bi1jb21wb3N0LXdyYXBwZXIge1xyXG4gICAgICBwYWRkaW5nOiAxLjI1cmVtIDEuMjVyZW07XHJcbiAgICB9XHJcblxyXG4gICAgJi5zaG93IHtcclxuICAgICAgbGVmdDogMDtcclxuICAgIH1cclxuXHJcbiAgICAuZW1haWwtZmlsdGVycyB7XHJcbiAgICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDE1LjRyZW0pO1xyXG4gICAgICBAaW5jbHVkZSBsaWdodC5tZWRpYS1icmVha3BvaW50LXVwKHhsKSB7XHJcbiAgICAgICAgLmxheW91dC1ob3Jpem9udGFsICYge1xyXG4gICAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTUuNHJlbSAtICRlbWFpbC1hcHAtaG9yaXpvbnRhbC1oZWlnaHQtZGlmZik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBsaSB7XHJcbiAgICAgICAgcGFkZGluZzogJGVtYWlsLWZpbHRlci1wYWRkaW5nLXkgJGVtYWlsLWZpbHRlci1wYWRkaW5nLXg7XHJcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHJcbiAgICAgICAgaDYge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gZW1haWwgc2lkZWJhciBzdHlsZXNcclxuICAgICAgLmVtYWlsLWZpbHRlci1mb2xkZXJzIHtcclxuICAgICAgICBsaS5hY3RpdmUge1xyXG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiBsaWdodC4kcHJpbWFyeTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaSB7XHJcbiAgICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRmb250LXNpemUteGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBFbWFpbCBjb21wb3NlXHJcbiAgLmFwcC1lbWFpbC1jb21wb3NlIHtcclxuICAgIC5tb2RhbC1kaWFsb2cge1xyXG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgIGJvdHRvbTogMDtcclxuICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gICAgLmVtYWlsLWNvbXBvc2UtdG8ge1xyXG4gICAgICAuc2VsZWN0Mi1zZWxlY3Rpb24ge1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5lbWFpbC1jb21wb3NlLXRvZ2dsZS13cmFwcGVyIHtcclxuICAgICAgd2lkdGg6IDgwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLnFsLWVkaXRvciB7XHJcbiAgICAgIG1pbi1oZWlnaHQ6IDEwcmVtO1xyXG4gICAgfVxyXG4gICAgLnFsLXNub3cucWwtdG9vbGJhciB7XHJcbiAgICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xyXG4gICAgfVxyXG4gICAgLnFsLWVkaXRvcixcclxuICAgIC5xbC1lZGl0b3IucWwtYmxhbms6OmJlZm9yZSB7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMS41cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gRW1haWwgbGlzdFxyXG4gIC5hcHAtZW1haWxzLWxpc3Qge1xyXG4gICAgLmVtYWlscy1saXN0LWhlYWRlciB7XHJcbiAgICAgIC5lbWFpbHMtbGlzdC1oZWFkZXItaHIge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDAuM3JlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmVtYWlsLWxpc3Qge1xyXG4gICAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAxNy41cmVtKTtcclxuICAgICAgQGluY2x1ZGUgbGlnaHQubWVkaWEtYnJlYWtwb2ludC11cCh4bCkge1xyXG4gICAgICAgIC5sYXlvdXQtaG9yaXpvbnRhbCAmIHtcclxuICAgICAgICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDE3LjVyZW0gLSAkZW1haWwtYXBwLWhvcml6b250YWwtaGVpZ2h0LWRpZmYpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgbGkge1xyXG4gICAgICAgIHBhZGRpbmc6ICRlbWFpbC1wYWRkaW5nLXkgJGVtYWlsLXBhZGRpbmcteDtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4xNXMgZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcblxyXG4gICAgICAgIC5lbWFpbC1saXN0LWl0ZW0tc3ViamVjdCB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDAuODVyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZW1haWwtbGlzdC1pdGVtLXVzZXJuYW1lIHtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5lbWFpbC1saXN0LWl0ZW0tdGltZSB7XHJcbiAgICAgICAgICB3aWR0aDogNjBweDtcclxuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmVtYWlsLWxpc3QtaXRlbS1tZXRhIHtcclxuICAgICAgICAgIC5lbWFpbC1saXN0LWl0ZW0tYWN0aW9ucyB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpub3QoLmxpc3QtaW5saW5lLWl0ZW0pOmhvdmVyIHtcclxuICAgICAgICAgIHotaW5kZXg6IDU7XHJcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJweCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBlbWFpbCBsaXN0IGNoZWNrYm94IG1hcmdpblxyXG4gICAgICAuZW1haWwtbGlzdC1pdGVtIHtcclxuICAgICAgICAuZm9ybS1jaGVjayB7XHJcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gRW1haWwgdmlld1xyXG4gIC5hcHAtZW1haWwtdmlldyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICByaWdodDogLTEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogJGVtYWlsLWFwcC1oZWlnaHQ7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlO1xyXG4gICAgLmxheW91dC1ob3Jpem9udGFsICYge1xyXG4gICAgICBAaW5jbHVkZSBsaWdodC5tZWRpYS1icmVha3BvaW50LXVwKHhsKSB7XHJcbiAgICAgICAgaGVpZ2h0OiBjYWxjKCRlbWFpbC1hcHAtaGVpZ2h0IC0gJGVtYWlsLWFwcC1ob3Jpem9udGFsLWhlaWdodC1kaWZmKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYuc2hvdyB7XHJcbiAgICAgIHJpZ2h0OiAtMXB4O1xyXG4gICAgICB6LWluZGV4OiA0O1xyXG4gICAgfVxyXG5cclxuICAgIC5hcHAtZW1haWwtdmlldy1oZWFkZXIge1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMS4zcmVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5hcHAtZW1haWwtdmlldy1jb250ZW50IHtcclxuICAgICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTdyZW0pO1xyXG4gICAgICBAaW5jbHVkZSBsaWdodC5tZWRpYS1icmVha3BvaW50LXVwKHhsKSB7XHJcbiAgICAgICAgLmxheW91dC1ob3Jpem9udGFsICYge1xyXG4gICAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTdyZW0gLSAkZW1haWwtYXBwLWhvcml6b250YWwtaGVpZ2h0LWRpZmYpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLnFsLWNvbnRhaW5lciB7XHJcbiAgICAgICAgYm9yZGVyOiAwO1xyXG5cclxuICAgICAgICAucWwtZWRpdG9yIHtcclxuICAgICAgICAgIG1pbi1oZWlnaHQ6IDVyZW07XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIC5xbC1lZGl0b3IsXHJcbiAgICAgIC5xbC1lZGl0b3IucWwtYmxhbms6OmJlZm9yZSB7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5lbWFpbC1jYXJkLXByZXYge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5lbWFpbC1jYXJkLWxhc3Qge1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlLWluLW91dDtcclxuXHJcbiAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgYm90dG9tOiAxcmVtO1xyXG4gICAgICAgICAgbGVmdDogMXJlbTtcclxuICAgICAgICAgIHJpZ2h0OiAxcmVtO1xyXG4gICAgICAgICAgdG9wOiAtMnJlbTtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XHJcbiAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICBib3R0b206IDAuNXJlbTtcclxuICAgICAgICAgIGxlZnQ6IDAuNXJlbTtcclxuICAgICAgICAgIHJpZ2h0OiAwLjVyZW07XHJcbiAgICAgICAgICB0b3A6IC0xcmVtO1xyXG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTtcclxuICAgICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLmhpZGUtcHNldWRvIHtcclxuICAgICAgICAgICY6YmVmb3JlLFxyXG4gICAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIFJlc3BvbnNpdmUgc3R5bGVcclxuICBAbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XHJcbiAgICAuZW1haWwtbGlzdCBsaSB7XHJcbiAgICAgIC5lbWFpbC1saXN0LWl0ZW0tbWV0YSB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjQ1cmVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcclxuICAgIC5hcHAtZW1haWwtc2lkZWJhciB7XHJcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICAuZW1haWwtbGlzdCB7XHJcbiAgICAgIGxpOmhvdmVyIHtcclxuICAgICAgICAuZW1haWwtbGlzdC1pdGVtLW1ldGEge1xyXG4gICAgICAgICAgLmVtYWlsLWxpc3QtaXRlbS1hdHRhY2htZW50LFxyXG4gICAgICAgICAgLmVtYWlsLWxpc3QtaXRlbS10aW1lLFxyXG4gICAgICAgICAgLmVtYWlsLWxpc3QtaXRlbS1sYWJlbCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAuZW1haWwtbGlzdC1pdGVtLWFjdGlvbnMge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuYXBwLWVtYWlsLXZpZXcge1xyXG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gI3skZW1haWwtdmlldy13aWR0aH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICAuYXBwLWVtYWlscy1saXN0IHtcclxuICAgICAgLmVtYWlscy1saXN0LWhlYWRlciB7XHJcbiAgICAgICAgcGFkZGluZzogMXJlbTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLmVtYWlsLWxpc3Qge1xyXG4gICAgICAgIGxpIHtcclxuICAgICAgICAgIHBhZGRpbmc6IDFyZW07XHJcblxyXG4gICAgICAgICAgLmVtYWlsLWxpc3QtaXRlbS11c2VybmFtZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC44NXJlbTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5lbWFpbC1saXN0LWl0ZW0tdXNlciB7XHJcbiAgICAgICAgICAgIG1pbi13aWR0aDogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDFyZW07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmFwcC1lbWFpbC12aWV3IHtcclxuICAgICAgLmVtYWlsLWxpc3QtaXRlbS11c2VybmFtZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBMaWdodCBzdHlsZVxyXG5AaWYgJGVuYWJsZS1saWdodC1zdHlsZSB7XHJcbiAgLmxpZ2h0LXN0eWxlIHtcclxuICAgIC5hcHAtZW1haWwge1xyXG4gICAgICAuYXBwLWVtYWlsLXNpZGViYXIge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0LiRjYXJkLWJnO1xyXG5cclxuICAgICAgICB1bCB7XHJcbiAgICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgICY6bm90KC5hY3RpdmUpIHtcclxuICAgICAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBsaWdodC4kYm9keS1jb2xvcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5lbWFpbC1saXN0IHtcclxuICAgICAgICBsaS5lbWFpbC1saXN0LWl0ZW0ge1xyXG4gICAgICAgICAgLy8gYm9yZGVyIGJvdHRvbSBpbiBlbWFpbCBsaXN0XHJcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHQuJGJvcmRlci1jb2xvcjtcclxuICAgICAgICAgIC5lbWFpbC1saXN0LWl0ZW0tdXNlciB7XHJcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTJyZW07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmLmVtYWlsLW1hcmtlZC1yZWFkIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYShsaWdodC4kYmxhY2ssIDAuMDQpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAwIDJweCA1cHggMCByZ2JhKGxpZ2h0LiRibGFjaywgMC4xNSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLmVtYWlsLWxpc3QtaXRlbS1hY3Rpb25zIGxpIHtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmW2RhdGEtc3RhcnJlZD0ndHJ1ZSddIHtcclxuICAgICAgICAgICAgLmVtYWlsLWxpc3QtaXRlbS1ib29rbWFyayB7XHJcbiAgICAgICAgICAgICAgY29sb3I6IGxpZ2h0LiR3YXJuaW5nO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAuYXBwLWVtYWlsLXZpZXcge1xyXG4gICAgICAgIC5lbWFpbC1jYXJkLWxhc3Qge1xyXG4gICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKGxpZ2h0LiRjYXJkLWJnLCAwLjUpO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiBsaWdodC4kY2FyZC1ib3gtc2hhZG93O1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKGxpZ2h0LiRib3JkZXItY29sb3IsIDAuNSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEobGlnaHQuJGNhcmQtYmcsIDAuOCk7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IGxpZ2h0LiRjYXJkLWJveC1zaGFkb3c7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEobGlnaHQuJGJvcmRlci1jb2xvciwgMC42KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLmFwcC1lbWFpbC12aWV3LWhlYWRlciB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodC4kY2FyZC1iZztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIERhcmsgc3R5bGVcclxuQGlmICRlbmFibGUtZGFyay1zdHlsZSB7XHJcbiAgLmRhcmstc3R5bGUge1xyXG4gICAgLmFwcC1lbWFpbCB7XHJcbiAgICAgIC5hcHAtZW1haWwtc2lkZWJhciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGFyay4kY2FyZC1iZztcclxuICAgICAgICB1bCB7XHJcbiAgICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgICY6bm90KC5hY3RpdmUpIHtcclxuICAgICAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBkYXJrLiRib2R5LWNvbG9yO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLmVtYWlscy1saXN0LWhlYWRlciB7XHJcbiAgICAgICAgLmVtYWlsLXNlYXJjaC1pbnB1dCxcclxuICAgICAgICAuaW5wdXQtZ3JvdXAtdGV4dCB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5lbWFpbC1saXN0IHtcclxuICAgICAgICBsaS5lbWFpbC1saXN0LWl0ZW0ge1xyXG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGRhcmsuJGJvcmRlci1jb2xvcjtcclxuICAgICAgICAgICYuZW1haWwtbWFya2VkLXJlYWQge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKGRhcmsuJGJhc2UsIDAuMDYpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAwIDJweCA1cHggMCByZ2JhKGRhcmsuJHdoaXRlLCAwLjE1KTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAuZW1haWwtbGlzdC1pdGVtLWFjdGlvbnMgbGkge1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgJltkYXRhLXN0YXJyZWQ9J3RydWUnXSB7XHJcbiAgICAgICAgICAgIC5lbWFpbC1saXN0LWl0ZW0tYm9va21hcmsge1xyXG4gICAgICAgICAgICAgIGNvbG9yOiBkYXJrLiR3YXJuaW5nO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAuYXBwLWVtYWlsLXZpZXcge1xyXG4gICAgICAgIC5lbWFpbC1jYXJkLWxhc3Qge1xyXG4gICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKGRhcmsuJGNhcmQtYmcsIDAuNSk7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IGRhcmsuJGNhcmQtYm94LXNoYWRvdztcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYShkYXJrLiRib3JkZXItY29sb3IsIDAuNCk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoZGFyay4kY2FyZC1iZywgMC44KTtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogZGFyay4kY2FyZC1ib3gtc2hhZG93O1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKGRhcmsuJGJvcmRlci1jb2xvciwgMC42KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLmFwcC1lbWFpbC12aWV3LWhlYWRlciB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrLiRjYXJkLWJnO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gUlRMXHJcbkBpZiAkZW5hYmxlLXJ0bC1zdXBwb3J0IHtcclxuICBbZGlyPSdydGwnXSB7XHJcbiAgICAuYXBwLWVtYWlsIHtcclxuICAgICAgLmFwcC1lbWFpbHMtbGlzdCB7XHJcbiAgICAgICAgLmVtYWlscy1saXN0LWhlYWRlciB7XHJcbiAgICAgICAgICAuZHJvcGRvd24tbWVudS1lbmQge1xyXG4gICAgICAgICAgICByaWdodDogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICBsZWZ0OiAwICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAuYXBwLWVtYWlsLXNpZGViYXIge1xyXG4gICAgICAgIHJpZ2h0OiBjYWxjKC0jeyRlbWFpbC1zaWRlYmFyLXdpZHRofSAtIDEuMnJlbSk7XHJcbiAgICAgICAgbGVmdDogYXV0bztcclxuICAgICAgICAmLnNob3cge1xyXG4gICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICBsZWZ0OiBhdXRvO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmVtYWlsLWZpbHRlcnMge1xyXG4gICAgICAgICAgbGkge1xyXG4gICAgICAgICAgICBib3JkZXItbGVmdDogMDtcclxuICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAuYXBwLWVtYWlsLWNvbXBvc2Uge1xyXG4gICAgICAgIC5tb2RhbC1kaWFsb2cge1xyXG4gICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgIHJpZ2h0OiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLmFwcC1lbWFpbC12aWV3IHtcclxuICAgICAgICByaWdodDogYXV0bztcclxuICAgICAgICBsZWZ0OiAtMTAwJTtcclxuXHJcbiAgICAgICAgJi5zaG93IHtcclxuICAgICAgICAgIHJpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgbGVmdDogLTFweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5hcHAtZW1haWwtdmlldy1oZWFkZXIge1xyXG4gICAgICAgICAgLmJ4LWNoZXZyb24tcmlnaHQsXHJcbiAgICAgICAgICAuYngtY2hldnJvbi1sZWZ0IHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XHJcbiAgICAgIC5lbWFpbC1saXN0IGxpIHtcclxuICAgICAgICAuZW1haWwtbGlzdC1pdGVtLW1ldGEge1xyXG4gICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcclxuICAgICAgLmFwcC1lbWFpbHMtbGlzdCB7XHJcbiAgICAgICAgLmVtYWlsLWxpc3Qge1xyXG4gICAgICAgICAgbGkge1xyXG4gICAgICAgICAgICAuZW1haWwtbGlzdC1pdGVtLXVzZXIge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi8vIEJyZWFrcG9pbnQgdmlld3BvcnQgc2l6ZXMgYW5kIG1lZGlhIHF1ZXJpZXMuXG4vL1xuLy8gQnJlYWtwb2ludHMgYXJlIGRlZmluZWQgYXMgYSBtYXAgb2YgKG5hbWU6IG1pbmltdW0gd2lkdGgpLCBvcmRlciBmcm9tIHNtYWxsIHRvIGxhcmdlOlxuLy9cbi8vICAgICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCwgeHhsOiAxNDAwcHgpXG4vL1xuLy8gVGhlIG1hcCBkZWZpbmVkIGluIHRoZSBgJGdyaWQtYnJlYWtwb2ludHNgIGdsb2JhbCB2YXJpYWJsZSBpcyB1c2VkIGFzIHRoZSBgJGJyZWFrcG9pbnRzYCBhcmd1bWVudCBieSBkZWZhdWx0LlxuXG4vLyBOYW1lIG9mIHRoZSBuZXh0IGJyZWFrcG9pbnQsIG9yIG51bGwgZm9yIHRoZSBsYXN0IGJyZWFrcG9pbnQuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtKVxuLy8gICAgbWRcbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4LCB4eGw6IDE0MDBweCkpXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAkYnJlYWtwb2ludC1uYW1lczogKHhzIHNtIG1kIGxnIHhsIHh4bCkpXG4vLyAgICBtZFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbmV4dCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cywgJGJyZWFrcG9pbnQtbmFtZXM6IG1hcC1rZXlzKCRicmVha3BvaW50cykpIHtcbiAgJG46IGluZGV4KCRicmVha3BvaW50LW5hbWVzLCAkbmFtZSk7XG4gIEBpZiBub3QgJG4ge1xuICAgIEBlcnJvciBcImJyZWFrcG9pbnQgYCN7JG5hbWV9YCBub3QgZm91bmQgaW4gYCN7JGJyZWFrcG9pbnRzfWBcIjtcbiAgfVxuICBAcmV0dXJuIGlmKCRuIDwgbGVuZ3RoKCRicmVha3BvaW50LW5hbWVzKSwgbnRoKCRicmVha3BvaW50LW5hbWVzLCAkbiArIDEpLCBudWxsKTtcbn1cblxuLy8gTWluaW11bSBicmVha3BvaW50IHdpZHRoLiBOdWxsIGZvciB0aGUgc21hbGxlc3QgKGZpcnN0KSBicmVha3BvaW50LlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbWluKHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgsIHh4bDogMTQwMHB4KSlcbi8vICAgIDU3NnB4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbWluICE9IDAsICRtaW4sIG51bGwpO1xufVxuXG4vLyBNYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguXG4vLyBUaGUgbWF4aW11bSB2YWx1ZSBpcyByZWR1Y2VkIGJ5IDAuMDJweCB0byB3b3JrIGFyb3VuZCB0aGUgbGltaXRhdGlvbnMgb2Zcbi8vIGBtaW4tYCBhbmQgYG1heC1gIHByZWZpeGVzIGFuZCB2aWV3cG9ydHMgd2l0aCBmcmFjdGlvbmFsIHdpZHRocy5cbi8vIFNlZSBodHRwczovL3d3dy53My5vcmcvVFIvbWVkaWFxdWVyaWVzLTQvI21xLW1pbi1tYXhcbi8vIFVzZXMgMC4wMnB4IHJhdGhlciB0aGFuIDAuMDFweCB0byB3b3JrIGFyb3VuZCBhIGN1cnJlbnQgcm91bmRpbmcgYnVnIGluIFNhZmFyaS5cbi8vIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTc4MjYxXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1tYXgobWQsICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCwgeHhsOiAxNDAwcHgpKVxuLy8gICAgNzY3Ljk4cHhcbkBmdW5jdGlvbiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWF4OiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICBAcmV0dXJuIGlmKCRtYXggYW5kICRtYXggPiAwLCAkbWF4IC0gLjAyLCBudWxsKTtcbn1cblxuLy8gUmV0dXJucyBhIGJsYW5rIHN0cmluZyBpZiBzbWFsbGVzdCBicmVha3BvaW50LCBvdGhlcndpc2UgcmV0dXJucyB0aGUgbmFtZSB3aXRoIGEgZGFzaCBpbiBmcm9udC5cbi8vIFVzZWZ1bCBmb3IgbWFraW5nIHJlc3BvbnNpdmUgdXRpbGl0aWVzLlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtaW5maXgoeHMsICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCwgeHhsOiAxNDAwcHgpKVxuLy8gICAgXCJcIiAgKFJldHVybnMgYSBibGFuayBzdHJpbmcpXG4vLyAgICA+PiBicmVha3BvaW50LWluZml4KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgsIHh4bDogMTQwMHB4KSlcbi8vICAgIFwiLXNtXCJcbkBmdW5jdGlvbiBicmVha3BvaW50LWluZml4KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gIEByZXR1cm4gaWYoYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cykgPT0gbnVsbCwgXCJcIiwgXCItI3skbmFtZX1cIik7XG59XG5cbi8vIE1lZGlhIG9mIGF0IGxlYXN0IHRoZSBtaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE5vIHF1ZXJ5IGZvciB0aGUgc21hbGxlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgd2lkZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgQGlmICRtaW4ge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIE1lZGlhIG9mIGF0IG1vc3QgdGhlIG1heGltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBsYXJnZXN0IGJyZWFrcG9pbnQuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQgYW5kIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgQGlmICRtYXgge1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIE1lZGlhIHRoYXQgc3BhbnMgbXVsdGlwbGUgYnJlYWtwb2ludCB3aWR0aHMuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgYmV0d2VlbiB0aGUgbWluIGFuZCBtYXggYnJlYWtwb2ludHNcbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LWJldHdlZW4oJGxvd2VyLCAkdXBwZXIsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJGxvd2VyLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkdXBwZXIsICRicmVha3BvaW50cyk7XG5cbiAgQGlmICRtaW4gIT0gbnVsbCBhbmQgJG1heCAhPSBudWxsIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikgYW5kIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWF4ID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGxvd2VyLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWluID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkdXBwZXIsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5cbi8vIE1lZGlhIGJldHdlZW4gdGhlIGJyZWFrcG9pbnQncyBtaW5pbXVtIGFuZCBtYXhpbXVtIHdpZHRocy5cbi8vIE5vIG1pbmltdW0gZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LCBhbmQgbm8gbWF4aW11bSBmb3IgdGhlIGxhcmdlc3Qgb25lLlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IG9ubHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQsIG5vdCB2aWV3cG9ydHMgYW55IHdpZGVyIG9yIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtb25seSgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiAgYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cyk7XG4gICRuZXh0OiBicmVha3BvaW50LW5leHQoJG5hbWUsICRicmVha3BvaW50cyk7XG4gICRtYXg6ICBicmVha3BvaW50LW1heCgkbmV4dCwgJGJyZWFrcG9pbnRzKTtcblxuICBAaWYgJG1pbiAhPSBudWxsIGFuZCAkbWF4ICE9IG51bGwge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSBhbmQgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtYXggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1pbiA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJG5leHQsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG4iLCIvLyBWYXJpYWJsZXNcclxuLy9cclxuLy8gVmFyaWFibGVzIHNob3VsZCBmb2xsb3cgdGhlIGAkY29tcG9uZW50LXN0YXRlLXByb3BlcnR5LXNpemVgIGZvcm11bGEgZm9yXHJcbi8vIGNvbnNpc3RlbnQgbmFtaW5nLiBFeDogJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yIGFuZCAkbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzLlxyXG4vL1xyXG4vLyA/IFRvIGNoYW5nZSB0aGUgbGF5b3V0IGNvbG9ycyB5b3UganVzdCBuZWVkIHRvIGNoYW5nZSB0aGUgJGJsYWNrIGFuZCAkYm9keS1iZyBjb2xvcnMgYW5kIHJlc3QgKGJvcmRlciwgY2FyZCwgZm9udCBjb2xvcnMgYW5kIGV0Yy4uLikgd2lsbCBiZSBhZGp1c3QgYXV0b21hdGljYWxseS5cclxuLy8gPyBVc2UgaHR0cHM6Ly9ub2VsZGVsZ2Fkby5naXRodWIuaW8vc2hhZG93bG9yZC8gdG8gc2VsZWN0IHByb3BlciDwn5KEIENvbG9yIHRpbnRzIGFuZCBzaGFkZSBmb3IgJGJsYWNrIGFuZCAkYm9keS1iZyBjb2xvci5cclxuLy8gPyBjb2xvci12YXJpYWJsZXMgYW5kIHRoZW1lLWNvbG9yLXZhcmlhYmxlcyAoYnJhbmRpbmcgY29sb3JzKSBjYW4gYmUgY2hvb3NlIGFzIHBlciB5b3VyIHByZWZlcmVuY2VzLiBXZSBzdWdnZXN0IHlvdSB0byB1c2UgaHR0cHM6Ly9jb2xvcnMuZXZhLmRlc2lnbi9cclxuLy8gISBMaWdodCBzdHlsZSB1c2UgJGJsYWNrIHRvIGdlbmVyYXRlIHRoZSAkZ3JheSBzaGFkZXMuXHJcbi8vIChDKSBDdXN0b20gdmFyaWFibGVzIGZvciBleHRlbmRlZCBjb21wb25lbnRzIG9mIGJvb3RzdHJhcCBvbmx5XHJcblxyXG4vLyAqIENvbG9yIHN5c3RlbVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZ3JheS1jb2xvci12YXJpYWJsZXNcclxuJHdoaXRlOiAjZmZmICFkZWZhdWx0O1xyXG4kYmxhY2s6ICM0MzU5NzEgIWRlZmF1bHQ7XHJcbiRncmF5LTI1OiByZ2JhKCRibGFjaywgMC4wMjUpICFkZWZhdWx0OyAvLyAoQylcclxuJGdyYXktNTA6IHJnYmEoJGJsYWNrLCAwLjA1KSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRncmF5LTEwMDogcmdiYSgkYmxhY2ssIDAuMSkgIWRlZmF1bHQ7XHJcbiRncmF5LTIwMDogcmdiYSgkYmxhY2ssIDAuMikgIWRlZmF1bHQ7XHJcbiRncmF5LTMwMDogcmdiYSgkYmxhY2ssIDAuMykgIWRlZmF1bHQ7XHJcbiRncmF5LTQwMDogcmdiYSgkYmxhY2ssIDAuNCkgIWRlZmF1bHQ7XHJcbiRncmF5LTUwMDogcmdiYSgkYmxhY2ssIDAuNSkgIWRlZmF1bHQ7XHJcbiRncmF5LTYwMDogcmdiYSgkYmxhY2ssIDAuNikgIWRlZmF1bHQ7XHJcbiRncmF5LTcwMDogcmdiYSgkYmxhY2ssIDAuNykgIWRlZmF1bHQ7XHJcbiRncmF5LTgwMDogcmdiYSgkYmxhY2ssIDAuOCkgIWRlZmF1bHQ7XHJcbiRncmF5LTkwMDogcmdiYSgkYmxhY2ssIDAuOSkgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZ3JheS1jb2xvci12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9ycy1tYXBcclxuJGdyYXlzOiAoXHJcbiAgJzI1JzogJGdyYXktMjUsXHJcbiAgJzUwJzogJGdyYXktNTBcclxuKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBncmF5LWNvbG9ycy1tYXBcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBjb2xvci12YXJpYWJsZXNcclxuJGJsdWU6ICMwMDdiZmYgIWRlZmF1bHQ7XHJcbiRpbmRpZ286ICM2NjEwZjIgIWRlZmF1bHQ7XHJcbiRwdXJwbGU6ICM2OTZjZmYgIWRlZmF1bHQ7XHJcbiRwaW5rOiAjZTgzZThjICFkZWZhdWx0O1xyXG4kcmVkOiAjZmYzZTFkICFkZWZhdWx0O1xyXG4kb3JhbmdlOiAjZmQ3ZTE0ICFkZWZhdWx0O1xyXG4keWVsbG93OiAjZmZhYjAwICFkZWZhdWx0O1xyXG4kZ3JlZW46ICM3MWRkMzcgIWRlZmF1bHQ7XHJcbiR0ZWFsOiAjMjBjOTk3ICFkZWZhdWx0O1xyXG4kY3lhbjogIzAzYzNlYyAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBjb2xvci12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCB0aGVtZS1jb2xvci12YXJpYWJsZXNcclxuJHByaW1hcnk6ICRwdXJwbGUgIWRlZmF1bHQ7XHJcbiRzZWNvbmRhcnk6ICM4NTkyYTMgIWRlZmF1bHQ7XHJcbiRzdWNjZXNzOiAkZ3JlZW4gIWRlZmF1bHQ7XHJcbiRpbmZvOiAkY3lhbiAhZGVmYXVsdDtcclxuJHdhcm5pbmc6ICR5ZWxsb3cgIWRlZmF1bHQ7XHJcbiRkYW5nZXI6ICRyZWQgIWRlZmF1bHQ7XHJcbiRsaWdodDogI2ZjZmRmZCAhZGVmYXVsdDtcclxuJGRhcms6ICMyMzM0NDYgIWRlZmF1bHQ7XHJcbiRncmF5OiAkZ3JheS0xMDAgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9yLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHRoZW1lLWNvbG9ycy1tYXBcclxuJHRoZW1lLWNvbG9yczogKFxyXG4gICdwcmltYXJ5JzogJHByaW1hcnksXHJcbiAgJ3NlY29uZGFyeSc6ICRzZWNvbmRhcnksXHJcbiAgJ3N1Y2Nlc3MnOiAkc3VjY2VzcyxcclxuICAnaW5mbyc6ICRpbmZvLFxyXG4gICd3YXJuaW5nJzogJHdhcm5pbmcsXHJcbiAgJ2Rhbmdlcic6ICRkYW5nZXIsXHJcbiAgJ2xpZ2h0JzogJGxpZ2h0LFxyXG4gICdkYXJrJzogJGRhcmssXHJcbiAgJ2dyYXknOiAkZ3JheVxyXG4pICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9ycy1tYXBcclxuXHJcbiRjb2xvci1zY2hlbWU6ICdsaWdodCcgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBUaGUgY29udHJhc3QgcmF0aW8gdG8gcmVhY2ggYWdhaW5zdCB3aGl0ZSwgdG8gZGV0ZXJtaW5lIGlmIGNvbG9yIGNoYW5nZXMgZnJvbSBcImxpZ2h0XCIgdG8gXCJkYXJrXCIuIEFjY2VwdGFibGUgdmFsdWVzIGZvciBXQ0FHIDIuMCBhcmUgMywgNC41IGFuZCA3LlxyXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL1dDQUcyMC8jdmlzdWFsLWF1ZGlvLWNvbnRyYXN0LWNvbnRyYXN0XHJcbiRtaW4tY29udHJhc3QtcmF0aW86IDEuNyAhZGVmYXVsdDtcclxuXHJcbi8vICogT3B0aW9uc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kZW5hYmxlLW5lZ2F0aXZlLW1hcmdpbnM6IHRydWUgIWRlZmF1bHQ7XHJcbiRlbmFibGUtdmFsaWRhdGlvbi1pY29uczogZmFsc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyBQcmVmaXggZm9yIDpyb290IENTUyB2YXJpYWJsZXNcclxuJHZhcmlhYmxlLXByZWZpeDogYnMtICFkZWZhdWx0O1xyXG5cclxuLy8gKiBTcGFjaW5nXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRzcGFjZXI6IDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4kc2l6ZXMtcHg6IChcclxuICBweC0yMDogMjBweCxcclxuICBweC0zMDogMzBweCxcclxuICBweC00MDogNDBweCxcclxuICBweC01MDogNTBweCxcclxuICBweC03NTogNzVweCxcclxuICBweC0xMDA6IDEwMHB4LFxyXG4gIHB4LTE1MDogMTUwcHgsXHJcbiAgcHgtMjAwOiAyMDBweCxcclxuICBweC0yNTA6IDI1MHB4LFxyXG4gIHB4LTMwMDogMzAwcHgsXHJcbiAgcHgtMzUwOiAzNTBweCxcclxuICBweC00MDA6IDQwMHB4LFxyXG4gIHB4LTUwMDogNTAwcHgsXHJcbiAgcHgtNjAwOiA2MDBweCxcclxuICBweC03MDA6IDcwMHB4LFxyXG4gIHB4LTgwMDogODAwcHgsXHJcbiAgYXV0bzogYXV0b1xyXG4pICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRyZ2JhLXRvLWhleC1iZzogI2ZmZiAhZGVmYXVsdDsgLy8gKEMpXHJcbiRyZ2JhLXRvLWhleC1iZy1pbnZlcnRlZDogIzAwMCAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIEJvZHlcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGJvZHktYmc6ICNmNWY1ZjkgIWRlZmF1bHQ7XHJcbiRib2R5LWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS04MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIExpbmtzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRsaW5rLWNvbG9yOiAkcHJpbWFyeSAhZGVmYXVsdDtcclxuJGxpbmstZGVjb3JhdGlvbjogbm9uZSAhZGVmYXVsdDtcclxuJGxpbmstc2hhZGUtcGVyY2VudGFnZTogMTAlICFkZWZhdWx0O1xyXG4kbGluay1ob3Zlci1jb2xvcjogc2hpZnQtY29sb3IoJGxpbmstY29sb3IsICRsaW5rLXNoYWRlLXBlcmNlbnRhZ2UpICFkZWZhdWx0O1xyXG4kbGluay1ob3Zlci1kZWNvcmF0aW9uOiBudWxsICFkZWZhdWx0O1xyXG5cclxuLy8gKiBHcmlkXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIEdyaWQgY29udGFpbmVyc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGNvbnRhaW5lci1tYXgtd2lkdGhzXHJcbiRjb250YWluZXItbWF4LXdpZHRoczogKFxyXG4gIHNtOiA1NDBweCxcclxuICBtZDogNzIwcHgsXHJcbiAgbGc6IDk2MHB4LFxyXG4gIHhsOiAxMTQwcHgsXHJcbiAgeHhsOiAxNDQwcHggLy8gQ3VzdG9tIHh4bCBzaXplXHJcbikgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgY29udGFpbmVyLW1heC13aWR0aHNcclxuXHJcbiRncmlkLWd1dHRlci13aWR0aDogMS42MjVyZW0gIWRlZmF1bHQ7XHJcbiRjb250YWluZXItcGFkZGluZy14OiAxLjYyNXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjb250YWluZXItcGFkZGluZy14LXNtOiAxcmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGNvbnRhaW5lci1wYWRkaW5nLXk6IDEuNjI1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQ29tcG9uZW50c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm9yZGVyLXZhcmlhYmxlc1xyXG4kYm9yZGVyLXdpZHRoOiAxcHggIWRlZmF1bHQ7XHJcbiRib3JkZXItY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTIwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJGJvcmRlci1pbm5lci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3JkZXItdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm9yZGVyLXJhZGl1cy12YXJpYWJsZXNcclxuJGJvcmRlci1yYWRpdXM6IDAuMzc1cmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy14bDogMC42MjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kYm9yZGVyLXJhZGl1cy1sZzogMC41cmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy1zbTogMC4yNXJlbSAhZGVmYXVsdDtcclxuJGJvcmRlci1yYWRpdXMteHM6IDAuMTI1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRib3JkZXItc2hhZGUtYW1vdW50OiAyNSUgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYm9yZGVyLXRpbnQtYW1vdW50OiA2MCUgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIGJvcmRlci1yYWRpdXMtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm94LXNoYWRvdy12YXJpYWJsZXNcclxuJGJveC1zaGFkb3c6IDAgMC4yNXJlbSAxcmVtIHJnYmEocmdiYS10by1oZXgoJGdyYXktNTAwLCAkcmdiYS10by1oZXgtYmcpLCAwLjQ1KSAhZGVmYXVsdDtcclxuJGJveC1zaGFkb3ctc206IDAgMC4xMjVyZW0gMC4yNXJlbSByZ2JhKHJnYmEtdG8taGV4KCRncmF5LTUwMCwgJHJnYmEtdG8taGV4LWJnKSwgMC40KSAhZGVmYXVsdDtcclxuJGJveC1zaGFkb3ctbGc6IDAgMC42MjVyZW0gMS4yNXJlbSByZ2JhKHJnYmEtdG8taGV4KCRncmF5LTUwMCwgJHJnYmEtdG8taGV4LWJnKSwgMC41KSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3gtc2hhZG93LXZhcmlhYmxlc1xyXG5cclxuJGNvbXBvbmVudC1hY3RpdmUtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJGNvbXBvbmVudC1hY3RpdmUtYmc6IHJnYmEoJHByaW1hcnksIDAuMDgpICFkZWZhdWx0O1xyXG5cclxuJGNvbXBvbmVudC1saW5lLWhlaWdodDogMS41NCAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjb21wb25lbnQtZm9jdXMtc2hhZG93LXdpZHRoOiAycHggIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGZsb2F0aW5nLWNvbXBvbmVudC1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFkZWZhdWx0OyAvLyAoQylcclxuJGZsb2F0aW5nLWNvbXBvbmVudC1zaGFkb3c6ICRib3gtc2hhZG93ICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRoci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuJGhyLW9wYWNpdHk6IDEgIWRlZmF1bHQ7XHJcbiRib3JkZXJlZC1yb3ctYm9yZGVyLWNvbG9yOiAkaHItY29sb3IgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGNhcmV0LXZhcmlhYmxlc1xyXG4kY2FyZXQtd2lkdGg6IDAuNDJlbSAhZGVmYXVsdDtcclxuJGNhcmV0LXZlcnRpY2FsLWFsaWduOiBtaWRkbGUgIWRlZmF1bHQ7XHJcbiRjYXJldC1zcGFjaW5nOiAwLjVlbSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBjYXJldC12YXJpYWJsZXNcclxuXHJcbi8vICogVHlwb2dyYXBoeVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9udC12YXJpYWJsZXNcclxuJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6ICdQdWJsaWMgU2FucycsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgJ094eWdlbicsICdVYnVudHUnLCAnQ2FudGFyZWxsJyxcclxuICAnRmlyYSBTYW5zJywgJ0Ryb2lkIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmICFkZWZhdWx0O1xyXG4kZm9udC1mYW1pbHktc2VyaWY6IEdlb3JnaWEsICdUaW1lcyBOZXcgUm9tYW4nLCBzZXJpZiAhZGVmYXVsdDsgLy8gKEMpXHJcbiRmb250LWZhbWlseS1tb25vc3BhY2U6ICdTRk1vbm8tUmVndWxhcicsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCAnTGliZXJhdGlvbiBNb25vJywgJ0NvdXJpZXIgTmV3JywgbW9ub3NwYWNlICFkZWZhdWx0O1xyXG4vLyBzdHlsZWxpbnQtZW5hYmxlIHZhbHVlLWtleXdvcmQtY2FzZVxyXG4kZm9udC1mYW1pbHktYmFzZTogdmFyKC0tI3skdmFyaWFibGUtcHJlZml4fWZvbnQtc2Fucy1zZXJpZikgIWRlZmF1bHQ7XHJcbiRmb250LWZhbWlseS1jb2RlOiB2YXIoLS0jeyR2YXJpYWJsZS1wcmVmaXh9Zm9udC1tb25vc3BhY2UpICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvbnQtc2l6ZS1yb290IGVmZmVjdHMgdGhlIHZhbHVlIG9mIGByZW1gLCB3aGljaCBpcyB1c2VkIGZvciBhcyB3ZWxsIGZvbnQgc2l6ZXMsIHBhZGRpbmdzIGFuZCBtYXJnaW5zXHJcbi8vICRmb250LXNpemUtYmFzZSBlZmZlY3RzIHRoZSBmb250IHNpemUgb2YgdGhlIGJvZHkgdGV4dFxyXG4kZm9udC1zaXplLXJvb3Q6IDE2cHggIWRlZmF1bHQ7XHJcbiRmb250LXNpemUtYmFzZTogMC45Mzc1cmVtICFkZWZhdWx0OyAvLyBBc3N1bWVzIHRoZSBicm93c2VyIGRlZmF1bHQsIHR5cGljYWxseSBgMTVweC8xNnB4YFxyXG4kZm9udC1zaXplLXhsOiAxLjI1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGZvbnQtc2l6ZS1sZzogMXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1zbTogMC43NXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS14czogJGZvbnQtc2l6ZS1zbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kZm9udC13ZWlnaHQtc2VtaWJvbGQ6IDYwMCAhZGVmYXVsdDsgLy8gKEMpXHJcbiRmb250LXdlaWdodC1ib2xkZXI6IDkwMCAhZGVmYXVsdDtcclxuJGZvbnQtd2VpZ2h0LWxpZ2h0ZXI6IDEwMCAhZGVmYXVsdDtcclxuXHJcbiRsaW5lLWhlaWdodC1iYXNlOiAxLjUzICFkZWZhdWx0O1xyXG4kbGluZS1oZWlnaHQteGw6IDEuNSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRsaW5lLWhlaWdodC1sZzogMS41ICFkZWZhdWx0O1xyXG4kbGluZS1oZWlnaHQtc206IDEuNSAhZGVmYXVsdDtcclxuJGxpbmUtaGVpZ2h0LXhzOiAxLjUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGgxLWZvbnQtc2l6ZTogMi4zNzVyZW0gIWRlZmF1bHQ7XHJcbiRoMi1mb250LXNpemU6IDJyZW0gIWRlZmF1bHQ7XHJcbiRoMy1mb250LXNpemU6IDEuNjI1cmVtICFkZWZhdWx0O1xyXG4kaDQtZm9udC1zaXplOiAxLjM3NXJlbSAhZGVmYXVsdDtcclxuJGg1LWZvbnQtc2l6ZTogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcbiRoNi1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBmb250LXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGhlYWRpbmdzLXZhcmlhYmxlc1xyXG4kaGVhZGluZ3MtbWFyZ2luLWJvdHRvbTogJHNwYWNlciAhZGVmYXVsdDtcclxuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiA1MDAgIWRlZmF1bHQ7XHJcbiRoZWFkaW5ncy1saW5lLWhlaWdodDogMS4xICFkZWZhdWx0O1xyXG4kaGVhZGluZ3MtY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTkwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBoZWFkaW5ncy12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBkaXNwbGF5LWhlYWRpbmdzXHJcbiRkaXNwbGF5LWZvbnQtc2l6ZXM6IChcclxuICAxOiA0cmVtLFxyXG4gIDI6IDMuNXJlbSxcclxuICAzOiAzcmVtLFxyXG4gIDQ6IDIuNXJlbSxcclxuICA1OiAycmVtLFxyXG4gIDY6IDEuNXJlbVxyXG4pICFkZWZhdWx0O1xyXG5cclxuJGRpc3BsYXktZm9udC13ZWlnaHQ6IDUwMCAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBkaXNwbGF5LWhlYWRpbmdzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdHlwZS12YXJpYWJsZXNcclxuJGxlYWQtZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgKiAxLjEyNSAhZGVmYXVsdDtcclxuJGJsb2NrcXVvdGUtZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgKiAxLjEyNSAhZGVmYXVsdDtcclxuJGxlYWQtZm9udC13ZWlnaHQ6IDQwMCAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCB0eXBlLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHR5cGUtdmFyaWFibGVzXHJcbiR0aW55LWZvbnQtc2l6ZTogNzAlICFkZWZhdWx0OyAvLyAoQylcclxuJHNtYWxsLWZvbnQtc2l6ZTogODUlICFkZWZhdWx0O1xyXG4kYmlnLWZvbnQtc2l6ZTogMTEyJSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRsYXJnZS1mb250LXNpemU6IDE1MCUgIWRlZmF1bHQ7IC8vIChDKVxyXG4keGxhcmdlLWZvbnQtc2l6ZTogMTcwJSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kdGV4dC1tdXRlZDogcmdiYS10by1oZXgoJGdyYXktNTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kdGV4dC1tdXRlZC1ob3ZlcjogcmdiYS10by1oZXgoJGdyYXktNjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiR0ZXh0LWxpZ2h0OiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVyOiByZ2JhLXRvLWhleCgkZ3JheS0zMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVzdDogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCB0eXBlLXZhcmlhYmxlc1xyXG5cclxuLy8gKiBaLWluZGV4IG1hc3RlciBsaXN0XHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiR6aW5kZXgtbWVudS1maXhlZDogMTA4MCAhZGVmYXVsdDtcclxuJHppbmRleC1tb2RhbDogMTA5MCAhZGVmYXVsdDtcclxuJHppbmRleC1tb2RhbC1iYWNrZHJvcDogJHppbmRleC1tb2RhbCAtIDEgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtbW9kYWwtdG9wOiAxMDkwICFkZWZhdWx0OyAvLyAoQylcclxuJHppbmRleC1vZmZjYW52YXM6IDEwOTAgIWRlZmF1bHQ7XHJcbiR6aW5kZXgtb2ZmY2FudmFzLWJhY2tkcm9wOiAkemluZGV4LW9mZmNhbnZhcyAtIDEgIWRlZmF1bHQ7XHJcbiR6aW5kZXgtbGF5b3V0LW1vYmlsZTogMTEwMCAhZGVmYXVsdDsgLy8gKEMpXHJcbiR6aW5kZXgtcG9wb3ZlcjogMTA5MSAhZGVmYXVsdDtcclxuJHppbmRleC10b2FzdDogMTA5NSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR6aW5kZXgtdG9vbHRpcDogMTA5OSAhZGVmYXVsdDtcclxuJHppbmRleC1ub3RpZmljYXRpb246IDk5OTk5OSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIFRhYmxlc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGFibGUtdmFyaWFibGVzXHJcbiR0YWJsZS1jZWxsLXBhZGRpbmcteTogMC42MjVyZW0gIWRlZmF1bHQ7XHJcbiR0YWJsZS1jZWxsLXBhZGRpbmcteDogMS4yNXJlbSAhZGVmYXVsdDtcclxuJHRhYmxlLWNlbGwtcGFkZGluZy15LXNtOiAwLjMxMjVyZW0gIWRlZmF1bHQ7XHJcbiR0YWJsZS1jZWxsLXBhZGRpbmcteC1zbTogMC42MjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtY2VsbC12ZXJ0aWNhbC1hbGlnbjogbWlkZGxlICFkZWZhdWx0O1xyXG5cclxuJHRhYmxlLXRoLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtc2VtaWJvbGQgIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtc3RyaXBlZC1iZy1mYWN0b3I6IDAuMDMgIWRlZmF1bHQ7XHJcbiR0YWJsZS1zdHJpcGVkLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRibGFjaywgJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yKSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbiR0YWJsZS1ob3Zlci1iZy1mYWN0b3I6IDAuMDYgIWRlZmF1bHQ7XHJcbiR0YWJsZS1ob3Zlci1iZzogcmdiYSgkYmxhY2ssICR0YWJsZS1ob3Zlci1iZy1mYWN0b3IpICFkZWZhdWx0O1xyXG5cclxuJHRhYmxlLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbiR0YWJsZS1ncm91cC1zZXBhcmF0b3ItY29sb3I6ICR0YWJsZS1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEJ1dHRvbnMgKyBGb3Jtc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteTogMC40Mzc1cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteDogMS4yNXJlbSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LWJhc2UgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtYnRuLWZvY3VzLXdpZHRoOiAwLjA1cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWZvY3VzLWNvbG9yLW9wYWNpdHk6IDAuMSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1mb2N1cy1jb2xvcjogcmdiYSgkY29tcG9uZW50LWFjdGl2ZS1iZywgJGlucHV0LWJ0bi1mb2N1cy1jb2xvci1vcGFjaXR5KSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1mb2N1cy1ibHVyOiAwLjI1cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3c6IDAgMCAkaW5wdXQtYnRuLWZvY3VzLWJsdXIgJGlucHV0LWJ0bi1mb2N1cy13aWR0aCAkaW5wdXQtYnRuLWZvY3VzLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWJ0bi1wYWRkaW5nLXkteHM6IDAgIWRlZmF1bHQ7IC8vIChDKVxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC14czogMC41cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGlucHV0LWJ0bi1mb250LXNpemUteHM6ICRmb250LXNpemUteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXhzOiAkbGluZS1oZWlnaHQteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGlucHV0LWJ0bi1wYWRkaW5nLXktc206IDAuMjVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tcGFkZGluZy14LXNtOiAwLjY4NzVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tZm9udC1zaXplLXNtOiAkZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtOiAkbGluZS1oZWlnaHQtc20gIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteS1sZzogMC43NXJlbSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1wYWRkaW5nLXgtbGc6IDEuNXJlbSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1mb250LXNpemUtbGc6ICRmb250LXNpemUtbGcgIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGc6ICRsaW5lLWhlaWdodC1sZyAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LXhsOiAwLjg3NXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRpbnB1dC1idG4tcGFkZGluZy14LXhsOiAyLjEyNXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRpbnB1dC1idG4tZm9udC1zaXplLXhsOiAkZm9udC1zaXplLXhsICFkZWZhdWx0OyAvLyAoQylcclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodC14bDogJGxpbmUtaGVpZ2h0LXhsICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQnV0dG9uc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYnRuLXBhZGRpbmcteS14czogJGlucHV0LWJ0bi1wYWRkaW5nLXkteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLXBhZGRpbmcteC14czogJGlucHV0LWJ0bi1wYWRkaW5nLXgteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWZvbnQtc2l6ZS14czogJGlucHV0LWJ0bi1mb250LXNpemUteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1wYWRkaW5nLXkteGw6ICRpbnB1dC1idG4tcGFkZGluZy15LXhsICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1wYWRkaW5nLXgteGw6ICRpbnB1dC1idG4tcGFkZGluZy14LXhsICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1mb250LXNpemUteGw6ICRpbnB1dC1idG4tZm9udC1zaXplLXhsICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRidG4tbGluZS1oZWlnaHQteHM6ICRpbnB1dC1idG4tbGluZS1oZWlnaHQteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWxpbmUtaGVpZ2h0LXNtOiAkbGluZS1oZWlnaHQtc207IC8vKEMpXHJcbiRidG4tbGluZS1oZWlnaHQtbGc6ICRsaW5lLWhlaWdodC1sZzsgLy8oQylcclxuJGJ0bi1saW5lLWhlaWdodC14bDogJGlucHV0LWJ0bi1saW5lLWhlaWdodC14bCAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kYnRuLWJveC1zaGFkb3c6IG5vbmUgIWRlZmF1bHQ7XHJcbiRidG4tZm9jdXMtYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuJGJ0bi1hY3RpdmUtYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuXHJcbiRidG4tYm9yZGVyLXJhZGl1cy14czogJGJvcmRlci1yYWRpdXMteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWJvcmRlci1yYWRpdXMteGw6ICRib3JkZXItcmFkaXVzLXhsICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRidG4tdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQgIWRlZmF1bHQ7XHJcblxyXG4kYnRuLWxhYmVsLWJnLXNoYWRlLWFtb3VudDogODQlICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1sYWJlbC1iZy10aW50LWFtb3VudDogODQlICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRidG4tbGFiZWwtZGlzYWJsZWQtYmctc2hhZGUtYW1vdW50OiA4NCUgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWxhYmVsLWRpc2FibGVkLWJnLXRpbnQtYW1vdW50OiA4NCUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1ob3Zlci1iZy1zaGFkZS1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci1iZy10aW50LWFtb3VudDogMTAlICFkZWZhdWx0O1xyXG4kYnRuLWhvdmVyLWJvcmRlci1zaGFkZS1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci1ib3JkZXItdGludC1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1mb2N1cy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1kaXNhYmxlZC1vcGFjaXR5OiAwLjY1ICFkZWZhdWx0O1xyXG5cclxuJGJ0bi1hY3RpdmUtYmctc2hhZGUtYW1vdW50OiAxNSUgIWRlZmF1bHQ7XHJcbiRidG4tYWN0aXZlLWJnLXRpbnQtYW1vdW50OiAxNSUgIWRlZmF1bHQ7XHJcbiRidG4tYWN0aXZlLWJvcmRlci1zaGFkZS1hbW91bnQ6IDE1JSAhZGVmYXVsdDtcclxuJGJ0bi1hY3RpdmUtYm9yZGVyLXRpbnQtYW1vdW50OiAxNSUgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEZvcm1zXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLXRleHQtdmFyaWFibGVzXHJcbiRmb3JtLXRleHQtbWFyZ2luLXRvcDogMC4zcmVtICFkZWZhdWx0O1xyXG4kZm9ybS10ZXh0LWZvbnQtc2l6ZTogJHNtYWxsLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuJGZvcm0tdGV4dC1jb2xvcjogJHRleHQtbGlnaHQgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS10ZXh0LXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tbGFiZWwtdmFyaWFibGVzXHJcbiRmb3JtLWxhYmVsLWZvbnQtc2l6ZTogMC43NXJlbSAhZGVmYXVsdDtcclxuJGZvcm0tbGFiZWwtZm9udC13ZWlnaHQ6IDUwMCAhZGVmYXVsdDtcclxuJGZvcm0tbGFiZWwtY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcclxuJGZvcm0tbGFiZWwtbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQgIWRlZmF1bHQ7IC8vKEMpXHJcbiRmb3JtLWxhYmVsLXRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2UgIWRlZmF1bHQ7IC8vKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1sYWJlbC12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLWlucHV0LXZhcmlhYmxlc1xyXG4kaW5wdXQtcGFkZGluZy14OiAwLjg3NXJlbSAhZGVmYXVsdDtcclxuJGlucHV0LWxpbmUtaGVpZ2h0OiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0ICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LXBhZGRpbmcteC1zbTogMC42MjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtcGFkZGluZy14LWxnOiAxLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWJnOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRpbnB1dC1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktMTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJGlucHV0LWJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWhvdmVyLWJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3Itc2NhbGU6IDUwJSAhZGVmYXVsdDsgLy8oQylcclxuJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvcjogdGludC1jb2xvcigkY29tcG9uZW50LWFjdGl2ZS1iZywgJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvci1zY2FsZSkgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtcGxhY2Vob2xkZXItdHJhbnNpdGlvbjogYWxsIDAuMjVzIGVhc2U7XHJcbiRpbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktNDAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWhlaWdodC1pbm5lcjogcHgtdG8tcmVtKFxyXG4gIGZsb29yKHJlbS10by1weCgoJGlucHV0LWJ0bi1mb250LXNpemUgKiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0KSArICgkaW5wdXQtYnRuLXBhZGRpbmcteSAqIDIpKSlcclxuKSAhZGVmYXVsdDtcclxuJGlucHV0LWhlaWdodC1pbm5lci1zbTogcHgtdG8tcmVtKFxyXG4gIGZsb29yKHJlbS10by1weCgoJGlucHV0LWJ0bi1mb250LXNpemUtc20gKiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtKSArICgkaW5wdXQtYnRuLXBhZGRpbmcteS1zbSAqIDIpKSlcclxuKSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRpbnB1dC1oZWlnaHQtaW5uZXItbGc6IHB4LXRvLXJlbShcclxuICBmbG9vcihyZW0tdG8tcHgoKCRmb250LXNpemUtbGcgKiAkbGluZS1oZWlnaHQtbGcpICsgKCRpbnB1dC1idG4tcGFkZGluZy15LWxnICogMikpKVxyXG4pICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCBmb3JtLWlucHV0LXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tY2hlY2stdmFyaWFibGVzXHJcbiRmb3JtLWNoZWNrLWlucHV0LXdpZHRoOiAxLjJlbSAhZGVmYXVsdDtcclxuJGZvcm0tZGF0YXRhYmxlcy1jaGVjay1pbnB1dC1zaXplOiAxOHB4ICFkZWZhdWx0OyAvLyAoQykgRm9yIGRhdGF0YWJsZXMgd2l0aCBjaGVja2JveC0gdXBkYXRlIGFjY29yZGluZyB0byAkZm9ybS1jaGVjay1pbnB1dC13aWR0aFxyXG5cclxuJGZvcm0tY2hlY2staW5wdXQtYm9yZGVyOiAxcHggc29saWQgJGlucHV0LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLWNoZWNrLWxhYmVsLWN1cnNvcjogcG9pbnRlciAhZGVmYXVsdDtcclxuJGZvcm0tY2hlY2stbGFiZWwtZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0OyAvLyAoQylSXHJcblxyXG4kZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWNvbG9yOiAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuJGZvcm0tY2hlY2staW5wdXQtY2hlY2tlZC1iZy1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMjAgMjAnPjxwYXRoIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J002IDEwbDMgM2w2LTYnLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbiRmb3JtLWNoZWNrLXJhZGlvLWNoZWNrZWQtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nLTQgLTQgOCA4Jz48Y2lyY2xlIHI9JzEuNScgZmlsbD0nI3skZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWNvbG9yfScvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLWNoZWNrLWlucHV0LWluZGV0ZXJtaW5hdGUtY29sb3I6ICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4kZm9ybS1jaGVjay1pbnB1dC1pbmRldGVybWluYXRlLWJnLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAyMCAyMCc+PHBhdGggZmlsbD0nbm9uZScgc3Ryb2tlPScjeyRmb3JtLWNoZWNrLWlucHV0LWluZGV0ZXJtaW5hdGUtY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIHN0cm9rZS13aWR0aD0nMicgZD0nTTYgMTBoOCcvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLWNoZWNrLWlucHV0LWRpc2FibGVkLWJnOiAkaW5wdXQtZGlzYWJsZWQtYmcgIWRlZmF1bHQ7IC8vKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1jaGVjay12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLXN3aXRjaC12YXJpYWJsZXNcclxuJGZvcm0tc3dpdGNoLWNvbG9yOiAkZ3JheS0zMDAgIWRlZmF1bHQ7XHJcbiRmb3JtLXN3aXRjaC13aWR0aDogMmVtICFkZWZhdWx0O1xyXG4kZm9ybS1zd2l0Y2gtcGFkZGluZy1zdGFydDogJGZvcm0tc3dpdGNoLXdpZHRoICsgMC41ZW0gIWRlZmF1bHQ7XHJcblxyXG4kZm9ybS1zd2l0Y2gtY2hlY2tlZC1iZy1wb3NpdGlvbi1ydGw6IGxlZnQgY2VudGVyICFkZWZhdWx0OyAvLyhDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tc3dpdGNoLXZhcmlhYmxlc1xyXG5cclxuLy9pbnB1dC1ncm91cC12YXJpYWJsZXNcclxuJGlucHV0LWdyb3VwLWFkZG9uLWNvbG9yOiAkaW5wdXQtY29sb3IgIWRlZmF1bHQ7XHJcbiRpbnB1dC1ncm91cC1hZGRvbi1iZzogJGlucHV0LWJnICFkZWZhdWx0O1xyXG4kaW5wdXQtZ3JvdXAtYWRkb24tYm9yZGVyLWNvbG9yOiAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGlucHV0LWdyb3VwLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tc2VsZWN0LXZhcmlhYmxlc1xyXG4kZm9ybS1zZWxlY3QtcGFkZGluZy15OiAkaW5wdXQtYnRuLXBhZGRpbmcteSAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LXBhZGRpbmcteDogJGlucHV0LXBhZGRpbmcteCAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nOiAkZm9ybS1zZWxlY3QtcGFkZGluZy14ICsgMXJlbSAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWRpc2FibGVkLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWRpc2FibGVkLWJnOiAkaW5wdXQtZGlzYWJsZWQtYmcgIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1iZy1zaXplOiAxN3B4IDEycHggIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItY29sb3I6ICRncmF5LTYwMCAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWluZGljYXRvcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTYgMTYnPjxwYXRoIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J00yIDVsNiA2IDYtNicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWluZGljYXRvci1ydGw6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDE2IDE2Jz48cGF0aCBmaWxsPSdub25lJyBzdHJva2U9JyN7JGZvcm0tc2VsZWN0LWluZGljYXRvci1jb2xvcn0nIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNMiA1bDYgNiA2LTYnLz48L3N2Zz5cIikgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGZvcm0tc2VsZWN0LWZvY3VzLWJveC1zaGFkb3c6ICRpbnB1dC1idG4tZm9jdXMtYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXktc206ICRpbnB1dC1idG4tcGFkZGluZy15LXNtICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtcGFkZGluZy14LXNtOiAkaW5wdXQtcGFkZGluZy14LXNtICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc2VsZWN0LXBhZGRpbmcteS1sZzogJGlucHV0LWJ0bi1wYWRkaW5nLXktbGcgIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXgtbGc6ICRpbnB1dC1wYWRkaW5nLXgtbGcgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1zZWxlY3QtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1yYW5nZS12YXJpYWJsZXNcclxuJGZvcm0tcmFuZ2UtdHJhY2staGVpZ2h0OiAwLjM3NXJlbSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stYmc6IHJnYmEtdG8taGV4KCRncmF5LTEwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stZGlzYWJsZWQtYmc6ICRncmF5LTUwICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRmb3JtLXJhbmdlLXRodW1iLXdpZHRoOiAwLjg3NXJlbSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItaGVpZ2h0OiAkZm9ybS1yYW5nZS10aHVtYi13aWR0aCAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItYmc6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItYm94LXNoYWRvdzogMCAwIDZweCAwICRncmF5LTQwMCAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItZm9jdXMtYm94LXNoYWRvdzogMCAwIDhweCAwcHggJGdyYXktNDAwICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1hY3RpdmUtYmc6ICRmb3JtLXJhbmdlLXRodW1iLWJnICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tcmFuZ2UtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1mbG9hdGluZy12YXJpYWJsZXNcclxuJGZvcm0tZmxvYXRpbmctbGFiZWwtb3BhY2l0eTogMC43NSAhZGVmYXVsdDtcclxuJGZvcm0tZmxvYXRpbmctdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2UtaW4tb3V0LCB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dCAhZGVmYXVsdDtcclxuJGZvcm0tZmxvYXRpbmctbGFiZWwtdHJhbnNmb3JtLXJ0bDogc2NhbGUoMC44NSkgdHJhbnNsYXRlWSgtMC41cmVtKSB0cmFuc2xhdGVYKC0wLjE1cmVtKSAhZGVmYXVsdDsgLy8gKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1mbG9hdGluZy12YXJpYWJsZXNcclxuXHJcbi8vIEZvcm0gdmFsaWRhdGlvblxyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tZmVlZGJhY2stdmFyaWFibGVzXHJcbiRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yOiAkc3VjY2VzcyAhZGVmYXVsdDtcclxuJGZvcm0tZmVlZGJhY2staW52YWxpZC1jb2xvcjogJGRhbmdlciAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXNlbGVjdC1mZWVkYmFjay1pY29uLXBhZGRpbmc6ICRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZyArICRpbnB1dC1oZWlnaHQtaW5uZXIgIWRlZmF1bHQ7IC8vIChDKVxyXG4kZm9ybS1zZWxlY3QtZmVlZGJhY2staWNvbi1wYWRkaW5nLXNtOiAkZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmcgKyAkaW5wdXQtaGVpZ2h0LWlubmVyLXNtICFkZWZhdWx0OyAvLyAoQylcclxuJGZvcm0tc2VsZWN0LWZlZWRiYWNrLWljb24tcGFkZGluZy1sZzogJGZvcm0tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nICsgJGlucHV0LWhlaWdodC1pbm5lci1sZyAhZGVmYXVsdDsgLy8gKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1mZWVkYmFjay12YXJpYWJsZXNcclxuXHJcbi8vICogTmF2c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2LXNwYWNlcjogMC4xMjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJG5hdi1saW5rLXBhZGRpbmcteTogMC41cmVtICFkZWZhdWx0O1xyXG4kbmF2LWxpbmstcGFkZGluZy14OiAxLjI1cmVtICFkZWZhdWx0O1xyXG4kbmF2LWxpbmstY29sb3I6ICR0ZXh0LW11dGVkLWhvdmVyICFkZWZhdWx0O1xyXG4kbmF2LWxpbmstZGlzYWJsZWQtY29sb3I6ICR0ZXh0LWxpZ2h0ZXIgIWRlZmF1bHQ7XHJcbiRuYXYtbGluay1saW5lLWhlaWdodDogJGNvbXBvbmVudC1saW5lLWhlaWdodCAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kbmF2LWxpbmstcGFkZGluZy15LWxnOiAwLjg3NXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXYtbGluay1wYWRkaW5nLXgtbGc6IDEuMzEyNXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXYtbGluay1saW5lLWhlaWdodC1sZzogJGxpbmUtaGVpZ2h0LWxnICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRuYXYtbGluay1wYWRkaW5nLXktc206IDAuMzEyNXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXYtbGluay1wYWRkaW5nLXgtc206IDAuODc1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJG5hdi1saW5rLWxpbmUtaGVpZ2h0LXNtOiAkbGluZS1oZWlnaHQtc20gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJG5hdi10YWJzLWxpbmstaG92ZXItYm9yZGVyLWNvbG9yOiAkZ3JheS0xMDAgIWRlZmF1bHQ7XHJcbiRuYXYtdGFicy1saW5rLWFjdGl2ZS1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRuYXYtdGFicy1saW5rLWFjdGl2ZS1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kbmF2LXRhYnMtYm9yZGVyLWNvbG9yOiAkbmF2LXRhYnMtbGluay1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcbiRuYXYtdGFicy1saW5rLWFjdGl2ZS1ib3JkZXItY29sb3I6ICRuYXYtdGFicy1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbiRuYXYtdGFicy1idG4tYmctZmFjdG9yOiAwLjE2ICFkZWZhdWx0OyAvLyAoQylcclxuJG5hdi10YWJzLWJ0bi1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0OyAvLyAoQylcclxuJG5hdi10YWJzLWJ0bi1iZzogcmdiYS10by1oZXgoJGdyYXktMTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRuYXYtcGlsbHMtbGluay1hY3RpdmUtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJG5hdi1waWxscy1saW5rLWFjdGl2ZS1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIE5hdmJhclxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2YmFyLXRvZ2dsZXItcGFkZGluZy15OiAwICFkZWZhdWx0O1xyXG4kbmF2YmFyLXRvZ2dsZXItcGFkZGluZy14OiAwICFkZWZhdWx0O1xyXG4kbmF2YmFyLXRvZ2dsZXItZm9udC1zaXplOiAwLjc1cmVtICFkZWZhdWx0O1xyXG5cclxuJG5hdmJhci1kYXJrLWNvbG9yOiByZ2JhKCR3aGl0ZSwgMC44KSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXJrLWhvdmVyLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFyay1hY3RpdmUtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXJrLWRpc2FibGVkLWNvbG9yOiByZ2JhKCR3aGl0ZSwgMC40KSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXJrLXRvZ2dsZXItaWNvbi1iZzogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMTRweCcgaGVpZ2h0PScxMXB4JyB2aWV3Qm94PScwIDAgMTQgMTEnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayclM0UlM0NkZWZzJTNFJTNDcGF0aCBkPSdNMCwwIEwxNCwwIEwxNCwxLjc1IEwwLDEuNzUgTDAsMCBaIE0wLDQuMzc1IEwxNCw0LjM3NSBMMTQsNi4xMjUgTDAsNi4xMjUgTDAsNC4zNzUgWiBNMCw4Ljc1IEwxNCw4Ljc1IEwxNCwxMC41IEwwLDEwLjUgTDAsOC43NSBaJyBpZD0ncGF0aC0xJyUzRSUzQy9wYXRoJTNFJTNDL2RlZnMlM0UlM0NnIGlkPSfwn5KOLVVJLUVsZW1lbnRzJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ2cgaWQ9JzEyKS1OYXZiYXInIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0xMTc0LjAwMDAwMCwgLTEyOTAuMDAwMDAwKSclM0UlM0NnIGlkPSdHcm91cCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMTE3NC4wMDAwMDAsIDEyODguMDAwMDAwKSclM0UlM0NnIGlkPSdJY29uLUNvbG9yJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMi4wMDAwMDApJyUzRSUzQ3VzZSBmaWxsPScjeyRuYXZiYXItZGFyay1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDdXNlIGZpbGwtb3BhY2l0eT0nMC4xJyBmaWxsPScjeyRuYXZiYXItZGFyay1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG5cclxuJG5hdmJhci1saWdodC1jb2xvcjogJGdyYXktNTAwICFkZWZhdWx0O1xyXG4kbmF2YmFyLWxpZ2h0LWhvdmVyLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJG5hdmJhci1saWdodC1hY3RpdmUtY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kbmF2YmFyLWxpZ2h0LWRpc2FibGVkLWNvbG9yOiAkZ3JheS0zMDAgIWRlZmF1bHQ7XHJcbiRuYXZiYXItbGlnaHQtdG9nZ2xlci1pY29uLWJnOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxNHB4JyBoZWlnaHQ9JzExcHgnIHZpZXdCb3g9JzAgMCAxNCAxMScgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0NwYXRoIGQ9J00wLDAgTDE0LDAgTDE0LDEuNzUgTDAsMS43NSBMMCwwIFogTTAsNC4zNzUgTDE0LDQuMzc1IEwxNCw2LjEyNSBMMCw2LjEyNSBMMCw0LjM3NSBaIE0wLDguNzUgTDE0LDguNzUgTDE0LDEwLjUgTDAsMTAuNSBMMCw4Ljc1IFonIGlkPSdwYXRoLTEnJTNFJTNDL3BhdGglM0UlM0MvZGVmcyUzRSUzQ2cgaWQ9J/Cfko4tVUktRWxlbWVudHMnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnJTNFJTNDZyBpZD0nMTIpLU5hdmJhcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTExNzQuMDAwMDAwLCAtMTI5MC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0dyb3VwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgxMTc0LjAwMDAwMCwgMTI4OC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0ljb24tQ29sb3InIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyLjAwMDAwMCknJTNFJTNDdXNlIGZpbGw9JyN7JG5hdmJhci1saWdodC1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDdXNlIGZpbGwtb3BhY2l0eT0nMC4xJyBmaWxsPScjeyRuYXZiYXItbGlnaHQtY29sb3J9JyB4bGluazpocmVmPSclMjNwYXRoLTEnJTNFJTNDL3VzZSUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcclxuJG5hdmJhci1saWdodC10b2dnbGVyLWJvcmRlci1jb2xvcjogcmdiYSgkYmxhY2ssIDAuMDYpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBEcm9wZG93bnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4kZHJvcGRvd24tbWluLXdpZHRoOiAxMnJlbSAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLXBhZGRpbmcteTogMC4zMTI1cmVtICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1ib3JkZXItY29sb3I6ICRmbG9hdGluZy1jb21wb25lbnQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tZGl2aWRlci1iZzogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLWJveC1zaGFkb3c6ICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xyXG5cclxuJGRyb3Bkb3duLWlubmVyLWJvcmRlci1yYWRpdXM6IDAgIWRlZmF1bHQ7XHJcblxyXG4kZHJvcGRvd24tbGluay1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1saW5rLWhvdmVyLWJnOiByZ2JhKCRibGFjaywgMC4wNCkgIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1saW5rLWxpbmUtaGVpZ2h0OiAkY29tcG9uZW50LWxpbmUtaGVpZ2h0ICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRkcm9wZG93bi1saW5rLWRpc2FibGVkLWNvbG9yOiAkdGV4dC1saWdodGVyICFkZWZhdWx0O1xyXG5cclxuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy15OiAwLjUzMnJlbSAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy14OiAxLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuJGRyb3Bkb3duLWhlYWRlci1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcblxyXG4kZHJvcGRvd24taGVhZGVyLXBhZGRpbmc6ICRkcm9wZG93bi1pdGVtLXBhZGRpbmcteSAkZHJvcGRvd24taXRlbS1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcblxyXG4vLyAqIFBhZ2luYXRpb25cclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHBhZ2luYXRpb24tcGFkZGluZy15OiAwLjYyNXJlbSAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tcGFkZGluZy14OiAwLjUxMjVyZW0gIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteS1zbTogMC4zNzVyZW0gIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteC1zbTogMC4yNXJlbSAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tcGFkZGluZy15LWxnOiAwLjkzNzVyZW0gIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteC1sZzogMC41cmVtICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24tbGluZS1oZWlnaHQ6IDEgIWRlZmF1bHQ7IC8vIChjKVxyXG5cclxuJHBhZ2luYXRpb24tY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1iZzogcmdiYS10by1oZXgocmdiYSgkYmxhY2ssIDAuMDgpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1ib3JkZXItd2lkdGg6IDBweCAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtc20gIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLW1hcmdpbi1zdGFydDogMC4xODc1cmVtICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1ib3JkZXItY29sb3I6ICRib3JkZXItaW5uZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kcGFnaW5hdGlvbi1mb2N1cy1ib3gtc2hhZG93OiBub25lICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24tZm9jdXMtY29sb3I6ICRwYWdpbmF0aW9uLWNvbG9yICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1mb2N1cy1iZzogcmdiYS10by1oZXgocmdiYSgkYmxhY2ssIDAuMTYpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24taG92ZXItY29sb3I6ICRwYWdpbmF0aW9uLWNvbG9yICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1ob3Zlci1iZzogcmdiYS10by1oZXgocmdiYSgkYmxhY2ssIDAuMTYpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24tZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgocmdiYSgkYmxhY2ssIDAuMDQpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBDYXJkc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kY2FyZC1zcGFjZXIteTogJHNwYWNlciAqIDEuNSAhZGVmYXVsdDtcclxuJGNhcmQtc3BhY2VyLXg6ICRzcGFjZXIgKiAxLjUgIWRlZmF1bHQ7XHJcbiRjYXJkLXRpdGxlLWZvbnQtc2l6ZTogJGg1LWZvbnQtc2l6ZSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjYXJkLXRpdGxlLXNwYWNlci15OiAkc3BhY2VyICogMC44NzUgIWRlZmF1bHQ7XHJcbiRjYXJkLXNwYWNlci14LXNtOiAxcmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGNhcmQtYm9yZGVyLXdpZHRoOiAwO1xyXG4kY2FyZC1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbiRjYXJkLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xyXG4kY2FyZC1ib3gtc2hhZG93OiAwIDJweCA2cHggMCByZ2JhKCRibGFjaywgMC4xMikgIWRlZmF1bHQ7XHJcbiRjYXJkLWlubmVyLWJvcmRlci1jb2xvcjogJGJvcmRlci1pbm5lci1jb2xvciAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjYXJkLWNhcC1wYWRkaW5nLXk6ICRzcGFjZXIgKiAxLjUgIWRlZmF1bHQ7XHJcblxyXG4kY2FyZC1jYXAtYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG4kY2FyZC1pbWctb3ZlcmxheS1wYWRkaW5nOiAxLjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEFjY29yZGlvblxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYWNjb3JkaW9uLXBhZGRpbmcteTogMC43OXJlbSAhZGVmYXVsdDtcclxuJGFjY29yZGlvbi1wYWRkaW5nLXg6IDEuMTI1cmVtICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJGFjY29yZGlvbi1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWJ1dHRvbi1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1ib3JkZXItd2lkdGg6IDAgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWJ1dHRvbi1hY3RpdmUtYmc6ICRhY2NvcmRpb24tYmcgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1jb2xvcjogJGFjY29yZGlvbi1idXR0b24tY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kYWNjb3JkaW9uLWljb24td2lkdGg6IDAuNzVyZW0gIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24taWNvbi1jb2xvcjogJGFjY29yZGlvbi1idXR0b24tY29sb3IgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24taWNvbi1hY3RpdmUtY29sb3I6ICRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuXHJcbiRhY2NvcmRpb24taWNvbi10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZykgIWRlZmF1bHQ7XHJcblxyXG4kYWNjb3JkaW9uLWJ1dHRvbi1pY29uOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxMicgaGVpZ2h0PScxMicgdmlld0JveD0nMCAwIDEyIDEyJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0NwYXRoIGlkPSdhJyBkPSdtMS41MzIgMTIgNi4xODItNi02LjE4Mi02TDAgMS40ODcgNC42NSA2IDAgMTAuNTEzeicvJTNFJTNDL2RlZnMlM0UlM0NnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDIuNTcxKScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ3VzZSBmaWxsPSclMjM0MzU5NzEnIHhsaW5rOmhyZWY9JyUyM2EnLyUzRSUzQ3VzZSBmaWxsLW9wYWNpdHk9Jy4xJyBmaWxsPScjeyRhY2NvcmRpb24taWNvbi1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM2EnLyUzRSUzQy9nJTNFJTNDL3N2ZyUzRSUwQVwiKSAhZGVmYXVsdDtcclxuJGFjY29yZGlvbi1idXR0b24tYWN0aXZlLWljb246IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzEyJyBoZWlnaHQ9JzEyJyB2aWV3Qm94PScwIDAgMTIgMTInIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnJTNFJTNDZGVmcyUzRSUzQ3BhdGggaWQ9J2EnIGQ9J20xLjUzMiAxMiA2LjE4Mi02LTYuMTgyLTZMMCAxLjQ4NyA0LjY1IDYgMCAxMC41MTN6Jy8lM0UlM0MvZGVmcyUzRSUzQ2cgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMi41NzEpJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnJTNFJTNDdXNlIGZpbGw9JyUyMzQzNTk3MScgeGxpbms6aHJlZj0nJTIzYScvJTNFJTNDdXNlIGZpbGwtb3BhY2l0eT0nLjEnIGZpbGw9JyN7JGFjY29yZGlvbi1pY29uLWFjdGl2ZS1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM2EnLyUzRSUzQy9nJTNFJTNDL3N2ZyUzRSUwQVwiKSAhZGVmYXVsdDtcclxuXHJcbi8vICogVG9vbHRpcHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHRvb2x0aXAtYmc6ICRkYXJrICFkZWZhdWx0O1xyXG4kdG9vbHRpcC1vcGFjaXR5OiAxICFkZWZhdWx0O1xyXG4kdG9vbHRpcC1ib3gtc2hhZG93OiAkYm94LXNoYWRvdy1zbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR0b29sdGlwLXBhZGRpbmcteTogMC4yNXJlbSAhZGVmYXVsdDtcclxuJHRvb2x0aXAtcGFkZGluZy14OiAwLjdyZW0gIWRlZmF1bHQ7XHJcbiR0b29sdGlwLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlICFkZWZhdWx0O1xyXG4kdG9vbHRpcC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1zbSAhZGVmYXVsdDtcclxuXHJcbi8vICogUG9wb3ZlcnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHBvcG92ZXItYmc6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJHBvcG92ZXItZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWJveC1zaGFkb3c6ICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib3JkZXItd2lkdGg6IDBweCAhZGVmYXVsdDtcclxuJHBvcG92ZXItaGVhZGVyLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteTogMCAhZGVmYXVsdDtcclxuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteDogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWhlYWRlci1mb250LXNpemU6ICRoNS1mb250LXNpemUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJHBvcG92ZXItYm9keS1wYWRkaW5nLXk6IDEuMTI1cmVtICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib2R5LXBhZGRpbmcteDogJHBvcG92ZXItYm9keS1wYWRkaW5nLXkgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWFycm93LW91dGVyLWNvbG9yOiAkcG9wb3Zlci1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICogVG9hc3RzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiR0b2FzdC1wYWRkaW5nLXg6IDEuMjVyZW0gIWRlZmF1bHQ7XHJcbiR0b2FzdC1wYWRkaW5nLXk6ICR0b2FzdC1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcbiR0b2FzdC1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuJHRvYXN0LWJhY2tncm91bmQtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJHRvYXN0LWJnLWZhY3RvcjogMC44NSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR0b2FzdC1ib3JkZXItd2lkdGg6IDAgIWRlZmF1bHQ7XHJcbiR0b2FzdC1ib3JkZXItY29sb3I6ICRncmF5LTEwMCAhZGVmYXVsdDtcclxuJHRvYXN0LWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xyXG4kdG9hc3QtYm94LXNoYWRvdzogJGZsb2F0aW5nLWNvbXBvbmVudC1zaGFkb3cgIWRlZmF1bHQ7XHJcblxyXG4kdG9hc3QtaGVhZGVyLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJHRvYXN0LWhlYWRlci1iYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJHRvYXN0LWhlYWRlci1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG4kdG9hc3Qtc3BhY2luZzogMS4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbiR0b2FzdC1idG4tY2xvc2Utc2l6ZTogMC42MjVlbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIEJhZGdlc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYmFkZ2UtZm9udC1zaXplOiAwLjgxMjVlbSAhZGVmYXVsdDtcclxuJGJhZGdlLWZvbnQtd2VpZ2h0OiA1MDAgIWRlZmF1bHQ7XHJcbiRiYWRnZS1wYWRkaW5nLXk6IDAuNTJlbSAhZGVmYXVsdDtcclxuJGJhZGdlLXBhZGRpbmcteDogMC41OTNlbSAhZGVmYXVsdDtcclxuJGJhZGdlLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLXNtICFkZWZhdWx0O1xyXG5cclxuJGJhZGdlLWhlaWdodDogMS41cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGJhZGdlLXdpZHRoOiAxLjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kYmFkZ2UtbGluZS1oZWlnaHQ6IDAuNzUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBNb2RhbHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4kbW9kYWwtaW5uZXItcGFkZGluZzogJHNwYWNlciAqIDEuNSAhZGVmYXVsdDtcclxuJG1vZGFsLWRpYWxvZy1tYXJnaW46IDEuNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC1jb250ZW50LWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzOiAwIDJweCAxNnB4IDAgcmdiYSgkYmxhY2ssIDAuNDUpICFkZWZhdWx0O1xyXG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXNtLXVwOiAwIDJweCAyMHB4IDAgcmdiYSgkYmxhY2ssIDAuNDUpICFkZWZhdWx0O1xyXG4kbW9kYWwtaGVhZGVyLWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG5cclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nLXk6IDAuMjVyZW0gIWRlZmF1bHQ7XHJcbiRtb2RhbC1oZWFkZXItcGFkZGluZy14OiAkbW9kYWwtaW5uZXItcGFkZGluZyAhZGVmYXVsdDtcclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nOiAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteCAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteCAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteSAhZGVmYXVsdDsgLy8gS2VlcCB0aGlzIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxyXG4kbW9kYWwtZm9vdGVyLXBhZGRpbmc6ICRtb2RhbC1oZWFkZXItcGFkZGluZy15ICRtb2RhbC1oZWFkZXItcGFkZGluZy14ICRtb2RhbC1oZWFkZXItcGFkZGluZy14ICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRtb2RhbC1sZzogNTByZW0gIWRlZmF1bHQ7XHJcbiRtb2RhbC1tZDogMzVyZW0gIWRlZmF1bHQ7XHJcbiRtb2RhbC1zbTogMjIuNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC1mYWRlLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwcHgpIHNjYWxlKDAuOCkgIWRlZmF1bHQ7XHJcbiRtb2RhbC1zaG93LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSBzY2FsZSgxKSAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC10cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjE1cyAhZGVmYXVsdDsgLy8gKEMpXHJcbiRtb2RhbC10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gJG1vZGFsLXRyYW5zaXRpb24tZHVyYXRpb24gZWFzZS1vdXQgIWRlZmF1bHQ7XHJcblxyXG4kbW9kYWwtc2ltcGxlLXBhZGRpbmc6IDNyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kbW9kYWwtc2ltcGxlLWNsb3NlLXBvc2l0aW9uOiAxcmVtICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQWxlcnRzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRhbGVydC1wYWRkaW5nLXk6ICRzcGFjZXIgKiAwLjkzNzUgIWRlZmF1bHQ7XHJcbiRhbGVydC1wYWRkaW5nLXg6ICRzcGFjZXIgKiAwLjkzNzUgIWRlZmF1bHQ7XHJcbiRhbGVydC1ib3JkZXItd2lkdGg6IDAgIWRlZmF1bHQ7XHJcbiRhbGVydC1iZy1zY2FsZTogLTg0JSAhZGVmYXVsdDtcclxuJGFsZXJ0LWJvcmRlci1zY2FsZTogLTcwJSAhZGVmYXVsdDtcclxuJGFsZXJ0LWNvbG9yLXNjYWxlOiAwJSAhZGVmYXVsdDtcclxuXHJcbi8vICogUHJvZ3Jlc3MgYmFyc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kcHJvZ3Jlc3MtaGVpZ2h0OiAwLjc1cmVtICFkZWZhdWx0O1xyXG4kcHJvZ3Jlc3MtZm9udC1zaXplOiAwLjYyNXJlbSAhZGVmYXVsdDtcclxuJHByb2dyZXNzLWJnOiAkZ3JheS0xMDAgIWRlZmF1bHQ7XHJcbiRwcm9ncmVzcy1ib3JkZXItcmFkaXVzOiAxMHJlbSAhZGVmYXVsdDtcclxuJHByb2dyZXNzLWJhci1jb2xvcjogJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuLy8gTGlzdCBncm91cFxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgbGlzdC1ncm91cC12YXJpYWJsZXNcclxuJGxpc3QtZ3JvdXAtY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtaXRlbS1wYWRkaW5nLXk6IDAuNThyZW0gIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWl0ZW0tcGFkZGluZy14OiAwLjkzNzVyZW0gIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWl0ZW0tY29sb3Itc2NhbGU6IDAlICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1sZyAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtaXRlbS1iZy1ob3Zlci1zY2FsZTogNSUgIWRlZmF1bHQ7IC8vICAoYylcclxuXHJcbiRsaXN0LWdyb3VwLWhvdmVyLWJnOiByZ2JhKCRibGFjaywgMC4wNikgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWFjdGl2ZS1jb2xvcjogJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuJGxpc3QtZ3JvdXAtZGlzYWJsZWQtY29sb3I6ICR0ZXh0LWxpZ2h0ZXIgIWRlZmF1bHQ7XHJcblxyXG4kbGlzdC1ncm91cC1hY3Rpb24tY29sb3I6ICR0ZXh0LW11dGVkLWhvdmVyICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1hY3Rpb24taG92ZXItY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1hY3Rpb24tYWN0aXZlLWJnOiAkZ3JheS01MCAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBsaXN0LWdyb3VwLXZhcmlhYmxlc1xyXG5cclxuLy8gKiBJbWFnZSB0aHVtYm5haWxzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiR0aHVtYm5haWwtcGFkZGluZzogMCAhZGVmYXVsdDtcclxuJHRodW1ibmFpbC1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XHJcbiR0aHVtYm5haWwtYm9yZGVyLXdpZHRoOiAwcHggIWRlZmF1bHQ7XHJcbiR0aHVtYm5haWwtYm9yZGVyLXJhZGl1czogMHB4ICFkZWZhdWx0O1xyXG5cclxuLy8gKiBGaWd1cmVzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRmaWd1cmUtY2FwdGlvbi1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEJyZWFkY3J1bWJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRicmVhZGNydW1iLXBhZGRpbmcteTogMCAhZGVmYXVsdDtcclxuJGJyZWFkY3J1bWItcGFkZGluZy14OiAwICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1pdGVtLXBhZGRpbmcteDogMC41cmVtICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1tYXJnaW4tYm90dG9tOiAxcmVtICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XHJcbiRicmVhZGNydW1iLWRpdmlkZXItY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1hY3RpdmUtY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1kaXZpZGVyOiAnLycgIWRlZmF1bHQ7XHJcbiRicmVhZGNydW1iLWRpdmlkZXItZmxpcHBlZDogJ1xcXFwnICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBDYXJvdXNlbFxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiRjYXJvdXNlbC1jb250cm9sLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1jb250cm9sLXdpZHRoOiAxNCUgIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1jb250cm9sLWljb24td2lkdGg6IDIuNTVyZW0gIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1jb250cm9sLW9wYWNpdHk6IDEgIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1jb250cm9sLWhvdmVyLW9wYWNpdHk6IDEgIWRlZmF1bHQ7XHJcblxyXG4kY2Fyb3VzZWwtY29udHJvbC1wcmV2LWljb24tYmc6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMjQnIGhlaWdodD0nMjQnIHZpZXdCb3g9JzAgMCAyNCAyNCcgc3R5bGU9J2ZpbGw6ICN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9O3RyYW5zZm9ybTogO21zRmlsdGVyOjsnJTNFJTNDcGF0aCBkPSdNMTMuMjkzIDYuMjkzIDcuNTg2IDEybDUuNzA3IDUuNzA3IDEuNDE0LTEuNDE0TDEwLjQxNCAxMmw0LjI5My00LjI5M3onJTNFJTNDL3BhdGglM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG4kY2Fyb3VzZWwtY29udHJvbC1uZXh0LWljb24tYmc6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMjQnIGhlaWdodD0nMjQnIHZpZXdCb3g9JzAgMCAyNCAyNCcgc3R5bGU9J2ZpbGw6ICN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9O3RyYW5zZm9ybTogO21zRmlsdGVyOjsnJTNFJTNDcGF0aCBkPSdNMTAuNzA3IDE3LjcwNyAxNi40MTQgMTJsLTUuNzA3LTUuNzA3LTEuNDE0IDEuNDE0TDEzLjU4NiAxMmwtNC4yOTMgNC4yOTN6JyUzRSUzQy9wYXRoJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcclxuXHJcbi8vIFNwaW5uZXJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRzcGlubmVyLXdpZHRoLWxnOiAzcmVtICFkZWZhdWx0OyAvLyAoQylcclxuJHNwaW5uZXItaGVpZ2h0LWxnOiAkc3Bpbm5lci13aWR0aC1sZyAhZGVmYXVsdDsgLy8gKEMpXHJcbiRzcGlubmVyLWJvcmRlci13aWR0aC1sZzogMC4zZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBDbG9zZVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYnRuLWNsb3NlLXdpZHRoOiAwLjhlbSAhZGVmYXVsdDtcclxuJGJ0bi1jbG9zZS1oZWlnaHQ6ICRidG4tY2xvc2Utd2lkdGggIWRlZmF1bHQ7XHJcbiRidG4tY2xvc2UtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xyXG4kYnRuLWNsb3NlLWJnOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxNTBweCcgaGVpZ2h0PScxNTFweCcgdmlld0JveD0nMCAwIDE1MCAxNTEnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayclM0UlM0NkZWZzJTNFJTNDcG9seWdvbiBpZD0ncGF0aC0xJyBwb2ludHM9JzEzMS4yNTE2NTcgMCA3NC45OTMzNzA1IDU2LjI1IDE4Ljc0ODM0MjYgMCAwIDE4Ljc1IDU2LjI0NTAyNzggNzUgMCAxMzEuMjUgMTguNzQ4MzQyNiAxNTAgNzQuOTkzMzcwNSA5My43NSAxMzEuMjUxNjU3IDE1MCAxNTAgMTMxLjI1IDkzLjc1NDk3MjIgNzUgMTUwIDE4Ljc1JyUzRSUzQy9wb2x5Z29uJTNFJTNDL2RlZnMlM0UlM0NnIGlkPSfwn46oLSU1QlNldHVwJTVEOi1Db2xvcnMtJmFtcDstU2hhZG93cycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGlkPSdBcnRib2FyZCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTIyNS4wMDAwMDAsIC0yNTAuMDAwMDAwKSclM0UlM0NnIGlkPSdJY29uLUNvbG9yJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyMjUuMDAwMDAwLCAyNTAuNTAwMDAwKSclM0UlM0N1c2UgZmlsbD0nI3skYnRuLWNsb3NlLWNvbG9yfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScwLjUnIGZpbGw9JyN7JGJ0bi1jbG9zZS1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcclxuJGJ0bi1jbG9zZS1mb2N1cy1zaGFkb3c6IG5vbmUgIWRlZmF1bHQ7XHJcbiRidG4tY2xvc2Utb3BhY2l0eTogMC45NSAhZGVmYXVsdDtcclxuJGJ0bi1jbG9zZS1ob3Zlci1vcGFjaXR5OiAwLjk1ICFkZWZhdWx0O1xyXG4kYnRuLWNsb3NlLWZvY3VzLW9wYWNpdHk6IDAuOTUgIWRlZmF1bHQ7XHJcblxyXG4kY2xvc2UtZm9udC13ZWlnaHQ6IDMwMCAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIE9mZmNhbnZhc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgb2ZmY2FudmFzLXZhcmlhYmxlc1xyXG4kb2ZmY2FudmFzLXRyYW5zaXRpb24tZHVyYXRpb246IDAuMjVzICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIG9mZmNhbnZhcy12YXJpYWJsZXNcclxuXHJcbi8vIFV0aWxpdGllc1xyXG4kb3ZlcmZsb3dzOiBhdXRvLCBoaWRkZW4sIHNjcm9sbCwgdmlzaWJsZSAhZGVmYXVsdDtcclxuXHJcbi8vIENvbmZpZ1xyXG4kcnRsLXN1cHBvcnQ6IGZhbHNlICFkZWZhdWx0O1xyXG4kZGFyay1zdHlsZTogZmFsc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIENoZXZyb24gSWNvbnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRjaGV2cm9uLXVwOiBcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzEwcHgnIGhlaWdodD0nNnB4JyB2aWV3Qm94PScwIDAgMTAgNicgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0Nwb2x5Z29uIGlkPSdwYXRoLTEnIHBvaW50cz0nMCA0LjU3OTYxMzYyIDEuMjM4ODI5NTEgNS43MTQyODU3MSA1IDIuMjY5MzQ0MTkgOC43NjExNzA0OSA1LjcxNDI4NTcxIDEwIDQuNTc5NjEzNjIgNSAwJyUzRSUzQy9wb2x5Z29uJTNFJTNDL2RlZnMlM0UlM0NnIGlkPSfimpnvuI8tU3ltYm9scycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGlkPSczMSktRGF0YVRhYmxlcycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTI4OS4wMDAwMDAsIC02NC4wMDAwMDApJyUzRSUzQ2cgaWQ9J1RhYmxlLUJhc2ljJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgNTIuMDAwMDAwKSclM0UlM0NnIGlkPSdUYWJsZS1IZWFkZXInIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDE5LjAwMDAwMCwgMTAuMDAwMDAwKSclM0UlM0NnIGlkPSdHcm91cCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMjcwLjAwMDAwMCwgMC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0ljb24tQ29sb3InIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyLjE0Mjg1NyknJTNFJTNDdXNlIGZpbGw9JyN7c3RyLXJlcGxhY2UoI3tyZ2JhLXRvLWhleCgkZ3JheS01MDAsJHJnYmEtdG8taGV4LWJnKX0sJyMnLCAnJTIzJyl9JyB4bGluazpocmVmPSclMjNwYXRoLTEnJTNFJTNDL3VzZSUzRSUzQ3VzZSBmaWxsLW9wYWNpdHk9JzAuNScgZmlsbD0nI3tzdHItcmVwbGFjZSgje3JnYmEtdG8taGV4KCRncmF5LTUwMCwkcmdiYS10by1oZXgtYmcpfSwnIycsICclMjMnKX0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL3N2ZyUzRVwiO1xyXG4kY2hldnJvbi1kb3duOiBcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzEwcHgnIGhlaWdodD0nNnB4JyB2aWV3Qm94PScwIDAgMTAgNicgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0Nwb2x5Z29uIGlkPSdwYXRoLTEnIHBvaW50cz0nOC43NjExNzA0OSAwIDUgMy40NDQ5NDE1MiAxLjIzODgyOTUxIDAgMCAxLjEzNDY3MjEgNSA1LjcxNDI4NTcxIDEwIDEuMTM0NjcyMSclM0UlM0MvcG9seWdvbiUzRSUzQy9kZWZzJTNFJTNDZyBpZD0n4pqZ77iPLVN5bWJvbHMnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnJTNFJTNDZyBpZD0nMzEpLURhdGFUYWJsZXMnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0yODkuMDAwMDAwLCAtNzYuMDAwMDAwKSclM0UlM0NnIGlkPSdUYWJsZS1CYXNpYycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDUyLjAwMDAwMCknJTNFJTNDZyBpZD0nVGFibGUtSGVhZGVyJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgxOS4wMDAwMDAsIDEwLjAwMDAwMCknJTNFJTNDZyBpZD0nR3JvdXAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDI3MC4wMDAwMDAsIDEyLjAwMDAwMCknJTNFJTNDZyBpZD0nSWNvbi1Db2xvcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDIuMTQyODU3KSclM0UlM0N1c2UgZmlsbD0nI3tzdHItcmVwbGFjZSgje3JnYmEtdG8taGV4KCRncmF5LTUwMCwkcmdiYS10by1oZXgtYmcpfSwnIycsICclMjMnKX0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDdXNlIGZpbGwtb3BhY2l0eT0nMC44JyBmaWxsPScje3N0ci1yZXBsYWNlKCN7cmdiYS10by1oZXgoJGdyYXktNTAwLCRyZ2JhLXRvLWhleC1iZyl9LCcjJywgJyUyMycpfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCI7XHJcbiIsIi8vIFZhcmlhYmxlc1xyXG4vL1xyXG4vLyBWYXJpYWJsZXMgc2hvdWxkIGZvbGxvdyB0aGUgYCRjb21wb25lbnQtc3RhdGUtcHJvcGVydHktc2l6ZWAgZm9ybXVsYSBmb3IgIGNvbnNpc3RlbnQgbmFtaW5nLiBFeDogJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yIGFuZCAkbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzLlxyXG4vLyAoQykgQ3VzdG9tIHZhcmlhYmxlcyBmb3IgZXh0ZW5kZWQgY29tcG9uZW50cyBvZiBib290c3RyYXAgb25seVxyXG4vL1xyXG4vLyA/IFRvIGNoYW5nZSB0aGUgbGF5b3V0IGNvbG9ycyB5b3UganVzdCBuZWVkIHRvIGNoYW5nZSB0aGUgJGJhc2UgYW5kICRib2R5LWJnIGNvbG9ycyBhbmQgcmVzdCAoYm9yZGVyLCBjYXJkLCBmb250IGNvbG9ycyBhbmQgZXRjLi4uKSB3aWxsIGJlIGFkanVzdCBhdXRvbWF0aWNhbGx5LlxyXG4vLyA/IFVzZSBodHRwczovL25vZWxkZWxnYWRvLmdpdGh1Yi5pby9zaGFkb3dsb3JkLyB0byBzZWxlY3QgcHJvcGVyIPCfkoQgQ29sb3IgdGludHMgYW5kIHNoYWRlIGZvciAkYmxhY2sgYW5kICRib2R5LWJnIGNvbG9yLlxyXG4vLyA/IGNvbG9yLXZhcmlhYmxlcyBhbmQgdGhlbWUtY29sb3ItdmFyaWFibGVzIChicmFuZGluZyBjb2xvcnMpIGNhbiBiZSBjaG9vc2UgYXMgcGVyIHlvdXIgcHJlZmVyZW5jZXMuIFdlIHN1Z2dlc3QgeW91IHRvIHVzZSBodHRwczovL2NvbG9ycy5ldmEuZGVzaWduL1xyXG4vLyAhIExpZ2h0IHN0eWxlIHVzZSAkYmFzZSB0byBnZW5lcmF0ZSB0aGUgJGdyYXkgc2hhZGVzLlxyXG4vLyAhIF92YXJpYWJsZS1kYXJrLnNjc3MgZmlsZSBvdmVycmlkZXMgX3ZhcmlhYmxlLnNjc3MgZmlsZS5cclxuXHJcbi8vICogQ29sb3JzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9yLXZhcmlhYmxlc1xyXG4kd2hpdGU6ICNmZmYgIWRlZmF1bHQ7XHJcbiRibGFjazogIzAwMCAhZGVmYXVsdDtcclxuXHJcbiRiYXNlOiAjN2M3ZGI2ICFkZWZhdWx0OyAvLyAoQylcclxuJGdyYXktMjU6IHJnYmEoJHdoaXRlLCAwLjAxNSkgIWRlZmF1bHQ7IC8vIChDKVxyXG4kZ3JheS01MDogcmdiYSgkd2hpdGUsIDAuMDMpICFkZWZhdWx0OyAvLyAoQylcclxuJGdyYXktMTAwOiByZ2JhKCR3aGl0ZSwgMC44KSAhZGVmYXVsdDtcclxuJGdyYXktMjAwOiByZ2JhKCR3aGl0ZSwgMC42KSAhZGVmYXVsdDtcclxuJGdyYXktMzAwOiByZ2JhKCR3aGl0ZSwgMC40KSAhZGVmYXVsdDtcclxuJGdyYXktNDAwOiByZ2JhKCR3aGl0ZSwgMC4zKSAhZGVmYXVsdDtcclxuJGdyYXktNTAwOiAkYmFzZSAhZGVmYXVsdDtcclxuJGdyYXktNjAwOiByZ2JhKCRibGFjaywgMC4xKSAhZGVmYXVsdDtcclxuJGdyYXktNzAwOiByZ2JhKCRibGFjaywgMC4xNSkgIWRlZmF1bHQ7XHJcbiRncmF5LTgwMDogcmdiYSgkYmxhY2ssIDAuNDUpICFkZWZhdWx0O1xyXG4kZ3JheS05MDA6IHJnYmEoJGJsYWNrLCAwLjY1KSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBncmF5LWNvbG9yLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGdyYXktY29sb3JzLW1hcFxyXG4kZ3JheXM6IChcclxuICAnMjUnOiAkZ3JheS0yNSxcclxuICAnNTAnOiAkZ3JheS01MFxyXG4pICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGdyYXktY29sb3JzLW1hcFxyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGNvbG9yLXZhcmlhYmxlc1xyXG4kYmx1ZTogIzAwN2JmZiAhZGVmYXVsdDtcclxuJGluZGlnbzogIzY2MTBmMiAhZGVmYXVsdDtcclxuJHB1cnBsZTogIzY5NmNmZiAhZGVmYXVsdDtcclxuJHBpbms6ICNlODNlOGMgIWRlZmF1bHQ7XHJcbiRyZWQ6ICNmZjNlMWQgIWRlZmF1bHQ7XHJcbiRvcmFuZ2U6ICNmZDdlMTQgIWRlZmF1bHQ7XHJcbiR5ZWxsb3c6ICNmZmFiMDAgIWRlZmF1bHQ7XHJcbiRncmVlbjogIzcxZGQzNyAhZGVmYXVsdDtcclxuJHRlYWw6ICMyMGM5OTcgIWRlZmF1bHQ7XHJcbiRjeWFuOiAjMDNjM2VjICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGNvbG9yLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHRoZW1lLWNvbG9yLXZhcmlhYmxlc1xyXG4kcHJpbWFyeTogJHB1cnBsZSAhZGVmYXVsdDtcclxuJHNlY29uZGFyeTogIzg1OTJhMyAhZGVmYXVsdDtcclxuJHN1Y2Nlc3M6ICRncmVlbiAhZGVmYXVsdDtcclxuJGluZm86ICRjeWFuICFkZWZhdWx0O1xyXG4kd2FybmluZzogJHllbGxvdyAhZGVmYXVsdDtcclxuJGRhbmdlcjogJHJlZCAhZGVmYXVsdDtcclxuJGxpZ2h0OiAjNGY1MDVjICFkZWZhdWx0O1xyXG4kZGFyazogIzZiNmM5ZCAhZGVmYXVsdDtcclxuJGdyYXk6ICRncmF5LTEwMCAhZGVmYXVsdDsgLy8gKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgdGhlbWUtY29sb3ItdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGhlbWUtY29sb3JzLW1hcFxyXG4kdGhlbWUtY29sb3JzOiAoXHJcbiAgJ3ByaW1hcnknOiAkcHJpbWFyeSxcclxuICAnc2Vjb25kYXJ5JzogJHNlY29uZGFyeSxcclxuICAnc3VjY2Vzcyc6ICRzdWNjZXNzLFxyXG4gICdpbmZvJzogJGluZm8sXHJcbiAgJ3dhcm5pbmcnOiAkd2FybmluZyxcclxuICAnZGFuZ2VyJzogJGRhbmdlcixcclxuICAnbGlnaHQnOiAkbGlnaHQsXHJcbiAgJ2RhcmsnOiAkZGFyayxcclxuICAnZ3JheSc6ICRncmF5XHJcbikgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgdGhlbWUtY29sb3JzLW1hcFxyXG5cclxuJGNvbG9yLXNjaGVtZTogJ2RhcmsnICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQm9keVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYm9keS1iZzogIzIzMjMzMyAhZGVmYXVsdDtcclxuJHJnYmEtdG8taGV4LWJnOiAkYmFzZSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRib2R5LWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbiRyZ2JhLXRvLWhleC1iZy1pbnZlcnRlZDogcmdiKDE2MCwgMTQ5LCAxNDkpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQ29tcG9uZW50c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm94LXNoYWRvdy12YXJpYWJsZXNcclxuJGJveC1zaGFkb3c6IDAgMC4yNXJlbSAxcmVtIHJnYmEoJGJsYWNrLCAwLjIpICFkZWZhdWx0O1xyXG4kYm94LXNoYWRvdy1zbTogMCAwLjEyNXJlbSAwLjI1cmVtIHJnYmEoJGJsYWNrLCAwLjI1KSAhZGVmYXVsdDtcclxuJGJveC1zaGFkb3ctbGc6IDAgMC42MjVyZW0gMS4yNXJlbSByZ2JhKCRibGFjaywgMC4zKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3gtc2hhZG93LXZhcmlhYmxlc1xyXG5cclxuLy8gJGFsZXJ0LWJnLXNjYWxlOiAtODQlICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtYm9yZGVyLXNjYWxlOiAtNDAlICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtY29sb3Itc2NhbGU6IDAlICFkZWZhdWx0O1xyXG5cclxuJGJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kYm9yZGVyLWlubmVyLWNvbG9yOiByZ2JhKCR3aGl0ZSwgMC4wOSkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGZsb2F0aW5nLWNvbXBvbmVudC1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFkZWZhdWx0OyAvLyAoQylcclxuJGZsb2F0aW5nLWNvbXBvbmVudC1zaGFkb3c6ICRib3gtc2hhZG93ICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogVHlwb2dyYXBoeVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiRoZWFkaW5ncy1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kdGV4dC1tdXRlZDogcmdiYS10by1oZXgoJGdyYXktNjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kdGV4dC1tdXRlZC1ob3ZlcjogcmdiYS10by1oZXgoJHdoaXRlLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiR0ZXh0LWxpZ2h0OiByZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVyOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVzdDogcmdiYS10by1oZXgoJGdyYXktMzAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogVGFibGVzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiR0YWJsZS1zdHJpcGVkLWJnLWZhY3RvcjogMC4wOCAhZGVmYXVsdDtcclxuJHRhYmxlLXN0cmlwZWQtYmc6IHJnYmEoJGdyYXktNTAwLCAkdGFibGUtc3RyaXBlZC1iZy1mYWN0b3IpICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtc3RyaXBlZC1iZzogcmdiYS10by1oZXgocmdiYSgkZ3JheS01MDAsICR0YWJsZS1zdHJpcGVkLWJnLWZhY3RvciksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1zdHJpcGVkLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRibGFjaywgJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yKSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbiR0YWJsZS1ob3Zlci1iZy1mYWN0b3I6IDAuMSAhZGVmYXVsdDtcclxuJHRhYmxlLWhvdmVyLWJnOiByZ2JhKCRncmF5LTUwMCwgJHRhYmxlLWhvdmVyLWJnLWZhY3RvcikgIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtYm9yZGVyLWZhY3RvcjogMC40ICFkZWZhdWx0O1xyXG4kdGFibGUtYm9yZGVyLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS04MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbiR0YWJsZS1ncm91cC1zZXBhcmF0b3ItY29sb3I6ICR0YWJsZS1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtYmctc2NhbGU6IC04MCUgIWRlZmF1bHQ7XHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGFibGUtbG9vcFxyXG4kdGFibGUtdmFyaWFudHM6IChcclxuICAncHJpbWFyeSc6IHNoaWZ0LWNvbG9yKCRwcmltYXJ5LCAkdGFibGUtYmctc2NhbGUpLFxyXG4gICdzZWNvbmRhcnknOiBzaGlmdC1jb2xvcigkc2Vjb25kYXJ5LCAkdGFibGUtYmctc2NhbGUpLFxyXG4gICdzdWNjZXNzJzogc2hpZnQtY29sb3IoJHN1Y2Nlc3MsICR0YWJsZS1iZy1zY2FsZSksXHJcbiAgJ2luZm8nOiBzaGlmdC1jb2xvcigkaW5mbywgJHRhYmxlLWJnLXNjYWxlKSxcclxuICAnd2FybmluZyc6IHNoaWZ0LWNvbG9yKCR3YXJuaW5nLCAkdGFibGUtYmctc2NhbGUpLFxyXG4gICdkYW5nZXInOiBzaGlmdC1jb2xvcigkZGFuZ2VyLCAkdGFibGUtYmctc2NhbGUpLFxyXG4gICdsaWdodCc6ICRkYXJrLFxyXG4gICdkYXJrJzogJHdoaXRlXHJcbikgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgdGFibGUtbG9vcFxyXG5cclxuJGNvbXBvbmVudC1hY3RpdmUtYmc6ICR3aGl0ZSAhZGVmYXVsdDtcclxuXHJcbi8vICogUHJvZ3Jlc3MgYmFyc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiRwcm9ncmVzcy1iZzogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBQYWdpbmF0aW9uXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRwYWdpbmF0aW9uLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tYmc6IHJnYmEoJGdyYXktNTAwLCAwLjA4KSAhZGVmYXVsdDtcclxuXHJcbiRwYWdpbmF0aW9uLWZvY3VzLWNvbG9yOiAkcGFnaW5hdGlvbi1jb2xvciAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tZm9jdXMtYmc6IHJnYmEoJGdyYXktNTAwLCAwLjE2KSAhZGVmYXVsdDtcclxuXHJcbiRwYWdpbmF0aW9uLWhvdmVyLWNvbG9yOiAkcGFnaW5hdGlvbi1jb2xvciAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24taG92ZXItYmc6IHJnYmEoJGdyYXktNTAwLCAwLjE2KSAhZGVmYXVsdDtcclxuXHJcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWNvbG9yOiAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tZGlzYWJsZWQtYmc6IHJnYmEoJGdyYXktNTAwLCAwLjA0KSAhZGVmYXVsdDtcclxuXHJcbi8vICogQ2FyZHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGNhcmQtYmc6IHJnYmEtdG8taGV4KCRncmF5LTkwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJGNhcmQtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kY2FyZC1ib3gtc2hhZG93OiAwIDAuMTI1cmVtIDAuNXJlbSAwIHJnYmEoJGJsYWNrLCAwLjE2KSAhZGVmYXVsdDtcclxuXHJcbi8vICogQWNjb3JkaW9uXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRhY2NvcmRpb24tYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWJ1dHRvbi1jb2xvcjogJGFjY29yZGlvbi1jb2xvciAhZGVmYXVsdDtcclxuJGFjY29yZGlvbi1idXR0b24tYWN0aXZlLWNvbG9yOiAkYWNjb3JkaW9uLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1pY29uLWNvbG9yOiAkYWNjb3JkaW9uLWJ1dHRvbi1jb2xvciAhZGVmYXVsdDtcclxuJGFjY29yZGlvbi1pY29uLWFjdGl2ZS1jb2xvcjogJGFjY29yZGlvbi1idXR0b24tYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1idXR0b24taWNvbjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMTInIGhlaWdodD0nMTInIHZpZXdCb3g9JzAgMCAxMiAxMicgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayclM0UlM0NkZWZzJTNFJTNDcGF0aCBpZD0nYScgZD0nbTEuNTMyIDEyIDYuMTgyLTYtNi4xODItNkwwIDEuNDg3IDQuNjUgNiAwIDEwLjUxM3onLyUzRSUzQy9kZWZzJTNFJTNDZyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyLjU3MSknIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0N1c2UgZmlsbD0nJTIzNDM1OTcxJyB4bGluazpocmVmPSclMjNhJy8lM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScuMScgZmlsbD0nI3skYWNjb3JkaW9uLWljb24tY29sb3J9JyB4bGluazpocmVmPSclMjNhJy8lM0UlM0MvZyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1pY29uOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxMicgaGVpZ2h0PScxMicgdmlld0JveD0nMCAwIDEyIDEyJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0NwYXRoIGlkPSdhJyBkPSdtMS41MzIgMTIgNi4xODItNi02LjE4Mi02TDAgMS40ODcgNC42NSA2IDAgMTAuNTEzeicvJTNFJTNDL2RlZnMlM0UlM0NnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDIuNTcxKScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ3VzZSBmaWxsPSclMjM0MzU5NzEnIHhsaW5rOmhyZWY9JyUyM2EnLyUzRSUzQ3VzZSBmaWxsLW9wYWNpdHk9Jy4xJyBmaWxsPScjeyRhY2NvcmRpb24taWNvbi1hY3RpdmUtY29sb3J9JyB4bGluazpocmVmPSclMjNhJy8lM0UlM0MvZyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEZvcm1zXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRpbnB1dC1iZzogJGNhcmQtYmcgIWRlZmF1bHQ7XHJcbiRpbnB1dC1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktNTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc3dpdGNoLWNvbG9yOiAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kZm9ybS1zd2l0Y2gtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nLTQgLTQgOCA4Jz48Y2lyY2xlIHI9JzMnIGZpbGw9JyN7JGZvcm0tc3dpdGNoLWNvbG9yfScvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXNlbGVjdC1iZzogJGlucHV0LWJnICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc2VsZWN0LWluZGljYXRvci1jb2xvcjogJGdyYXktMjAwICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxNiAxNic+PHBhdGggZmlsbD0nbm9uZScgc3Ryb2tlPScjeyRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIHN0cm9rZS13aWR0aD0nMicgZD0nTTIgNWw2IDYgNi02Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXJ0bDogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTYgMTYnPjxwYXRoIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J00yIDVsNiA2IDYtNicvPjwvc3ZnPlwiKSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kZm9ybS1yYW5nZS10cmFjay1iZzogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10cmFjay1kaXNhYmxlZC1iZzogJGdyYXktNTAgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGZvcm0tcmFuZ2UtdGh1bWItYmc6IHJnYmEtdG8taGV4KCRncmF5LTIwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItYm94LXNoYWRvdzogMCAwIDZweCAwICRncmF5LTIwMCAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItZm9jdXMtYm94LXNoYWRvdzogMCAwIDhweCAwcHggJGdyYXktMjAwICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1hY3RpdmUtYmc6ICRmb3JtLXJhbmdlLXRodW1iLWJnICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktNjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4vLyAqIE5hdnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJG5hdi10YWJzLWxpbmstYWN0aXZlLWJnOiAkY2FyZC1iZyAhZGVmYXVsdDtcclxuJG5hdi10YWJzLWJvcmRlci1jb2xvcjogJG5hdi10YWJzLWxpbmstYWN0aXZlLWJnICFkZWZhdWx0O1xyXG4kbmF2LXRhYnMtYnRuLWJnLWZhY3RvcjogMC4xNiAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXYtdGFicy1idG4tYmc6IHJnYmEtdG8taGV4KCRncmF5LTgwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIE5hdmJhclxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2YmFyLWxpZ2h0LWhvdmVyLWNvbG9yOiAjNGU1MTU1ICFkZWZhdWx0O1xyXG4kbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvcjogIzRlNTE1NSAhZGVmYXVsdDtcclxuJG5hdmJhci1saWdodC1kaXNhYmxlZC1jb2xvcjogcmdiYSgkYmxhY2ssIDAuMikgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIERyb3Bkb3duc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kZHJvcGRvd24tYmc6IHJnYmEtdG8taGV4KHJnYmEoJGJsYWNrLCAwLjYpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tZGl2aWRlci1iZzogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbiRkcm9wZG93bi1saW5rLWhvdmVyLWJnOiByZ2JhKCRncmF5LTUwMCwgMC4xKSAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLWxpbmstZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xyXG4kZHJvcGRvd24taGVhZGVyLWNvbG9yOiAkaGVhZGluZ3MtY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIFBvcG92ZXJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuJHBvcG92ZXItYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4vLyAqIFRvYXN0c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiR0b2FzdC1iYWNrZ3JvdW5kLWNvbG9yOiAkY2FyZC1iZyAhZGVmYXVsdDtcclxuJHRvYXN0LWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJHRvYXN0LWhlYWRlci1jb2xvcjogJHRvYXN0LWNvbG9yICFkZWZhdWx0O1xyXG5cclxuLy8gKiBNb2RhbHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJG1vZGFsLWNvbnRlbnQtYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzOiAwIDAuMjVyZW0gMi44MTI1cmVtIDAgcmdiYSgkYmxhY2ssIDAuMykgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIExpc3QgZ3JvdXBcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGxpc3QtZ3JvdXAtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1pdGVtLWJnLXNjYWxlOiAtNzAlICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1pdGVtLWJnLWhvdmVyLXNjYWxlOiAxMCUgIWRlZmF1bHQ7IC8vICAoYylcclxuJGxpc3QtZ3JvdXAtaG92ZXItYmc6IHJnYmEoJGJhc2UsIDAuMDYpICFkZWZhdWx0O1xyXG4ka2JkLWNvbG9yOiAkZGFyayAhZGVmYXVsdDtcclxuXHJcbi8vIENvbmZpZ1xyXG4kcnRsLXN1cHBvcnQ6IGZhbHNlICFkZWZhdWx0O1xyXG4kZGFyay1zdHlsZTogdHJ1ZSAhZGVmYXVsdDtcclxuXHJcbi8vICogQ2hldnJvbiBJY29uc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGNoZXZyb24tdXA6IFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMTBweCcgaGVpZ2h0PSc2cHgnIHZpZXdCb3g9JzAgMCAxMCA2JyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnJTNFJTNDZGVmcyUzRSUzQ3BvbHlnb24gaWQ9J3BhdGgtMScgcG9pbnRzPScwIDQuNTc5NjEzNjIgMS4yMzg4Mjk1MSA1LjcxNDI4NTcxIDUgMi4yNjkzNDQxOSA4Ljc2MTE3MDQ5IDUuNzE0Mjg1NzEgMTAgNC41Nzk2MTM2MiA1IDAnJTNFJTNDL3BvbHlnb24lM0UlM0MvZGVmcyUzRSUzQ2cgaWQ9J+Kame+4jy1TeW1ib2xzJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ2cgaWQ9JzMxKS1EYXRhVGFibGVzJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMjg5LjAwMDAwMCwgLTY0LjAwMDAwMCknJTNFJTNDZyBpZD0nVGFibGUtQmFzaWMnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCA1Mi4wMDAwMDApJyUzRSUzQ2cgaWQ9J1RhYmxlLUhlYWRlcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMTkuMDAwMDAwLCAxMC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0dyb3VwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyNzAuMDAwMDAwLCAwLjAwMDAwMCknJTNFJTNDZyBpZD0nSWNvbi1Db2xvcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDIuMTQyODU3KSclM0UlM0N1c2UgZmlsbD0nI3tzdHItcmVwbGFjZSgje3JnYmEtdG8taGV4KCRncmF5LTUwMCwkcmdiYS10by1oZXgtYmcpfSwnIycsICclMjMnKX0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDdXNlIGZpbGwtb3BhY2l0eT0nMC41JyBmaWxsPScje3N0ci1yZXBsYWNlKCN7cmdiYS10by1oZXgoJGdyYXktNTAwLCRyZ2JhLXRvLWhleC1iZyl9LCcjJywgJyUyMycpfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCI7XHJcbiRjaGV2cm9uLWRvd246IFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMTBweCcgaGVpZ2h0PSc2cHgnIHZpZXdCb3g9JzAgMCAxMCA2JyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnJTNFJTNDZGVmcyUzRSUzQ3BvbHlnb24gaWQ9J3BhdGgtMScgcG9pbnRzPSc4Ljc2MTE3MDQ5IDAgNSAzLjQ0NDk0MTUyIDEuMjM4ODI5NTEgMCAwIDEuMTM0NjcyMSA1IDUuNzE0Mjg1NzEgMTAgMS4xMzQ2NzIxJyUzRSUzQy9wb2x5Z29uJTNFJTNDL2RlZnMlM0UlM0NnIGlkPSfimpnvuI8tU3ltYm9scycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGlkPSczMSktRGF0YVRhYmxlcycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTI4OS4wMDAwMDAsIC03Ni4wMDAwMDApJyUzRSUzQ2cgaWQ9J1RhYmxlLUJhc2ljJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgNTIuMDAwMDAwKSclM0UlM0NnIGlkPSdUYWJsZS1IZWFkZXInIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDE5LjAwMDAwMCwgMTAuMDAwMDAwKSclM0UlM0NnIGlkPSdHcm91cCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMjcwLjAwMDAwMCwgMTIuMDAwMDAwKSclM0UlM0NnIGlkPSdJY29uLUNvbG9yJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMi4xNDI4NTcpJyUzRSUzQ3VzZSBmaWxsPScje3N0ci1yZXBsYWNlKCN7cmdiYS10by1oZXgoJGdyYXktNTAwLCRyZ2JhLXRvLWhleC1iZyl9LCcjJywgJyUyMycpfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScwLjgnIGZpbGw9JyN7c3RyLXJlcGxhY2UoI3tyZ2JhLXRvLWhleCgkZ3JheS01MDAsJHJnYmEtdG8taGV4LWJnKX0sJyMnLCAnJTIzJyl9JyB4bGluazpocmVmPSclMjNwYXRoLTEnJTNFJTNDL3VzZSUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9zdmclM0VcIjtcclxuIl19 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
