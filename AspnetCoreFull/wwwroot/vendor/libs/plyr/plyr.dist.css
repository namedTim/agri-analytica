@charset "UTF-8";
@keyframes plyr-progress {
  to {
    background-position: var(--plyr-progress-loading-size, 25px) 0;
  }
}
@keyframes plyr-popup {
  0% {
    opacity: 0.5;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes plyr-fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.plyr {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  align-items: center;
  direction: ltr;
  display: flex;
  flex-direction: column;
  font-family: var(--plyr-font-family, inherit);
  font-variant-numeric: tabular-nums;
  font-weight: var(--plyr-font-weight-regular, 400);
  line-height: var(--plyr-line-height, 1.7);
  max-width: 100%;
  min-width: 200px;
  position: relative;
  text-shadow: none;
  transition: box-shadow 0.3s ease;
  z-index: 0;
}
.plyr video,
.plyr audio,
.plyr iframe {
  display: block;
  height: 100%;
  width: 100%;
}
.plyr button {
  font: inherit;
  line-height: inherit;
  width: auto;
}
.plyr:focus {
  outline: 0;
}

.plyr--full-ui {
  box-sizing: border-box;
}
.plyr--full-ui *,
.plyr--full-ui *::after,
.plyr--full-ui *::before {
  box-sizing: inherit;
}

.plyr--full-ui a,
.plyr--full-ui button,
.plyr--full-ui input,
.plyr--full-ui label {
  touch-action: manipulation;
}

.plyr__badge {
  background: var(--plyr-badge-background, hsl(216deg, 15%, 34%));
  border-radius: var(--plyr-badge-border-radius, 2px);
  color: var(--plyr-badge-text-color, #fff);
  font-size: var(--plyr-font-size-badge, 9px);
  line-height: 1;
  padding: 3px 4px;
}

.plyr--full-ui ::-webkit-media-text-track-container {
  display: none;
}

.plyr__captions {
  animation: plyr-fade-in 0.3s ease;
  bottom: 0;
  display: none;
  font-size: var(--plyr-font-size-small, 13px);
  left: 0;
  padding: var(--plyr-control-spacing, 10px);
  position: absolute;
  text-align: center;
  transition: transform 0.4s ease-in-out;
  width: 100%;
}
.plyr__captions span:empty {
  display: none;
}
@media (min-width: 480px) {
  .plyr__captions {
    font-size: var(--plyr-font-size-base, 15px);
    padding: calc(var(--plyr-control-spacing, 10px) * 2);
  }
}
@media (min-width: 768px) {
  .plyr__captions {
    font-size: var(--plyr-font-size-large, 18px);
  }
}

.plyr--captions-active .plyr__captions {
  display: block;
}

.plyr:not(.plyr--hide-controls) .plyr__controls:not(:empty) ~ .plyr__captions {
  transform: translateY(calc(var(--plyr-control-spacing, 10px) * -4));
}

.plyr__caption {
  background: var(--plyr-captions-background, rgba(0, 0, 0, 0.8));
  border-radius: 2px;
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
  color: var(--plyr-captions-text-color, #fff);
  line-height: 185%;
  padding: 0.2em 0.5em;
  white-space: pre-wrap;
}
.plyr__caption div {
  display: inline;
}

.plyr__control {
  background: transparent;
  border: 0;
  border-radius: var(--plyr-control-radius, 3px);
  color: inherit;
  cursor: pointer;
  flex-shrink: 0;
  overflow: visible;
  padding: calc(var(--plyr-control-spacing, 10px) * 0.7);
  position: relative;
  transition: all 0.3s ease;
}
.plyr__control svg {
  display: block;
  fill: currentColor;
  height: var(--plyr-control-icon-size, 18px);
  pointer-events: none;
  width: var(--plyr-control-icon-size, 18px);
}
.plyr__control:focus {
  outline: 0;
}
.plyr__control.plyr__tab-focus {
  outline: var(--plyr-tab-focus-color, var(--plyr-color-main, var(--plyr-color-main, hsl(198deg, 100%, 50%)))) dotted 3px;
  outline-offset: 2px;
}

a.plyr__control {
  text-decoration: none;
}
a.plyr__control::after, a.plyr__control::before {
  display: none;
}

.plyr__control:not(.plyr__control--pressed) .icon--pressed,
.plyr__control.plyr__control--pressed .icon--not-pressed,
.plyr__control:not(.plyr__control--pressed) .label--pressed,
.plyr__control.plyr__control--pressed .label--not-pressed {
  display: none;
}

.plyr--full-ui ::-webkit-media-controls {
  display: none;
}

.plyr__controls {
  align-items: center;
  display: flex;
  justify-content: flex-end;
  text-align: center;
}
.plyr__controls .plyr__progress__container {
  flex: 1;
  min-width: 0;
}
.plyr__controls .plyr__controls__item {
  margin-left: calc(var(--plyr-control-spacing, 10px) / 4);
}
.plyr__controls .plyr__controls__item:first-child {
  margin-left: 0;
  margin-right: auto;
}
.plyr__controls .plyr__controls__item.plyr__progress__container {
  padding-left: calc(var(--plyr-control-spacing, 10px) / 4);
}
.plyr__controls .plyr__controls__item.plyr__time {
  padding: 0 calc(var(--plyr-control-spacing, 10px) / 2);
}
.plyr__controls .plyr__controls__item.plyr__progress__container:first-child, .plyr__controls .plyr__controls__item.plyr__time:first-child, .plyr__controls .plyr__controls__item.plyr__time + .plyr__time {
  padding-left: 0;
}
.plyr__controls:empty {
  display: none;
}

.plyr [data-plyr=captions],
.plyr [data-plyr=pip],
.plyr [data-plyr=airplay],
.plyr [data-plyr=fullscreen] {
  display: none;
}

.plyr--captions-enabled [data-plyr=captions],
.plyr--pip-supported [data-plyr=pip],
.plyr--airplay-supported [data-plyr=airplay],
.plyr--fullscreen-enabled [data-plyr=fullscreen] {
  display: inline-block;
}

.plyr__menu {
  display: flex;
  position: relative;
}
.plyr__menu .plyr__control svg {
  transition: transform 0.3s ease;
}
.plyr__menu .plyr__control[aria-expanded=true] svg {
  transform: rotate(90deg);
}
.plyr__menu .plyr__control[aria-expanded=true] .plyr__tooltip {
  display: none;
}
.plyr__menu__container {
  animation: plyr-popup 0.2s ease;
  background: var(--plyr-menu-background, rgba(255, 255, 255, 0.9));
  border-radius: 4px;
  bottom: 100%;
  box-shadow: var(--plyr-menu-shadow, 0 1px 2px rgba(0, 0, 0, 0.15));
  color: var(--plyr-menu-color, hsl(216deg, 15%, 34%));
  font-size: var(--plyr-font-size-base, 15px);
  margin-bottom: 10px;
  position: absolute;
  right: -3px;
  text-align: left;
  white-space: nowrap;
  z-index: 3;
}
.plyr__menu__container > div {
  overflow: hidden;
  transition: height 0.35s cubic-bezier(0.4, 0, 0.2, 1), width 0.35s cubic-bezier(0.4, 0, 0.2, 1);
}
.plyr__menu__container::after {
  border: var(--plyr-menu-arrow-size, 4px) solid transparent;
  border-top-color: var(--plyr-menu-background, rgba(255, 255, 255, 0.9));
  content: "";
  height: 0;
  position: absolute;
  right: calc(((var(--plyr-control-icon-size, 18px) / 2) + calc(var(--plyr-control-spacing, 10px) * 0.7)) - (var(--plyr-menu-arrow-size, 4px) / 2));
  top: 100%;
  width: 0;
}
.plyr__menu__container [role=menu] {
  padding: calc(var(--plyr-control-spacing, 10px) * 0.7);
}
.plyr__menu__container [role=menuitem],
.plyr__menu__container [role=menuitemradio] {
  margin-top: 2px;
}
.plyr__menu__container [role=menuitem]:first-child,
.plyr__menu__container [role=menuitemradio]:first-child {
  margin-top: 0;
}
.plyr__menu__container .plyr__control {
  align-items: center;
  color: var(--plyr-menu-color, hsl(216deg, 15%, 34%));
  display: flex;
  font-size: var(--plyr-font-size-menu, var(--plyr-font-size-small, 13px));
  padding: calc(calc(var(--plyr-control-spacing, 10px) * 0.7) / 1.5) calc(calc(var(--plyr-control-spacing, 10px) * 0.7) * 1.5);
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  width: 100%;
}
.plyr__menu__container .plyr__control > span {
  align-items: inherit;
  display: flex;
  width: 100%;
}
.plyr__menu__container .plyr__control::after {
  border: var(--plyr-menu-item-arrow-size, 4px) solid transparent;
  content: "";
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}
.plyr__menu__container .plyr__control--forward {
  padding-right: calc(calc(var(--plyr-control-spacing, 10px) * 0.7) * 4);
}
.plyr__menu__container .plyr__control--forward::after {
  border-left-color: var(--plyr-menu-arrow-color, hsl(216deg, 15%, 52%));
  right: calc((calc(var(--plyr-control-spacing, 10px) * 0.7) * 1.5) - var(--plyr-menu-item-arrow-size, 4px));
}
.plyr__menu__container .plyr__control--forward.plyr__tab-focus::after, .plyr__menu__container .plyr__control--forward:hover::after {
  border-left-color: currentColor;
}
.plyr__menu__container .plyr__control--back {
  font-weight: var(--plyr-font-weight-regular, 400);
  margin: calc(var(--plyr-control-spacing, 10px) * 0.7);
  margin-bottom: calc(calc(var(--plyr-control-spacing, 10px) * 0.7) / 2);
  padding-left: calc(calc(var(--plyr-control-spacing, 10px) * 0.7) * 4);
  position: relative;
  width: calc(100% - (calc(var(--plyr-control-spacing, 10px) * 0.7) * 2));
}
.plyr__menu__container .plyr__control--back::after {
  border-right-color: var(--plyr-menu-arrow-color, hsl(216deg, 15%, 52%));
  left: calc((calc(var(--plyr-control-spacing, 10px) * 0.7) * 1.5) - var(--plyr-menu-item-arrow-size, 4px));
}
.plyr__menu__container .plyr__control--back::before {
  background: var(--plyr-menu-back-border-color, hsl(216deg, 15%, 88%));
  box-shadow: 0 1px 0 var(--plyr-menu-back-border-shadow-color, #fff);
  content: "";
  height: 1px;
  left: 0;
  margin-top: calc(calc(var(--plyr-control-spacing, 10px) * 0.7) / 2);
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 100%;
}
.plyr__menu__container .plyr__control--back.plyr__tab-focus::after, .plyr__menu__container .plyr__control--back:hover::after {
  border-right-color: currentColor;
}
.plyr__menu__container .plyr__control[role=menuitemradio] {
  padding-left: calc(var(--plyr-control-spacing, 10px) * 0.7);
}
.plyr__menu__container .plyr__control[role=menuitemradio]::before, .plyr__menu__container .plyr__control[role=menuitemradio]::after {
  border-radius: 100%;
}
.plyr__menu__container .plyr__control[role=menuitemradio]::before {
  background: rgba(0, 0, 0, 0.1);
  content: "";
  display: block;
  flex-shrink: 0;
  height: 16px;
  margin-right: var(--plyr-control-spacing, 10px);
  transition: all 0.3s ease;
  width: 16px;
}
.plyr__menu__container .plyr__control[role=menuitemradio]::after {
  background: #fff;
  border: 0;
  height: 6px;
  left: 12px;
  opacity: 0;
  top: 50%;
  transform: translateY(-50%) scale(0);
  transition: transform 0.3s ease, opacity 0.3s ease;
  width: 6px;
}
.plyr__menu__container .plyr__control[role=menuitemradio][aria-checked=true]::before {
  background: var(--plyr-control-toggle-checked-background, var(--plyr-color-main, var(--plyr-color-main, hsl(198deg, 100%, 50%))));
}
.plyr__menu__container .plyr__control[role=menuitemradio][aria-checked=true]::after {
  opacity: 1;
  transform: translateY(-50%) scale(1);
}
.plyr__menu__container .plyr__control[role=menuitemradio].plyr__tab-focus::before, .plyr__menu__container .plyr__control[role=menuitemradio]:hover::before {
  background: rgba(35, 40, 47, 0.1);
}
.plyr__menu__container .plyr__menu__value {
  align-items: center;
  display: flex;
  margin-left: auto;
  margin-right: calc((calc(var(--plyr-control-spacing, 10px) * 0.7) - 2) * -1);
  overflow: hidden;
  padding-left: calc(calc(var(--plyr-control-spacing, 10px) * 0.7) * 3.5);
  pointer-events: none;
}

.plyr--full-ui input[type=range] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background: transparent;
  border: 0;
  border-radius: calc(var(--plyr-range-thumb-height, 13px) * 2);
  color: var(--plyr-range-fill-background, var(--plyr-color-main, var(--plyr-color-main, hsl(198deg, 100%, 50%))));
  display: block;
  height: calc((var(--plyr-range-thumb-active-shadow-width, 3px) * 2) + var(--plyr-range-thumb-height, 13px));
  margin: 0;
  min-width: 0;
  padding: 0;
  transition: box-shadow 0.3s ease;
  width: 100%;
}
.plyr--full-ui input[type=range]::-webkit-slider-runnable-track {
  background: transparent;
  border: 0;
  border-radius: calc(var(--plyr-range-track-height, 5px) / 2);
  height: var(--plyr-range-track-height, 5px);
  -webkit-transition: box-shadow 0.3s ease;
  transition: box-shadow 0.3s ease;
  -webkit-user-select: none;
          user-select: none;
  background-image: linear-gradient(to right, currentColor var(--value, 0%), transparent var(--value, 0%));
}
.plyr--full-ui input[type=range]::-webkit-slider-thumb {
  background: var(--plyr-range-thumb-background, #fff);
  border: 0;
  border-radius: 100%;
  box-shadow: var(--plyr-range-thumb-shadow, 0 1px 1px rgba(35, 40, 47, 0.15), 0 0 0 1px rgba(35, 40, 47, 0.2));
  height: var(--plyr-range-thumb-height, 13px);
  position: relative;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: var(--plyr-range-thumb-height, 13px);
  -webkit-appearance: none;
          appearance: none;
  margin-top: calc((var(--plyr-range-thumb-height, 13px) - var(--plyr-range-track-height, 5px)) / 2 * -1);
}
.plyr--full-ui input[type=range]::-moz-range-track {
  background: transparent;
  border: 0;
  border-radius: calc(var(--plyr-range-track-height, 5px) / 2);
  height: var(--plyr-range-track-height, 5px);
  -moz-transition: box-shadow 0.3s ease;
  transition: box-shadow 0.3s ease;
  -moz-user-select: none;
       user-select: none;
}
.plyr--full-ui input[type=range]::-moz-range-thumb {
  background: var(--plyr-range-thumb-background, #fff);
  border: 0;
  border-radius: 100%;
  box-shadow: var(--plyr-range-thumb-shadow, 0 1px 1px rgba(35, 40, 47, 0.15), 0 0 0 1px rgba(35, 40, 47, 0.2));
  height: var(--plyr-range-thumb-height, 13px);
  position: relative;
  -moz-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: var(--plyr-range-thumb-height, 13px);
}
.plyr--full-ui input[type=range]::-moz-range-progress {
  background: currentColor;
  border-radius: calc(var(--plyr-range-track-height, 5px) / 2);
  height: var(--plyr-range-track-height, 5px);
}
.plyr--full-ui input[type=range]::-ms-track {
  background: transparent;
  border: 0;
  border-radius: calc(var(--plyr-range-track-height, 5px) / 2);
  height: var(--plyr-range-track-height, 5px);
  -ms-transition: box-shadow 0.3s ease;
  transition: box-shadow 0.3s ease;
  user-select: none;
  color: transparent;
}
.plyr--full-ui input[type=range]::-ms-fill-upper {
  background: transparent;
  border: 0;
  border-radius: calc(var(--plyr-range-track-height, 5px) / 2);
  height: var(--plyr-range-track-height, 5px);
  -ms-transition: box-shadow 0.3s ease;
  transition: box-shadow 0.3s ease;
  user-select: none;
}
.plyr--full-ui input[type=range]::-ms-fill-lower {
  background: transparent;
  border: 0;
  border-radius: calc(var(--plyr-range-track-height, 5px) / 2);
  height: var(--plyr-range-track-height, 5px);
  -ms-transition: box-shadow 0.3s ease;
  transition: box-shadow 0.3s ease;
  user-select: none;
  background: currentColor;
}
.plyr--full-ui input[type=range]::-ms-thumb {
  background: var(--plyr-range-thumb-background, #fff);
  border: 0;
  border-radius: 100%;
  box-shadow: var(--plyr-range-thumb-shadow, 0 1px 1px rgba(35, 40, 47, 0.15), 0 0 0 1px rgba(35, 40, 47, 0.2));
  height: var(--plyr-range-thumb-height, 13px);
  position: relative;
  -ms-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: var(--plyr-range-thumb-height, 13px);
  margin-top: 0;
}
.plyr--full-ui input[type=range]::-ms-tooltip {
  display: none;
}
.plyr--full-ui input[type=range]::-moz-focus-outer {
  border: 0;
}
.plyr--full-ui input[type=range]:focus {
  outline: 0;
}
.plyr--full-ui input[type=range].plyr__tab-focus::-webkit-slider-runnable-track {
  outline: var(--plyr-tab-focus-color, var(--plyr-color-main, var(--plyr-color-main, hsl(198deg, 100%, 50%)))) dotted 3px;
  outline-offset: 2px;
}
.plyr--full-ui input[type=range].plyr__tab-focus::-moz-range-track {
  outline: var(--plyr-tab-focus-color, var(--plyr-color-main, var(--plyr-color-main, hsl(198deg, 100%, 50%)))) dotted 3px;
  outline-offset: 2px;
}
.plyr--full-ui input[type=range].plyr__tab-focus::-ms-track {
  outline: var(--plyr-tab-focus-color, var(--plyr-color-main, var(--plyr-color-main, hsl(198deg, 100%, 50%)))) dotted 3px;
  outline-offset: 2px;
}

.plyr__poster {
  background-color: var(--plyr-video-background, var(--plyr-video-background, rgb(0, 0, 0)));
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: contain;
  height: 100%;
  left: 0;
  opacity: 0;
  position: absolute;
  top: 0;
  transition: opacity 0.2s ease;
  width: 100%;
  z-index: 1;
}

.plyr--stopped.plyr__poster-enabled .plyr__poster {
  opacity: 1;
}

.plyr--youtube.plyr--paused.plyr__poster-enabled:not(.plyr--stopped) .plyr__poster {
  display: none;
}

.plyr__time {
  font-size: var(--plyr-font-size-time, var(--plyr-font-size-small, 13px));
}

.plyr__time + .plyr__time::before {
  content: "⁄";
  margin-right: var(--plyr-control-spacing, 10px);
}
@media (max-width: 767px) {
  .plyr__time + .plyr__time {
    display: none;
  }
}

/* stylelint-disable selector-max-compound-selectors */
.plyr__tooltip {
  background: var(--plyr-tooltip-background, rgba(255, 255, 255, 0.9));
  border-radius: var(--plyr-tooltip-radius, 5px);
  bottom: 100%;
  box-shadow: var(--plyr-tooltip-shadow, 0 1px 2px rgba(0, 0, 0, 0.15));
  color: var(--plyr-tooltip-color, hsl(216deg, 15%, 34%));
  font-size: var(--plyr-font-size-small, 13px);
  font-weight: var(--plyr-font-weight-regular, 400);
  left: 50%;
  line-height: 1.3;
  margin-bottom: calc(calc(var(--plyr-control-spacing, 10px) / 2) * 2);
  opacity: 0;
  padding: calc(var(--plyr-control-spacing, 10px) / 2) calc(calc(var(--plyr-control-spacing, 10px) / 2) * 1.5);
  pointer-events: none;
  position: absolute;
  transform: translate(-50%, 10px) scale(0.8);
  transform-origin: 50% 100%;
  transition: transform 0.2s 0.1s ease, opacity 0.2s 0.1s ease;
  white-space: nowrap;
  z-index: 2;
}
.plyr__tooltip::before {
  border-left: var(--plyr-tooltip-arrow-size, 4px) solid transparent;
  border-right: var(--plyr-tooltip-arrow-size, 4px) solid transparent;
  border-top: var(--plyr-tooltip-arrow-size, 4px) solid var(--plyr-tooltip-background, rgba(255, 255, 255, 0.9));
  bottom: calc(var(--plyr-tooltip-arrow-size, 4px) * -1);
  content: "";
  height: 0;
  left: 50%;
  position: absolute;
  transform: translateX(-50%);
  width: 0;
  z-index: 2;
}

.plyr .plyr__control:hover .plyr__tooltip,
.plyr .plyr__control.plyr__tab-focus .plyr__tooltip,
.plyr__tooltip--visible {
  opacity: 1;
  transform: translate(-50%, 0) scale(1);
}

.plyr .plyr__control:hover .plyr__tooltip {
  z-index: 3;
}

.plyr__controls > .plyr__control:first-child .plyr__tooltip,
.plyr__controls > .plyr__control:first-child + .plyr__control .plyr__tooltip {
  left: 0;
  transform: translate(0, 10px) scale(0.8);
  transform-origin: 0 100%;
}
.plyr__controls > .plyr__control:first-child .plyr__tooltip::before,
.plyr__controls > .plyr__control:first-child + .plyr__control .plyr__tooltip::before {
  left: calc((var(--plyr-control-icon-size, 18px) / 2) + calc(var(--plyr-control-spacing, 10px) * 0.7));
}

.plyr__controls > .plyr__control:last-child .plyr__tooltip {
  left: auto;
  right: 0;
  transform: translate(0, 10px) scale(0.8);
  transform-origin: 100% 100%;
}
.plyr__controls > .plyr__control:last-child .plyr__tooltip::before {
  left: auto;
  right: calc((var(--plyr-control-icon-size, 18px) / 2) + calc(var(--plyr-control-spacing, 10px) * 0.7));
  transform: translateX(50%);
}

.plyr__controls > .plyr__control:first-child:hover .plyr__tooltip, .plyr__controls > .plyr__control:first-child.plyr__tab-focus .plyr__tooltip,
.plyr__controls > .plyr__control:first-child .plyr__tooltip--visible,
.plyr__controls > .plyr__control:first-child + .plyr__control:hover .plyr__tooltip,
.plyr__controls > .plyr__control:first-child + .plyr__control.plyr__tab-focus .plyr__tooltip,
.plyr__controls > .plyr__control:first-child + .plyr__control .plyr__tooltip--visible,
.plyr__controls > .plyr__control:last-child:hover .plyr__tooltip,
.plyr__controls > .plyr__control:last-child.plyr__tab-focus .plyr__tooltip,
.plyr__controls > .plyr__control:last-child .plyr__tooltip--visible {
  transform: translate(0, 0) scale(1);
}

.plyr__progress {
  left: calc(var(--plyr-range-thumb-height, 13px) * 0.5);
  margin-right: var(--plyr-range-thumb-height, 13px);
  position: relative;
}
.plyr__progress input[type=range], .plyr__progress__buffer {
  margin-left: calc(var(--plyr-range-thumb-height, 13px) * -0.5);
  margin-right: calc(var(--plyr-range-thumb-height, 13px) * -0.5);
  width: calc(100% + var(--plyr-range-thumb-height, 13px));
}
.plyr__progress input[type=range] {
  position: relative;
  z-index: 2;
}
.plyr__progress .plyr__tooltip {
  left: 0;
  max-width: 120px;
  overflow-wrap: break-word;
  white-space: normal;
}

.plyr__progress__buffer {
  -webkit-appearance: none; /* stylelint-disable-line */
  background: transparent;
  border: 0;
  border-radius: 100px;
  height: var(--plyr-range-track-height, 5px);
  left: 0;
  margin-top: calc((var(--plyr-range-track-height, 5px) / 2) * -1);
  padding: 0;
  position: absolute;
  top: 50%;
}
.plyr__progress__buffer::-webkit-progress-bar {
  background: transparent;
}
.plyr__progress__buffer::-webkit-progress-value {
  background: currentColor;
  border-radius: 100px;
  min-width: var(--plyr-range-track-height, 5px);
  -webkit-transition: width 0.2s ease;
  transition: width 0.2s ease;
}
.plyr__progress__buffer::-moz-progress-bar {
  background: currentColor;
  border-radius: 100px;
  min-width: var(--plyr-range-track-height, 5px);
  -moz-transition: width 0.2s ease;
  transition: width 0.2s ease;
}
.plyr__progress__buffer::-ms-fill {
  border-radius: 100px;
  -ms-transition: width 0.2s ease;
  transition: width 0.2s ease;
}

.plyr--loading .plyr__progress__buffer {
  animation: plyr-progress 1s linear infinite;
  background-image: linear-gradient(-45deg, var(--plyr-progress-loading-background, rgba(35, 40, 47, 0.6)) 25%, transparent 25%, transparent 50%, var(--plyr-progress-loading-background, rgba(35, 40, 47, 0.6)) 50%, var(--plyr-progress-loading-background, rgba(35, 40, 47, 0.6)) 75%, transparent 75%, transparent);
  background-repeat: repeat-x;
  background-size: var(--plyr-progress-loading-size, 25px) var(--plyr-progress-loading-size, 25px);
  color: transparent;
}

.plyr--video.plyr--loading .plyr__progress__buffer {
  background-color: var(--plyr-video-progress-buffered-background, rgba(255, 255, 255, 0.25));
}

.plyr--audio.plyr--loading .plyr__progress__buffer {
  background-color: var(--plyr-audio-progress-buffered-background, rgba(193, 200, 209, 0.6));
}

.plyr__progress__marker {
  background-color: var(--plyr-progress-marker-background, #fff);
  border-radius: 1px;
  height: var(--plyr-range-track-height, 5px);
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  width: var(--plyr-progress-marker-width, 3px);
  z-index: 3;
}

.plyr__volume {
  align-items: center;
  display: flex;
  max-width: 110px;
  min-width: 80px;
  position: relative;
  width: 20%;
}
.plyr__volume input[type=range] {
  margin-left: calc(var(--plyr-control-spacing, 10px) / 2);
  margin-right: calc(var(--plyr-control-spacing, 10px) / 2);
  position: relative;
  z-index: 2;
}

.plyr--is-ios .plyr__volume {
  min-width: 0;
  width: auto;
}

.plyr--audio {
  display: block;
}

.plyr--audio .plyr__controls {
  background: var(--plyr-audio-controls-background, #fff);
  border-radius: inherit;
  color: var(--plyr-audio-control-color, hsl(216deg, 15%, 34%));
  padding: var(--plyr-control-spacing, 10px);
}

.plyr--audio .plyr__control.plyr__tab-focus, .plyr--audio .plyr__control:hover, .plyr--audio .plyr__control[aria-expanded=true] {
  background: var(--plyr-audio-control-background-hover, var(--plyr-color-main, var(--plyr-color-main, hsl(198deg, 100%, 50%))));
  color: var(--plyr-audio-control-color-hover, #fff);
}

.plyr--full-ui.plyr--audio input[type=range]::-webkit-slider-runnable-track {
  background-color: var(--plyr-audio-range-track-background, var(--plyr-audio-progress-buffered-background, rgba(193, 200, 209, 0.6)));
}
.plyr--full-ui.plyr--audio input[type=range]::-moz-range-track {
  background-color: var(--plyr-audio-range-track-background, var(--plyr-audio-progress-buffered-background, rgba(193, 200, 209, 0.6)));
}
.plyr--full-ui.plyr--audio input[type=range]::-ms-track {
  background-color: var(--plyr-audio-range-track-background, var(--plyr-audio-progress-buffered-background, rgba(193, 200, 209, 0.6)));
}
.plyr--full-ui.plyr--audio input[type=range]:active::-webkit-slider-thumb {
  box-shadow: var(--plyr-range-thumb-shadow, 0 1px 1px rgba(35, 40, 47, 0.15), 0 0 0 1px rgba(35, 40, 47, 0.2)), 0 0 0 var(--plyr-range-thumb-active-shadow-width, 3px) var(--plyr-audio-range-thumb-active-shadow-color, rgba(35, 40, 47, 0.1));
}
.plyr--full-ui.plyr--audio input[type=range]:active::-moz-range-thumb {
  box-shadow: var(--plyr-range-thumb-shadow, 0 1px 1px rgba(35, 40, 47, 0.15), 0 0 0 1px rgba(35, 40, 47, 0.2)), 0 0 0 var(--plyr-range-thumb-active-shadow-width, 3px) var(--plyr-audio-range-thumb-active-shadow-color, rgba(35, 40, 47, 0.1));
}
.plyr--full-ui.plyr--audio input[type=range]:active::-ms-thumb {
  box-shadow: var(--plyr-range-thumb-shadow, 0 1px 1px rgba(35, 40, 47, 0.15), 0 0 0 1px rgba(35, 40, 47, 0.2)), 0 0 0 var(--plyr-range-thumb-active-shadow-width, 3px) var(--plyr-audio-range-thumb-active-shadow-color, rgba(35, 40, 47, 0.1));
}

.plyr--audio .plyr__progress__buffer {
  color: var(--plyr-audio-progress-buffered-background, rgba(193, 200, 209, 0.6));
}

.plyr--video {
  background: var(--plyr-video-background, var(--plyr-video-background, rgb(0, 0, 0)));
  overflow: hidden;
}
.plyr--video.plyr--menu-open {
  overflow: visible;
}

.plyr__video-wrapper {
  background: var(--plyr-video-background, var(--plyr-video-background, rgb(0, 0, 0)));
  height: 100%;
  margin: auto;
  overflow: hidden;
  position: relative;
  width: 100%;
}

.plyr__video-embed,
.plyr__video-wrapper--fixed-ratio {
  aspect-ratio: 16/9;
}
@supports not (aspect-ratio: 16/9) {
  .plyr__video-embed,
  .plyr__video-wrapper--fixed-ratio {
    height: 0;
    padding-bottom: 56.25%;
    position: relative;
  }
}

.plyr__video-embed iframe,
.plyr__video-wrapper--fixed-ratio video {
  border: 0;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.plyr--full-ui .plyr__video-embed > .plyr__video-embed__container {
  padding-bottom: 240%;
  position: relative;
  transform: translateY(-38.28125%);
}

.plyr--video .plyr__controls {
  background: var(--plyr-video-controls-background, linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75)));
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
  bottom: 0;
  color: var(--plyr-video-control-color, #fff);
  left: 0;
  padding: calc(var(--plyr-control-spacing, 10px) / 2);
  padding-top: calc(var(--plyr-control-spacing, 10px) * 2);
  position: absolute;
  right: 0;
  transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
  z-index: 3;
}
@media (min-width: 480px) {
  .plyr--video .plyr__controls {
    padding: var(--plyr-control-spacing, 10px);
    padding-top: calc(var(--plyr-control-spacing, 10px) * 3.5);
  }
}

.plyr--video.plyr--hide-controls .plyr__controls {
  opacity: 0;
  pointer-events: none;
  transform: translateY(100%);
}

.plyr--video .plyr__control.plyr__tab-focus, .plyr--video .plyr__control:hover, .plyr--video .plyr__control[aria-expanded=true] {
  background: var(--plyr-video-control-background-hover, var(--plyr-color-main, var(--plyr-color-main, hsl(198deg, 100%, 50%))));
  color: var(--plyr-video-control-color-hover, #fff);
}

.plyr__control--overlaid {
  background: var(--plyr-video-control-background-hover, var(--plyr-color-main, var(--plyr-color-main, hsl(198deg, 100%, 50%))));
  border: 0;
  border-radius: 100%;
  color: var(--plyr-video-control-color, #fff);
  display: none;
  left: 50%;
  opacity: 0.9;
  padding: calc(var(--plyr-control-spacing, 10px) * 1.5);
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  transition: 0.3s;
  z-index: 2;
}
.plyr__control--overlaid svg {
  left: 2px;
  position: relative;
}
.plyr__control--overlaid:hover, .plyr__control--overlaid:focus {
  opacity: 1;
}

.plyr--playing .plyr__control--overlaid {
  opacity: 0;
  visibility: hidden;
}

.plyr--full-ui.plyr--video .plyr__control--overlaid {
  display: block;
}

.plyr--full-ui.plyr--video input[type=range]::-webkit-slider-runnable-track {
  background-color: var(--plyr-video-range-track-background, var(--plyr-video-progress-buffered-background, rgba(255, 255, 255, 0.25)));
}
.plyr--full-ui.plyr--video input[type=range]::-moz-range-track {
  background-color: var(--plyr-video-range-track-background, var(--plyr-video-progress-buffered-background, rgba(255, 255, 255, 0.25)));
}
.plyr--full-ui.plyr--video input[type=range]::-ms-track {
  background-color: var(--plyr-video-range-track-background, var(--plyr-video-progress-buffered-background, rgba(255, 255, 255, 0.25)));
}
.plyr--full-ui.plyr--video input[type=range]:active::-webkit-slider-thumb {
  box-shadow: var(--plyr-range-thumb-shadow, 0 1px 1px rgba(35, 40, 47, 0.15), 0 0 0 1px rgba(35, 40, 47, 0.2)), 0 0 0 var(--plyr-range-thumb-active-shadow-width, 3px) var(--plyr-audio-range-thumb-active-shadow-color, rgba(255, 255, 255, 0.5));
}
.plyr--full-ui.plyr--video input[type=range]:active::-moz-range-thumb {
  box-shadow: var(--plyr-range-thumb-shadow, 0 1px 1px rgba(35, 40, 47, 0.15), 0 0 0 1px rgba(35, 40, 47, 0.2)), 0 0 0 var(--plyr-range-thumb-active-shadow-width, 3px) var(--plyr-audio-range-thumb-active-shadow-color, rgba(255, 255, 255, 0.5));
}
.plyr--full-ui.plyr--video input[type=range]:active::-ms-thumb {
  box-shadow: var(--plyr-range-thumb-shadow, 0 1px 1px rgba(35, 40, 47, 0.15), 0 0 0 1px rgba(35, 40, 47, 0.2)), 0 0 0 var(--plyr-range-thumb-active-shadow-width, 3px) var(--plyr-audio-range-thumb-active-shadow-color, rgba(255, 255, 255, 0.5));
}

.plyr--video .plyr__progress__buffer {
  color: var(--plyr-video-progress-buffered-background, rgba(255, 255, 255, 0.25));
}

.plyr:-webkit-full-screen {
  background: #000;
  border-radius: 0 !important;
  height: 100%;
  margin: 0;
  width: 100%;
}

.plyr:fullscreen {
  background: #000;
  border-radius: 0 !important;
  height: 100%;
  margin: 0;
  width: 100%;
}
.plyr:-webkit-full-screen video {
  height: 100%;
}
.plyr:fullscreen video {
  height: 100%;
}
.plyr:-webkit-full-screen .plyr__control .icon--exit-fullscreen {
  display: block;
}
.plyr:fullscreen .plyr__control .icon--exit-fullscreen {
  display: block;
}
.plyr:-webkit-full-screen .plyr__control .icon--exit-fullscreen + svg {
  display: none;
}
.plyr:fullscreen .plyr__control .icon--exit-fullscreen + svg {
  display: none;
}
.plyr:-webkit-full-screen.plyr--hide-controls {
  cursor: none;
}
.plyr:fullscreen.plyr--hide-controls {
  cursor: none;
}
@media (min-width: 1024px) {
  .plyr:-webkit-full-screen .plyr__captions {
    font-size: var(--plyr-font-size-xlarge, 21px);
  }
  .plyr:fullscreen .plyr__captions {
    font-size: var(--plyr-font-size-xlarge, 21px);
  }
}

.plyr--fullscreen-fallback {
  background: #000;
  border-radius: 0 !important;
  height: 100%;
  margin: 0;
  width: 100%;
  bottom: 0;
  display: block;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 10000000;
}
.plyr--fullscreen-fallback video {
  height: 100%;
}
.plyr--fullscreen-fallback .plyr__control .icon--exit-fullscreen {
  display: block;
}
.plyr--fullscreen-fallback .plyr__control .icon--exit-fullscreen + svg {
  display: none;
}
.plyr--fullscreen-fallback.plyr--hide-controls {
  cursor: none;
}
@media (min-width: 1024px) {
  .plyr--fullscreen-fallback .plyr__captions {
    font-size: var(--plyr-font-size-xlarge, 21px);
  }
}

.plyr__ads {
  border-radius: inherit;
  bottom: 0;
  cursor: pointer;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}
.plyr__ads > div,
.plyr__ads > div iframe {
  height: 100%;
  position: absolute;
  width: 100%;
}
.plyr__ads::after {
  background: hsl(216deg, 15%, 16%);
  border-radius: 2px;
  bottom: var(--plyr-control-spacing, 10px);
  color: #fff;
  content: attr(data-badge-text);
  font-size: 11px;
  padding: 2px 6px;
  pointer-events: none;
  position: absolute;
  right: var(--plyr-control-spacing, 10px);
  z-index: 3;
}
.plyr__ads:empty::after {
  display: none;
}

.plyr__cues {
  background: currentColor;
  display: block;
  height: var(--plyr-range-track-height, 5px);
  left: 0;
  opacity: 0.8;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 3px;
  z-index: 3;
}

.plyr__preview-thumb {
  background-color: var(--plyr-tooltip-background, rgba(255, 255, 255, 0.9));
  border-radius: var(--plyr-tooltip-radius, 5px);
  bottom: 100%;
  box-shadow: var(--plyr-tooltip-shadow, 0 1px 2px rgba(0, 0, 0, 0.15));
  margin-bottom: calc(calc(var(--plyr-control-spacing, 10px) / 2) * 2);
  opacity: 0;
  padding: 3px;
  pointer-events: none;
  position: absolute;
  transform: translate(0, 10px) scale(0.8);
  transform-origin: 50% 100%;
  transition: transform 0.2s 0.1s ease, opacity 0.2s 0.1s ease;
  z-index: 2;
}
.plyr__preview-thumb--is-shown {
  opacity: 1;
  transform: translate(0, 0) scale(1);
}
.plyr__preview-thumb::before {
  border-left: var(--plyr-tooltip-arrow-size, 4px) solid transparent;
  border-right: var(--plyr-tooltip-arrow-size, 4px) solid transparent;
  border-top: var(--plyr-tooltip-arrow-size, 4px) solid var(--plyr-tooltip-background, rgba(255, 255, 255, 0.9));
  bottom: calc(var(--plyr-tooltip-arrow-size, 4px) * -1);
  content: "";
  height: 0;
  left: calc(50% + var(--preview-arrow-offset));
  position: absolute;
  transform: translateX(-50%);
  width: 0;
  z-index: 2;
}
.plyr__preview-thumb__image-container {
  background: hsl(216deg, 15%, 79%);
  border-radius: calc(var(--plyr-tooltip-radius, 5px) - 1px);
  overflow: hidden;
  position: relative;
  z-index: 0;
}
.plyr__preview-thumb__image-container img, .plyr__preview-thumb__image-container::after {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}
.plyr__preview-thumb__image-container::after {
  border-radius: inherit;
  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.15);
  content: "";
  pointer-events: none;
}
.plyr__preview-thumb__image-container img {
  max-height: none;
  max-width: none;
}
.plyr__preview-thumb__time-container {
  background: var(--plyr-video-controls-background, linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75)));
  border-bottom-left-radius: calc(var(--plyr-tooltip-radius, 5px) - 1px);
  border-bottom-right-radius: calc(var(--plyr-tooltip-radius, 5px) - 1px);
  bottom: 0;
  left: 0;
  line-height: 1.1;
  padding: 20px 6px 6px;
  position: absolute;
  right: 0;
  z-index: 3;
}
.plyr__preview-thumb__time-container span {
  color: #fff;
  font-size: var(--plyr-font-size-time, var(--plyr-font-size-small, 13px));
}

.plyr__preview-scrubbing {
  bottom: 0;
  filter: blur(1px);
  height: 100%;
  left: 0;
  margin: auto;
  opacity: 0;
  overflow: hidden;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 0;
  transition: opacity 0.3s ease;
  width: 100%;
  z-index: 1;
}
.plyr__preview-scrubbing--is-shown {
  opacity: 1;
}
.plyr__preview-scrubbing img {
  height: 100%;
  left: 0;
  max-height: none;
  max-width: none;
  -o-object-fit: contain;
     object-fit: contain;
  position: absolute;
  top: 0;
  width: 100%;
}

.plyr--no-transition {
  transition: none !important;
}

.plyr__sr-only {
  clip: rect(1px, 1px, 1px, 1px);
  overflow: hidden;
  border: 0 !important;
  height: 1px !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

.plyr [hidden] {
  display: none !important;
}

.plyr__progress__container,
.plyr__volume input[type=range] {
  flex: 0 1 auto;
}

.plyr--audio .plyr__controls {
  padding: 0;
}

[dir=rtl] .plyr__menu__container {
  direction: rtl;
  text-align: right;
}
[dir=rtl] .plyr__menu__container .plyr__control--forward::after {
  left: 5px;
  right: auto;
  border-right-color: rgba(var(--plyr-menu-color, hsl(216deg, 15%, 34%)), 0.8);
  border-left-color: transparent;
}
[dir=rtl] .plyr__menu__container .plyr__control--forward.plyr__tab-focus::after, [dir=rtl] .plyr__menu__container .plyr__control--forward:hover::after {
  border-right-color: currentColor;
}
[dir=rtl] .plyr__menu__container .plyr__menu__value {
  padding-left: 1rem;
  padding-right: calc(var(--plyr-control-spacing, 10px) * 0.7 * 1.5);
}
[dir=rtl] .plyr__menu__container .plyr__control[role=menuitemradio] .plyr__menu__value {
  margin-right: auto;
  padding-left: 0;
}
[dir=rtl] .plyr__menu__container .plyr__control[role=menuitemradio]::before {
  margin-left: var(--plyr-control-spacing, 10px);
  margin-right: 0;
}
[dir=rtl] .plyr__menu__container .plyr__control[role=menuitemradio]::after {
  right: 15px;
  left: auto;
}

.light-style .plyr__tooltip {
  line-height: 1.5;
  font-size: 0.75rem;
}

.dark-style .plyr__tooltip {
  line-height: 1.5;
  font-size: 0.75rem;
}
.dark-style .plyr--audio .plyr__controls {
  color: #a3a4cc;
  background-color: #2b2c40;
}
.dark-style .plyr--full-ui.plyr--audio input[type=range]::-webkit-slider-runnable-track {
  background-color: rgba(255, 255, 255, 0.8);
}
.dark-style .plyr--full-ui.plyr--audio input[type=range]::-moz-range-track {
  background-color: rgba(255, 255, 255, 0.8);
}
.dark-style .plyr--full-ui.plyr--audio input[type=range]::-ms-track {
  background-color: rgba(255, 255, 255, 0.8);
}
.dark-style .plyr--audio .plyr__progress__buffer {
  color: rgba(255, 255, 255, 0.6);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9saWJzL3BseXIvcGx5ci5jc3MiLCIuLi9ub2RlX21vZHVsZXMvcGx5ci9zcmMvc2Fzcy9saWIvYW5pbWF0aW9uLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvcGx5ci9zcmMvc2Fzcy9iYXNlLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvcGx5ci9zcmMvc2Fzcy9saWIvbWl4aW5zLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvcGx5ci9zcmMvc2Fzcy9jb21wb25lbnRzL2JhZGdlcy5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL3BseXIvc3JjL3Nhc3MvY29tcG9uZW50cy9jYXB0aW9ucy5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL3BseXIvc3JjL3Nhc3Mvc2V0dGluZ3MvY2FwdGlvbnMuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9wbHlyL3NyYy9zYXNzL2NvbXBvbmVudHMvY29udHJvbC5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL3BseXIvc3JjL3Nhc3MvY29tcG9uZW50cy9jb250cm9scy5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL3BseXIvc3JjL3Nhc3Mvc2V0dGluZ3MvdHlwZS5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL3BseXIvc3JjL3Nhc3MvY29tcG9uZW50cy9tZW51cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUloQjtFQUNFO0lDS0YsOERBQUE7RURORTtBQUNGO0FBS0E7RUNNRTtJQUNFLFlBQUE7SUFDQSwyQkFBQTtFRFJGO0VDWUY7SUFDRSxVQUFBO0lBQ0Usd0JBQUE7RURWRjtBQUNGO0FBT0E7RUFDRTtJRWxCRixVQUFBO0VGY0U7RUVYQTtJQUNBLFVBQUE7RUZhQTtBQUNGO0FBbEJBO0VBVUksa0NBQUE7RUNPSixtQ0FBQTtFRGRFLG1CQUFBO0VBQ0EsY0FBQTtFQUNBLGFBQUE7RUNNQSxzQkFBQTtFREpBLDZDQVJpQjtFQVNqQixrQ0FBQTtFQUNBLGlEQ0dFO0VERkYseUNBRGlCO0VDUW5CLGVBQUE7RUFD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O0VBQ0EsZUFBQTtBSmduQ0Y7QUk5bUNFO0VBQ0EsOENKTHFCO0VBNEVmLGVBQUE7QUEwaUNSO0FLcm5DRTtFTCtFTSxXQUFBO0VBQ0EsVUFBQTtBQXlpQ1I7O0FLL21DRTtFQUNBLGdCS1hBO0VMWUEsa0JMc01hO0FBNDZCZjs7QUszbkNBO0VBaUJJLGdCS3BCRjtFTHFCRSxrQkw2TFc7QUFpN0JmO0FLM21DRTtFQXJCRixjTDRFYTtFS3REVCx5QkVlSjtBUCtsQ0E7QUsxbUNBO0VBQ0UsMENKUkU7QURvbkNKO0FLeG1DQTtFQUNFLDBDSmJFO0FEdW5DSjtBS3ZtQ0E7RUFDRSwwQ0pqQkU7QUQwbkNKO0FLcm1DRTtFQUNBLCtCTDVCUztBQW1vQ1g7QUFDQSw2MWtKQUE2MWtKIiwiZmlsZSI6InZlbmRvci9saWJzL3BseXIvcGx5ci5kaXN0LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbkBrZXlmcmFtZXMgcGx5ci1wcm9ncmVzcyB7XG4gIHRvIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB2YXIoLS1wbHlyLXByb2dyZXNzLWxvYWRpbmctc2l6ZSwgMjVweCkgMDtcbiAgfVxufVxuQGtleWZyYW1lcyBwbHlyLXBvcHVwIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTBweCk7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG59XG5Aa2V5ZnJhbWVzIHBseXItZmFkZS1pbiB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cbi5wbHlyIHtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGRpcmVjdGlvbjogbHRyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmb250LWZhbWlseTogdmFyKC0tcGx5ci1mb250LWZhbWlseSwgaW5oZXJpdCk7XG4gIGZvbnQtdmFyaWFudC1udW1lcmljOiB0YWJ1bGFyLW51bXM7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1wbHlyLWZvbnQtd2VpZ2h0LXJlZ3VsYXIsIDQwMCk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1wbHlyLWxpbmUtaGVpZ2h0LCAxLjcpO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1pbi13aWR0aDogMjAwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4zcyBlYXNlO1xuICB6LWluZGV4OiAwO1xufVxuLnBseXIgdmlkZW8sXG4ucGx5ciBhdWRpbyxcbi5wbHlyIGlmcmFtZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuLnBseXIgYnV0dG9uIHtcbiAgZm9udDogaW5oZXJpdDtcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gIHdpZHRoOiBhdXRvO1xufVxuLnBseXI6Zm9jdXMge1xuICBvdXRsaW5lOiAwO1xufVxuXG4ucGx5ci0tZnVsbC11aSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4ucGx5ci0tZnVsbC11aSAqLFxuLnBseXItLWZ1bGwtdWkgKjo6YWZ0ZXIsXG4ucGx5ci0tZnVsbC11aSAqOjpiZWZvcmUge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG4ucGx5ci0tZnVsbC11aSBhLFxuLnBseXItLWZ1bGwtdWkgYnV0dG9uLFxuLnBseXItLWZ1bGwtdWkgaW5wdXQsXG4ucGx5ci0tZnVsbC11aSBsYWJlbCB7XG4gIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xufVxuXG4ucGx5cl9fYmFkZ2Uge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1wbHlyLWJhZGdlLWJhY2tncm91bmQsIGhzbCgyMTZkZWcsIDE1JSwgMzQlKSk7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLXBseXItYmFkZ2UtYm9yZGVyLXJhZGl1cywgMnB4KTtcbiAgY29sb3I6IHZhcigtLXBseXItYmFkZ2UtdGV4dC1jb2xvciwgI2ZmZik7XG4gIGZvbnQtc2l6ZTogdmFyKC0tcGx5ci1mb250LXNpemUtYmFkZ2UsIDlweCk7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBwYWRkaW5nOiAzcHggNHB4O1xufVxuXG4ucGx5ci0tZnVsbC11aSA6Oi13ZWJraXQtbWVkaWEtdGV4dC10cmFjay1jb250YWluZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGx5cl9fY2FwdGlvbnMge1xuICBhbmltYXRpb246IHBseXItZmFkZS1pbiAwLjNzIGVhc2U7XG4gIGJvdHRvbTogMDtcbiAgZGlzcGxheTogbm9uZTtcbiAgZm9udC1zaXplOiB2YXIoLS1wbHlyLWZvbnQtc2l6ZS1zbWFsbCwgMTNweCk7XG4gIGxlZnQ6IDA7XG4gIHBhZGRpbmc6IHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzIGVhc2UtaW4tb3V0O1xuICB3aWR0aDogMTAwJTtcbn1cbi5wbHlyX19jYXB0aW9ucyBzcGFuOmVtcHR5IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0ODBweCkge1xuICAucGx5cl9fY2FwdGlvbnMge1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tcGx5ci1mb250LXNpemUtYmFzZSwgMTVweCk7XG4gICAgcGFkZGluZzogY2FsYyh2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCkgKiAyKTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5wbHlyX19jYXB0aW9ucyB7XG4gICAgZm9udC1zaXplOiB2YXIoLS1wbHlyLWZvbnQtc2l6ZS1sYXJnZSwgMThweCk7XG4gIH1cbn1cblxuLnBseXItLWNhcHRpb25zLWFjdGl2ZSAucGx5cl9fY2FwdGlvbnMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBseXI6bm90KC5wbHlyLS1oaWRlLWNvbnRyb2xzKSAucGx5cl9fY29udHJvbHM6bm90KDplbXB0eSkgfiAucGx5cl9fY2FwdGlvbnMge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoY2FsYyh2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCkgKiAtNCkpO1xufVxuXG4ucGx5cl9fY2FwdGlvbiB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXBseXItY2FwdGlvbnMtYmFja2dyb3VuZCwgcmdiYSgwLCAwLCAwLCAwLjgpKTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBib3gtZGVjb3JhdGlvbi1icmVhazogY2xvbmU7XG4gIGNvbG9yOiB2YXIoLS1wbHlyLWNhcHRpb25zLXRleHQtY29sb3IsICNmZmYpO1xuICBsaW5lLWhlaWdodDogMTg1JTtcbiAgcGFkZGluZzogMC4yZW0gMC41ZW07XG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbn1cbi5wbHlyX19jYXB0aW9uIGRpdiB7XG4gIGRpc3BsYXk6IGlubGluZTtcbn1cblxuLnBseXJfX2NvbnRyb2wge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1wbHlyLWNvbnRyb2wtcmFkaXVzLCAzcHgpO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmbGV4LXNocmluazogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpICogMC43KTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLnBseXJfX2NvbnRyb2wgc3ZnIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbiAgaGVpZ2h0OiB2YXIoLS1wbHlyLWNvbnRyb2wtaWNvbi1zaXplLCAxOHB4KTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHdpZHRoOiB2YXIoLS1wbHlyLWNvbnRyb2wtaWNvbi1zaXplLCAxOHB4KTtcbn1cbi5wbHlyX19jb250cm9sOmZvY3VzIHtcbiAgb3V0bGluZTogMDtcbn1cbi5wbHlyX19jb250cm9sLnBseXJfX3RhYi1mb2N1cyB7XG4gIG91dGxpbmU6IHZhcigtLXBseXItdGFiLWZvY3VzLWNvbG9yLCB2YXIoLS1wbHlyLWNvbG9yLW1haW4sIHZhcigtLXBseXItY29sb3ItbWFpbiwgaHNsKDE5OGRlZywgMTAwJSwgNTAlKSkpKSBkb3R0ZWQgM3B4O1xuICBvdXRsaW5lLW9mZnNldDogMnB4O1xufVxuXG5hLnBseXJfX2NvbnRyb2wge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5hLnBseXJfX2NvbnRyb2w6OmFmdGVyLCBhLnBseXJfX2NvbnRyb2w6OmJlZm9yZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wbHlyX19jb250cm9sOm5vdCgucGx5cl9fY29udHJvbC0tcHJlc3NlZCkgLmljb24tLXByZXNzZWQsXG4ucGx5cl9fY29udHJvbC5wbHlyX19jb250cm9sLS1wcmVzc2VkIC5pY29uLS1ub3QtcHJlc3NlZCxcbi5wbHlyX19jb250cm9sOm5vdCgucGx5cl9fY29udHJvbC0tcHJlc3NlZCkgLmxhYmVsLS1wcmVzc2VkLFxuLnBseXJfX2NvbnRyb2wucGx5cl9fY29udHJvbC0tcHJlc3NlZCAubGFiZWwtLW5vdC1wcmVzc2VkIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBseXItLWZ1bGwtdWkgOjotd2Via2l0LW1lZGlhLWNvbnRyb2xzIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBseXJfX2NvbnRyb2xzIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnBseXJfX2NvbnRyb2xzIC5wbHlyX19wcm9ncmVzc19fY29udGFpbmVyIHtcbiAgZmxleDogMTtcbiAgbWluLXdpZHRoOiAwO1xufVxuLnBseXJfX2NvbnRyb2xzIC5wbHlyX19jb250cm9sc19faXRlbSB7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KSAvIDQpO1xufVxuLnBseXJfX2NvbnRyb2xzIC5wbHlyX19jb250cm9sc19faXRlbTpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG4ucGx5cl9fY29udHJvbHMgLnBseXJfX2NvbnRyb2xzX19pdGVtLnBseXJfX3Byb2dyZXNzX19jb250YWluZXIge1xuICBwYWRkaW5nLWxlZnQ6IGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpIC8gNCk7XG59XG4ucGx5cl9fY29udHJvbHMgLnBseXJfX2NvbnRyb2xzX19pdGVtLnBseXJfX3RpbWUge1xuICBwYWRkaW5nOiAwIGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpIC8gMik7XG59XG4ucGx5cl9fY29udHJvbHMgLnBseXJfX2NvbnRyb2xzX19pdGVtLnBseXJfX3Byb2dyZXNzX19jb250YWluZXI6Zmlyc3QtY2hpbGQsIC5wbHlyX19jb250cm9scyAucGx5cl9fY29udHJvbHNfX2l0ZW0ucGx5cl9fdGltZTpmaXJzdC1jaGlsZCwgLnBseXJfX2NvbnRyb2xzIC5wbHlyX19jb250cm9sc19faXRlbS5wbHlyX190aW1lICsgLnBseXJfX3RpbWUge1xuICBwYWRkaW5nLWxlZnQ6IDA7XG59XG4ucGx5cl9fY29udHJvbHM6ZW1wdHkge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGx5ciBbZGF0YS1wbHlyPWNhcHRpb25zXSxcbi5wbHlyIFtkYXRhLXBseXI9cGlwXSxcbi5wbHlyIFtkYXRhLXBseXI9YWlycGxheV0sXG4ucGx5ciBbZGF0YS1wbHlyPWZ1bGxzY3JlZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBseXItLWNhcHRpb25zLWVuYWJsZWQgW2RhdGEtcGx5cj1jYXB0aW9uc10sXG4ucGx5ci0tcGlwLXN1cHBvcnRlZCBbZGF0YS1wbHlyPXBpcF0sXG4ucGx5ci0tYWlycGxheS1zdXBwb3J0ZWQgW2RhdGEtcGx5cj1haXJwbGF5XSxcbi5wbHlyLS1mdWxsc2NyZWVuLWVuYWJsZWQgW2RhdGEtcGx5cj1mdWxsc2NyZWVuXSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnBseXJfX21lbnUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ucGx5cl9fbWVudSAucGx5cl9fY29udHJvbCBzdmcge1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xufVxuLnBseXJfX21lbnUgLnBseXJfX2NvbnRyb2xbYXJpYS1leHBhbmRlZD10cnVlXSBzdmcge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG59XG4ucGx5cl9fbWVudSAucGx5cl9fY29udHJvbFthcmlhLWV4cGFuZGVkPXRydWVdIC5wbHlyX190b29sdGlwIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5wbHlyX19tZW51X19jb250YWluZXIge1xuICBhbmltYXRpb246IHBseXItcG9wdXAgMC4ycyBlYXNlO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1wbHlyLW1lbnUtYmFja2dyb3VuZCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpKTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3R0b206IDEwMCU7XG4gIGJveC1zaGFkb3c6IHZhcigtLXBseXItbWVudS1zaGFkb3csIDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTUpKTtcbiAgY29sb3I6IHZhcigtLXBseXItbWVudS1jb2xvciwgaHNsKDIxNmRlZywgMTUlLCAzNCUpKTtcbiAgZm9udC1zaXplOiB2YXIoLS1wbHlyLWZvbnQtc2l6ZS1iYXNlLCAxNXB4KTtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogLTNweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgei1pbmRleDogMztcbn1cbi5wbHlyX19tZW51X19jb250YWluZXIgPiBkaXYge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0cmFuc2l0aW9uOiBoZWlnaHQgMC4zNXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKSwgd2lkdGggMC4zNXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTtcbn1cbi5wbHlyX19tZW51X19jb250YWluZXI6OmFmdGVyIHtcbiAgYm9yZGVyOiB2YXIoLS1wbHlyLW1lbnUtYXJyb3ctc2l6ZSwgNHB4KSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXRvcC1jb2xvcjogdmFyKC0tcGx5ci1tZW51LWJhY2tncm91bmQsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KSk7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGhlaWdodDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogY2FsYygoKHZhcigtLXBseXItY29udHJvbC1pY29uLXNpemUsIDE4cHgpIC8gMikgKyBjYWxjKHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KSAqIDAuNykpIC0gKHZhcigtLXBseXItbWVudS1hcnJvdy1zaXplLCA0cHgpIC8gMikpO1xuICB0b3A6IDEwMCU7XG4gIHdpZHRoOiAwO1xufVxuLnBseXJfX21lbnVfX2NvbnRhaW5lciBbcm9sZT1tZW51XSB7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpICogMC43KTtcbn1cbi5wbHlyX19tZW51X19jb250YWluZXIgW3JvbGU9bWVudWl0ZW1dLFxuLnBseXJfX21lbnVfX2NvbnRhaW5lciBbcm9sZT1tZW51aXRlbXJhZGlvXSB7XG4gIG1hcmdpbi10b3A6IDJweDtcbn1cbi5wbHlyX19tZW51X19jb250YWluZXIgW3JvbGU9bWVudWl0ZW1dOmZpcnN0LWNoaWxkLFxuLnBseXJfX21lbnVfX2NvbnRhaW5lciBbcm9sZT1tZW51aXRlbXJhZGlvXTpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG4ucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19jb250cm9sIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6IHZhcigtLXBseXItbWVudS1jb2xvciwgaHNsKDIxNmRlZywgMTUlLCAzNCUpKTtcbiAgZGlzcGxheTogZmxleDtcbiAgZm9udC1zaXplOiB2YXIoLS1wbHlyLWZvbnQtc2l6ZS1tZW51LCB2YXIoLS1wbHlyLWZvbnQtc2l6ZS1zbWFsbCwgMTNweCkpO1xuICBwYWRkaW5nOiBjYWxjKGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpICogMC43KSAvIDEuNSkgY2FsYyhjYWxjKHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KSAqIDAuNykgKiAxLjUpO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgd2lkdGg6IDEwMCU7XG59XG4ucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19jb250cm9sID4gc3BhbiB7XG4gIGFsaWduLWl0ZW1zOiBpbmhlcml0O1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTAwJTtcbn1cbi5wbHlyX19tZW51X19jb250YWluZXIgLnBseXJfX2NvbnRyb2w6OmFmdGVyIHtcbiAgYm9yZGVyOiB2YXIoLS1wbHlyLW1lbnUtaXRlbS1hcnJvdy1zaXplLCA0cHgpIHNvbGlkIHRyYW5zcGFyZW50O1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG4ucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19jb250cm9sLS1mb3J3YXJkIHtcbiAgcGFkZGluZy1yaWdodDogY2FsYyhjYWxjKHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KSAqIDAuNykgKiA0KTtcbn1cbi5wbHlyX19tZW51X19jb250YWluZXIgLnBseXJfX2NvbnRyb2wtLWZvcndhcmQ6OmFmdGVyIHtcbiAgYm9yZGVyLWxlZnQtY29sb3I6IHZhcigtLXBseXItbWVudS1hcnJvdy1jb2xvciwgaHNsKDIxNmRlZywgMTUlLCA1MiUpKTtcbiAgcmlnaHQ6IGNhbGMoKGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpICogMC43KSAqIDEuNSkgLSB2YXIoLS1wbHlyLW1lbnUtaXRlbS1hcnJvdy1zaXplLCA0cHgpKTtcbn1cbi5wbHlyX19tZW51X19jb250YWluZXIgLnBseXJfX2NvbnRyb2wtLWZvcndhcmQucGx5cl9fdGFiLWZvY3VzOjphZnRlciwgLnBseXJfX21lbnVfX2NvbnRhaW5lciAucGx5cl9fY29udHJvbC0tZm9yd2FyZDpob3Zlcjo6YWZ0ZXIge1xuICBib3JkZXItbGVmdC1jb2xvcjogY3VycmVudENvbG9yO1xufVxuLnBseXJfX21lbnVfX2NvbnRhaW5lciAucGx5cl9fY29udHJvbC0tYmFjayB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1wbHlyLWZvbnQtd2VpZ2h0LXJlZ3VsYXIsIDQwMCk7XG4gIG1hcmdpbjogY2FsYyh2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCkgKiAwLjcpO1xuICBtYXJnaW4tYm90dG9tOiBjYWxjKGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpICogMC43KSAvIDIpO1xuICBwYWRkaW5nLWxlZnQ6IGNhbGMoY2FsYyh2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCkgKiAwLjcpICogNCk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIChjYWxjKHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KSAqIDAuNykgKiAyKSk7XG59XG4ucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19jb250cm9sLS1iYWNrOjphZnRlciB7XG4gIGJvcmRlci1yaWdodC1jb2xvcjogdmFyKC0tcGx5ci1tZW51LWFycm93LWNvbG9yLCBoc2woMjE2ZGVnLCAxNSUsIDUyJSkpO1xuICBsZWZ0OiBjYWxjKChjYWxjKHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KSAqIDAuNykgKiAxLjUpIC0gdmFyKC0tcGx5ci1tZW51LWl0ZW0tYXJyb3ctc2l6ZSwgNHB4KSk7XG59XG4ucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19jb250cm9sLS1iYWNrOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1wbHlyLW1lbnUtYmFjay1ib3JkZXItY29sb3IsIGhzbCgyMTZkZWcsIDE1JSwgODglKSk7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDAgdmFyKC0tcGx5ci1tZW51LWJhY2stYm9yZGVyLXNoYWRvdy1jb2xvciwgI2ZmZik7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGhlaWdodDogMXB4O1xuICBsZWZ0OiAwO1xuICBtYXJnaW4tdG9wOiBjYWxjKGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpICogMC43KSAvIDIpO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDEwMCU7XG59XG4ucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19jb250cm9sLS1iYWNrLnBseXJfX3RhYi1mb2N1czo6YWZ0ZXIsIC5wbHlyX19tZW51X19jb250YWluZXIgLnBseXJfX2NvbnRyb2wtLWJhY2s6aG92ZXI6OmFmdGVyIHtcbiAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBjdXJyZW50Q29sb3I7XG59XG4ucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19jb250cm9sW3JvbGU9bWVudWl0ZW1yYWRpb10ge1xuICBwYWRkaW5nLWxlZnQ6IGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpICogMC43KTtcbn1cbi5wbHlyX19tZW51X19jb250YWluZXIgLnBseXJfX2NvbnRyb2xbcm9sZT1tZW51aXRlbXJhZGlvXTo6YmVmb3JlLCAucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19jb250cm9sW3JvbGU9bWVudWl0ZW1yYWRpb106OmFmdGVyIHtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbn1cbi5wbHlyX19tZW51X19jb250YWluZXIgLnBseXJfX2NvbnRyb2xbcm9sZT1tZW51aXRlbXJhZGlvXTo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZmxleC1zaHJpbms6IDA7XG4gIGhlaWdodDogMTZweDtcbiAgbWFyZ2luLXJpZ2h0OiB2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCk7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIHdpZHRoOiAxNnB4O1xufVxuLnBseXJfX21lbnVfX2NvbnRhaW5lciAucGx5cl9fY29udHJvbFtyb2xlPW1lbnVpdGVtcmFkaW9dOjphZnRlciB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJvcmRlcjogMDtcbiAgaGVpZ2h0OiA2cHg7XG4gIGxlZnQ6IDEycHg7XG4gIG9wYWNpdHk6IDA7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGUoMCk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UsIG9wYWNpdHkgMC4zcyBlYXNlO1xuICB3aWR0aDogNnB4O1xufVxuLnBseXJfX21lbnVfX2NvbnRhaW5lciAucGx5cl9fY29udHJvbFtyb2xlPW1lbnVpdGVtcmFkaW9dW2FyaWEtY2hlY2tlZD10cnVlXTo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tcGx5ci1jb250cm9sLXRvZ2dsZS1jaGVja2VkLWJhY2tncm91bmQsIHZhcigtLXBseXItY29sb3ItbWFpbiwgdmFyKC0tcGx5ci1jb2xvci1tYWluLCBoc2woMTk4ZGVnLCAxMDAlLCA1MCUpKSkpO1xufVxuLnBseXJfX21lbnVfX2NvbnRhaW5lciAucGx5cl9fY29udHJvbFtyb2xlPW1lbnVpdGVtcmFkaW9dW2FyaWEtY2hlY2tlZD10cnVlXTo6YWZ0ZXIge1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGUoMSk7XG59XG4ucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19jb250cm9sW3JvbGU9bWVudWl0ZW1yYWRpb10ucGx5cl9fdGFiLWZvY3VzOjpiZWZvcmUsIC5wbHlyX19tZW51X19jb250YWluZXIgLnBseXJfX2NvbnRyb2xbcm9sZT1tZW51aXRlbXJhZGlvXTpob3Zlcjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogcmdiYSgzNSwgNDAsIDQ3LCAwLjEpO1xufVxuLnBseXJfX21lbnVfX2NvbnRhaW5lciAucGx5cl9fbWVudV9fdmFsdWUge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBjYWxjKChjYWxjKHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KSAqIDAuNykgLSAyKSAqIC0xKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZy1sZWZ0OiBjYWxjKGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpICogMC43KSAqIDMuNSk7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4ucGx5ci0tZnVsbC11aSBpbnB1dFt0eXBlPXJhbmdlXSB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IGNhbGModmFyKC0tcGx5ci1yYW5nZS10aHVtYi1oZWlnaHQsIDEzcHgpICogMik7XG4gIGNvbG9yOiB2YXIoLS1wbHlyLXJhbmdlLWZpbGwtYmFja2dyb3VuZCwgdmFyKC0tcGx5ci1jb2xvci1tYWluLCB2YXIoLS1wbHlyLWNvbG9yLW1haW4sIGhzbCgxOThkZWcsIDEwMCUsIDUwJSkpKSk7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IGNhbGMoKHZhcigtLXBseXItcmFuZ2UtdGh1bWItYWN0aXZlLXNoYWRvdy13aWR0aCwgM3B4KSAqIDIpICsgdmFyKC0tcGx5ci1yYW5nZS10aHVtYi1oZWlnaHQsIDEzcHgpKTtcbiAgbWFyZ2luOiAwO1xuICBtaW4td2lkdGg6IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4zcyBlYXNlO1xuICB3aWR0aDogMTAwJTtcbn1cbi5wbHlyLS1mdWxsLXVpIGlucHV0W3R5cGU9cmFuZ2VdOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFjayB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IGNhbGModmFyKC0tcGx5ci1yYW5nZS10cmFjay1oZWlnaHQsIDVweCkgLyAyKTtcbiAgaGVpZ2h0OiB2YXIoLS1wbHlyLXJhbmdlLXRyYWNrLWhlaWdodCwgNXB4KTtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjNzIGVhc2U7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIGN1cnJlbnRDb2xvciB2YXIoLS12YWx1ZSwgMCUpLCB0cmFuc3BhcmVudCB2YXIoLS12YWx1ZSwgMCUpKTtcbn1cbi5wbHlyLS1mdWxsLXVpIGlucHV0W3R5cGU9cmFuZ2VdOjotd2Via2l0LXNsaWRlci10aHVtYiB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXBseXItcmFuZ2UtdGh1bWItYmFja2dyb3VuZCwgI2ZmZik7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgYm94LXNoYWRvdzogdmFyKC0tcGx5ci1yYW5nZS10aHVtYi1zaGFkb3csIDAgMXB4IDFweCByZ2JhKDM1LCA0MCwgNDcsIDAuMTUpLCAwIDAgMCAxcHggcmdiYSgzNSwgNDAsIDQ3LCAwLjIpKTtcbiAgaGVpZ2h0OiB2YXIoLS1wbHlyLXJhbmdlLXRodW1iLWhlaWdodCwgMTNweCk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgd2lkdGg6IHZhcigtLXBseXItcmFuZ2UtdGh1bWItaGVpZ2h0LCAxM3B4KTtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgbWFyZ2luLXRvcDogY2FsYygodmFyKC0tcGx5ci1yYW5nZS10aHVtYi1oZWlnaHQsIDEzcHgpIC0gdmFyKC0tcGx5ci1yYW5nZS10cmFjay1oZWlnaHQsIDVweCkpIC8gMiAqIC0xKTtcbn1cbi5wbHlyLS1mdWxsLXVpIGlucHV0W3R5cGU9cmFuZ2VdOjotbW96LXJhbmdlLXRyYWNrIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogY2FsYyh2YXIoLS1wbHlyLXJhbmdlLXRyYWNrLWhlaWdodCwgNXB4KSAvIDIpO1xuICBoZWlnaHQ6IHZhcigtLXBseXItcmFuZ2UtdHJhY2staGVpZ2h0LCA1cHgpO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuM3MgZWFzZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG4ucGx5ci0tZnVsbC11aSBpbnB1dFt0eXBlPXJhbmdlXTo6LW1vei1yYW5nZS10aHVtYiB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXBseXItcmFuZ2UtdGh1bWItYmFja2dyb3VuZCwgI2ZmZik7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgYm94LXNoYWRvdzogdmFyKC0tcGx5ci1yYW5nZS10aHVtYi1zaGFkb3csIDAgMXB4IDFweCByZ2JhKDM1LCA0MCwgNDcsIDAuMTUpLCAwIDAgMCAxcHggcmdiYSgzNSwgNDAsIDQ3LCAwLjIpKTtcbiAgaGVpZ2h0OiB2YXIoLS1wbHlyLXJhbmdlLXRodW1iLWhlaWdodCwgMTNweCk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgd2lkdGg6IHZhcigtLXBseXItcmFuZ2UtdGh1bWItaGVpZ2h0LCAxM3B4KTtcbn1cbi5wbHlyLS1mdWxsLXVpIGlucHV0W3R5cGU9cmFuZ2VdOjotbW96LXJhbmdlLXByb2dyZXNzIHtcbiAgYmFja2dyb3VuZDogY3VycmVudENvbG9yO1xuICBib3JkZXItcmFkaXVzOiBjYWxjKHZhcigtLXBseXItcmFuZ2UtdHJhY2staGVpZ2h0LCA1cHgpIC8gMik7XG4gIGhlaWdodDogdmFyKC0tcGx5ci1yYW5nZS10cmFjay1oZWlnaHQsIDVweCk7XG59XG4ucGx5ci0tZnVsbC11aSBpbnB1dFt0eXBlPXJhbmdlXTo6LW1zLXRyYWNrIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogY2FsYyh2YXIoLS1wbHlyLXJhbmdlLXRyYWNrLWhlaWdodCwgNXB4KSAvIDIpO1xuICBoZWlnaHQ6IHZhcigtLXBseXItcmFuZ2UtdHJhY2staGVpZ2h0LCA1cHgpO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuM3MgZWFzZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbi5wbHlyLS1mdWxsLXVpIGlucHV0W3R5cGU9cmFuZ2VdOjotbXMtZmlsbC11cHBlciB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IGNhbGModmFyKC0tcGx5ci1yYW5nZS10cmFjay1oZWlnaHQsIDVweCkgLyAyKTtcbiAgaGVpZ2h0OiB2YXIoLS1wbHlyLXJhbmdlLXRyYWNrLWhlaWdodCwgNXB4KTtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjNzIGVhc2U7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuLnBseXItLWZ1bGwtdWkgaW5wdXRbdHlwZT1yYW5nZV06Oi1tcy1maWxsLWxvd2VyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogY2FsYyh2YXIoLS1wbHlyLXJhbmdlLXRyYWNrLWhlaWdodCwgNXB4KSAvIDIpO1xuICBoZWlnaHQ6IHZhcigtLXBseXItcmFuZ2UtdHJhY2staGVpZ2h0LCA1cHgpO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuM3MgZWFzZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcbn1cbi5wbHlyLS1mdWxsLXVpIGlucHV0W3R5cGU9cmFuZ2VdOjotbXMtdGh1bWIge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1wbHlyLXJhbmdlLXRodW1iLWJhY2tncm91bmQsICNmZmYpO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIGJveC1zaGFkb3c6IHZhcigtLXBseXItcmFuZ2UtdGh1bWItc2hhZG93LCAwIDFweCAxcHggcmdiYSgzNSwgNDAsIDQ3LCAwLjE1KSwgMCAwIDAgMXB4IHJnYmEoMzUsIDQwLCA0NywgMC4yKSk7XG4gIGhlaWdodDogdmFyKC0tcGx5ci1yYW5nZS10aHVtYi1oZWlnaHQsIDEzcHgpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG4gIHdpZHRoOiB2YXIoLS1wbHlyLXJhbmdlLXRodW1iLWhlaWdodCwgMTNweCk7XG4gIG1hcmdpbi10b3A6IDA7XG59XG4ucGx5ci0tZnVsbC11aSBpbnB1dFt0eXBlPXJhbmdlXTo6LW1zLXRvb2x0aXAge1xuICBkaXNwbGF5OiBub25lO1xufVxuLnBseXItLWZ1bGwtdWkgaW5wdXRbdHlwZT1yYW5nZV06Oi1tb3otZm9jdXMtb3V0ZXIge1xuICBib3JkZXI6IDA7XG59XG4ucGx5ci0tZnVsbC11aSBpbnB1dFt0eXBlPXJhbmdlXTpmb2N1cyB7XG4gIG91dGxpbmU6IDA7XG59XG4ucGx5ci0tZnVsbC11aSBpbnB1dFt0eXBlPXJhbmdlXS5wbHlyX190YWItZm9jdXM6Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNrIHtcbiAgb3V0bGluZTogdmFyKC0tcGx5ci10YWItZm9jdXMtY29sb3IsIHZhcigtLXBseXItY29sb3ItbWFpbiwgdmFyKC0tcGx5ci1jb2xvci1tYWluLCBoc2woMTk4ZGVnLCAxMDAlLCA1MCUpKSkpIGRvdHRlZCAzcHg7XG4gIG91dGxpbmUtb2Zmc2V0OiAycHg7XG59XG4ucGx5ci0tZnVsbC11aSBpbnB1dFt0eXBlPXJhbmdlXS5wbHlyX190YWItZm9jdXM6Oi1tb3otcmFuZ2UtdHJhY2sge1xuICBvdXRsaW5lOiB2YXIoLS1wbHlyLXRhYi1mb2N1cy1jb2xvciwgdmFyKC0tcGx5ci1jb2xvci1tYWluLCB2YXIoLS1wbHlyLWNvbG9yLW1haW4sIGhzbCgxOThkZWcsIDEwMCUsIDUwJSkpKSkgZG90dGVkIDNweDtcbiAgb3V0bGluZS1vZmZzZXQ6IDJweDtcbn1cbi5wbHlyLS1mdWxsLXVpIGlucHV0W3R5cGU9cmFuZ2VdLnBseXJfX3RhYi1mb2N1czo6LW1zLXRyYWNrIHtcbiAgb3V0bGluZTogdmFyKC0tcGx5ci10YWItZm9jdXMtY29sb3IsIHZhcigtLXBseXItY29sb3ItbWFpbiwgdmFyKC0tcGx5ci1jb2xvci1tYWluLCBoc2woMTk4ZGVnLCAxMDAlLCA1MCUpKSkpIGRvdHRlZCAzcHg7XG4gIG91dGxpbmUtb2Zmc2V0OiAycHg7XG59XG5cbi5wbHlyX19wb3N0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wbHlyLXZpZGVvLWJhY2tncm91bmQsIHZhcigtLXBseXItdmlkZW8tYmFja2dyb3VuZCwgcmdiKDAsIDAsIDApKSk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsZWZ0OiAwO1xuICBvcGFjaXR5OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2U7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiAxO1xufVxuXG4ucGx5ci0tc3RvcHBlZC5wbHlyX19wb3N0ZXItZW5hYmxlZCAucGx5cl9fcG9zdGVyIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLnBseXItLXlvdXR1YmUucGx5ci0tcGF1c2VkLnBseXJfX3Bvc3Rlci1lbmFibGVkOm5vdCgucGx5ci0tc3RvcHBlZCkgLnBseXJfX3Bvc3RlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wbHlyX190aW1lIHtcbiAgZm9udC1zaXplOiB2YXIoLS1wbHlyLWZvbnQtc2l6ZS10aW1lLCB2YXIoLS1wbHlyLWZvbnQtc2l6ZS1zbWFsbCwgMTNweCkpO1xufVxuXG4ucGx5cl9fdGltZSArIC5wbHlyX190aW1lOjpiZWZvcmUge1xuICBjb250ZW50OiBcIuKBhFwiO1xuICBtYXJnaW4tcmlnaHQ6IHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAucGx5cl9fdGltZSArIC5wbHlyX190aW1lIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi8qIHN0eWxlbGludC1kaXNhYmxlIHNlbGVjdG9yLW1heC1jb21wb3VuZC1zZWxlY3RvcnMgKi9cbi5wbHlyX190b29sdGlwIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tcGx5ci10b29sdGlwLWJhY2tncm91bmQsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KSk7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLXBseXItdG9vbHRpcC1yYWRpdXMsIDVweCk7XG4gIGJvdHRvbTogMTAwJTtcbiAgYm94LXNoYWRvdzogdmFyKC0tcGx5ci10b29sdGlwLXNoYWRvdywgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xNSkpO1xuICBjb2xvcjogdmFyKC0tcGx5ci10b29sdGlwLWNvbG9yLCBoc2woMjE2ZGVnLCAxNSUsIDM0JSkpO1xuICBmb250LXNpemU6IHZhcigtLXBseXItZm9udC1zaXplLXNtYWxsLCAxM3B4KTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLXBseXItZm9udC13ZWlnaHQtcmVndWxhciwgNDAwKTtcbiAgbGVmdDogNTAlO1xuICBsaW5lLWhlaWdodDogMS4zO1xuICBtYXJnaW4tYm90dG9tOiBjYWxjKGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpIC8gMikgKiAyKTtcbiAgb3BhY2l0eTogMDtcbiAgcGFkZGluZzogY2FsYyh2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCkgLyAyKSBjYWxjKGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpIC8gMikgKiAxLjUpO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAxMHB4KSBzY2FsZSgwLjgpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgMTAwJTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgMC4xcyBlYXNlLCBvcGFjaXR5IDAuMnMgMC4xcyBlYXNlO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB6LWluZGV4OiAyO1xufVxuLnBseXJfX3Rvb2x0aXA6OmJlZm9yZSB7XG4gIGJvcmRlci1sZWZ0OiB2YXIoLS1wbHlyLXRvb2x0aXAtYXJyb3ctc2l6ZSwgNHB4KSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJpZ2h0OiB2YXIoLS1wbHlyLXRvb2x0aXAtYXJyb3ctc2l6ZSwgNHB4KSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXRvcDogdmFyKC0tcGx5ci10b29sdGlwLWFycm93LXNpemUsIDRweCkgc29saWQgdmFyKC0tcGx5ci10b29sdGlwLWJhY2tncm91bmQsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KSk7XG4gIGJvdHRvbTogY2FsYyh2YXIoLS1wbHlyLXRvb2x0aXAtYXJyb3ctc2l6ZSwgNHB4KSAqIC0xKTtcbiAgY29udGVudDogXCJcIjtcbiAgaGVpZ2h0OiAwO1xuICBsZWZ0OiA1MCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB3aWR0aDogMDtcbiAgei1pbmRleDogMjtcbn1cblxuLnBseXIgLnBseXJfX2NvbnRyb2w6aG92ZXIgLnBseXJfX3Rvb2x0aXAsXG4ucGx5ciAucGx5cl9fY29udHJvbC5wbHlyX190YWItZm9jdXMgLnBseXJfX3Rvb2x0aXAsXG4ucGx5cl9fdG9vbHRpcC0tdmlzaWJsZSB7XG4gIG9wYWNpdHk6IDE7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDApIHNjYWxlKDEpO1xufVxuXG4ucGx5ciAucGx5cl9fY29udHJvbDpob3ZlciAucGx5cl9fdG9vbHRpcCB7XG4gIHotaW5kZXg6IDM7XG59XG5cbi5wbHlyX19jb250cm9scyA+IC5wbHlyX19jb250cm9sOmZpcnN0LWNoaWxkIC5wbHlyX190b29sdGlwLFxuLnBseXJfX2NvbnRyb2xzID4gLnBseXJfX2NvbnRyb2w6Zmlyc3QtY2hpbGQgKyAucGx5cl9fY29udHJvbCAucGx5cl9fdG9vbHRpcCB7XG4gIGxlZnQ6IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwcHgpIHNjYWxlKDAuOCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDAgMTAwJTtcbn1cbi5wbHlyX19jb250cm9scyA+IC5wbHlyX19jb250cm9sOmZpcnN0LWNoaWxkIC5wbHlyX190b29sdGlwOjpiZWZvcmUsXG4ucGx5cl9fY29udHJvbHMgPiAucGx5cl9fY29udHJvbDpmaXJzdC1jaGlsZCArIC5wbHlyX19jb250cm9sIC5wbHlyX190b29sdGlwOjpiZWZvcmUge1xuICBsZWZ0OiBjYWxjKCh2YXIoLS1wbHlyLWNvbnRyb2wtaWNvbi1zaXplLCAxOHB4KSAvIDIpICsgY2FsYyh2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCkgKiAwLjcpKTtcbn1cblxuLnBseXJfX2NvbnRyb2xzID4gLnBseXJfX2NvbnRyb2w6bGFzdC1jaGlsZCAucGx5cl9fdG9vbHRpcCB7XG4gIGxlZnQ6IGF1dG87XG4gIHJpZ2h0OiAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAxMHB4KSBzY2FsZSgwLjgpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiAxMDAlIDEwMCU7XG59XG4ucGx5cl9fY29udHJvbHMgPiAucGx5cl9fY29udHJvbDpsYXN0LWNoaWxkIC5wbHlyX190b29sdGlwOjpiZWZvcmUge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogY2FsYygodmFyKC0tcGx5ci1jb250cm9sLWljb24tc2l6ZSwgMThweCkgLyAyKSArIGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpICogMC43KSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MCUpO1xufVxuXG4ucGx5cl9fY29udHJvbHMgPiAucGx5cl9fY29udHJvbDpmaXJzdC1jaGlsZDpob3ZlciAucGx5cl9fdG9vbHRpcCwgLnBseXJfX2NvbnRyb2xzID4gLnBseXJfX2NvbnRyb2w6Zmlyc3QtY2hpbGQucGx5cl9fdGFiLWZvY3VzIC5wbHlyX190b29sdGlwLFxuLnBseXJfX2NvbnRyb2xzID4gLnBseXJfX2NvbnRyb2w6Zmlyc3QtY2hpbGQgLnBseXJfX3Rvb2x0aXAtLXZpc2libGUsXG4ucGx5cl9fY29udHJvbHMgPiAucGx5cl9fY29udHJvbDpmaXJzdC1jaGlsZCArIC5wbHlyX19jb250cm9sOmhvdmVyIC5wbHlyX190b29sdGlwLFxuLnBseXJfX2NvbnRyb2xzID4gLnBseXJfX2NvbnRyb2w6Zmlyc3QtY2hpbGQgKyAucGx5cl9fY29udHJvbC5wbHlyX190YWItZm9jdXMgLnBseXJfX3Rvb2x0aXAsXG4ucGx5cl9fY29udHJvbHMgPiAucGx5cl9fY29udHJvbDpmaXJzdC1jaGlsZCArIC5wbHlyX19jb250cm9sIC5wbHlyX190b29sdGlwLS12aXNpYmxlLFxuLnBseXJfX2NvbnRyb2xzID4gLnBseXJfX2NvbnRyb2w6bGFzdC1jaGlsZDpob3ZlciAucGx5cl9fdG9vbHRpcCxcbi5wbHlyX19jb250cm9scyA+IC5wbHlyX19jb250cm9sOmxhc3QtY2hpbGQucGx5cl9fdGFiLWZvY3VzIC5wbHlyX190b29sdGlwLFxuLnBseXJfX2NvbnRyb2xzID4gLnBseXJfX2NvbnRyb2w6bGFzdC1jaGlsZCAucGx5cl9fdG9vbHRpcC0tdmlzaWJsZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApIHNjYWxlKDEpO1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3Mge1xuICBsZWZ0OiBjYWxjKHZhcigtLXBseXItcmFuZ2UtdGh1bWItaGVpZ2h0LCAxM3B4KSAqIDAuNSk7XG4gIG1hcmdpbi1yaWdodDogdmFyKC0tcGx5ci1yYW5nZS10aHVtYi1oZWlnaHQsIDEzcHgpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ucGx5cl9fcHJvZ3Jlc3MgaW5wdXRbdHlwZT1yYW5nZV0sIC5wbHlyX19wcm9ncmVzc19fYnVmZmVyIHtcbiAgbWFyZ2luLWxlZnQ6IGNhbGModmFyKC0tcGx5ci1yYW5nZS10aHVtYi1oZWlnaHQsIDEzcHgpICogLTAuNSk7XG4gIG1hcmdpbi1yaWdodDogY2FsYyh2YXIoLS1wbHlyLXJhbmdlLXRodW1iLWhlaWdodCwgMTNweCkgKiAtMC41KTtcbiAgd2lkdGg6IGNhbGMoMTAwJSArIHZhcigtLXBseXItcmFuZ2UtdGh1bWItaGVpZ2h0LCAxM3B4KSk7XG59XG4ucGx5cl9fcHJvZ3Jlc3MgaW5wdXRbdHlwZT1yYW5nZV0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG59XG4ucGx5cl9fcHJvZ3Jlc3MgLnBseXJfX3Rvb2x0aXAge1xuICBsZWZ0OiAwO1xuICBtYXgtd2lkdGg6IDEyMHB4O1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xufVxuXG4ucGx5cl9fcHJvZ3Jlc3NfX2J1ZmZlciB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgLyogc3R5bGVsaW50LWRpc2FibGUtbGluZSAqL1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgaGVpZ2h0OiB2YXIoLS1wbHlyLXJhbmdlLXRyYWNrLWhlaWdodCwgNXB4KTtcbiAgbGVmdDogMDtcbiAgbWFyZ2luLXRvcDogY2FsYygodmFyKC0tcGx5ci1yYW5nZS10cmFjay1oZWlnaHQsIDVweCkgLyAyKSAqIC0xKTtcbiAgcGFkZGluZzogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbn1cbi5wbHlyX19wcm9ncmVzc19fYnVmZmVyOjotd2Via2l0LXByb2dyZXNzLWJhciB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuLnBseXJfX3Byb2dyZXNzX19idWZmZXI6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWUge1xuICBiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7XG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xuICBtaW4td2lkdGg6IHZhcigtLXBseXItcmFuZ2UtdHJhY2staGVpZ2h0LCA1cHgpO1xuICB0cmFuc2l0aW9uOiB3aWR0aCAwLjJzIGVhc2U7XG59XG4ucGx5cl9fcHJvZ3Jlc3NfX2J1ZmZlcjo6LW1vei1wcm9ncmVzcy1iYXIge1xuICBiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7XG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xuICBtaW4td2lkdGg6IHZhcigtLXBseXItcmFuZ2UtdHJhY2staGVpZ2h0LCA1cHgpO1xuICB0cmFuc2l0aW9uOiB3aWR0aCAwLjJzIGVhc2U7XG59XG4ucGx5cl9fcHJvZ3Jlc3NfX2J1ZmZlcjo6LW1zLWZpbGwge1xuICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgdHJhbnNpdGlvbjogd2lkdGggMC4ycyBlYXNlO1xufVxuXG4ucGx5ci0tbG9hZGluZyAucGx5cl9fcHJvZ3Jlc3NfX2J1ZmZlciB7XG4gIGFuaW1hdGlvbjogcGx5ci1wcm9ncmVzcyAxcyBsaW5lYXIgaW5maW5pdGU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgtNDVkZWcsIHZhcigtLXBseXItcHJvZ3Jlc3MtbG9hZGluZy1iYWNrZ3JvdW5kLCByZ2JhKDM1LCA0MCwgNDcsIDAuNikpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHZhcigtLXBseXItcHJvZ3Jlc3MtbG9hZGluZy1iYWNrZ3JvdW5kLCByZ2JhKDM1LCA0MCwgNDcsIDAuNikpIDUwJSwgdmFyKC0tcGx5ci1wcm9ncmVzcy1sb2FkaW5nLWJhY2tncm91bmQsIHJnYmEoMzUsIDQwLCA0NywgMC42KSkgNzUlLCB0cmFuc3BhcmVudCA3NSUsIHRyYW5zcGFyZW50KTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IHZhcigtLXBseXItcHJvZ3Jlc3MtbG9hZGluZy1zaXplLCAyNXB4KSB2YXIoLS1wbHlyLXByb2dyZXNzLWxvYWRpbmctc2l6ZSwgMjVweCk7XG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLnBseXItLXZpZGVvLnBseXItLWxvYWRpbmcgLnBseXJfX3Byb2dyZXNzX19idWZmZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wbHlyLXZpZGVvLXByb2dyZXNzLWJ1ZmZlcmVkLWJhY2tncm91bmQsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yNSkpO1xufVxuXG4ucGx5ci0tYXVkaW8ucGx5ci0tbG9hZGluZyAucGx5cl9fcHJvZ3Jlc3NfX2J1ZmZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBseXItYXVkaW8tcHJvZ3Jlc3MtYnVmZmVyZWQtYmFja2dyb3VuZCwgcmdiYSgxOTMsIDIwMCwgMjA5LCAwLjYpKTtcbn1cblxuLnBseXJfX3Byb2dyZXNzX19tYXJrZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wbHlyLXByb2dyZXNzLW1hcmtlci1iYWNrZ3JvdW5kLCAjZmZmKTtcbiAgYm9yZGVyLXJhZGl1czogMXB4O1xuICBoZWlnaHQ6IHZhcigtLXBseXItcmFuZ2UtdHJhY2staGVpZ2h0LCA1cHgpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgd2lkdGg6IHZhcigtLXBseXItcHJvZ3Jlc3MtbWFya2VyLXdpZHRoLCAzcHgpO1xuICB6LWluZGV4OiAzO1xufVxuXG4ucGx5cl9fdm9sdW1lIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgbWF4LXdpZHRoOiAxMTBweDtcbiAgbWluLXdpZHRoOiA4MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAyMCU7XG59XG4ucGx5cl9fdm9sdW1lIGlucHV0W3R5cGU9cmFuZ2VdIHtcbiAgbWFyZ2luLWxlZnQ6IGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpIC8gMik7XG4gIG1hcmdpbi1yaWdodDogY2FsYyh2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCkgLyAyKTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyO1xufVxuXG4ucGx5ci0taXMtaW9zIC5wbHlyX192b2x1bWUge1xuICBtaW4td2lkdGg6IDA7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4ucGx5ci0tYXVkaW8ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBseXItLWF1ZGlvIC5wbHlyX19jb250cm9scyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXBseXItYXVkaW8tY29udHJvbHMtYmFja2dyb3VuZCwgI2ZmZik7XG4gIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG4gIGNvbG9yOiB2YXIoLS1wbHlyLWF1ZGlvLWNvbnRyb2wtY29sb3IsIGhzbCgyMTZkZWcsIDE1JSwgMzQlKSk7XG4gIHBhZGRpbmc6IHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KTtcbn1cblxuLnBseXItLWF1ZGlvIC5wbHlyX19jb250cm9sLnBseXJfX3RhYi1mb2N1cywgLnBseXItLWF1ZGlvIC5wbHlyX19jb250cm9sOmhvdmVyLCAucGx5ci0tYXVkaW8gLnBseXJfX2NvbnRyb2xbYXJpYS1leHBhbmRlZD10cnVlXSB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXBseXItYXVkaW8tY29udHJvbC1iYWNrZ3JvdW5kLWhvdmVyLCB2YXIoLS1wbHlyLWNvbG9yLW1haW4sIHZhcigtLXBseXItY29sb3ItbWFpbiwgaHNsKDE5OGRlZywgMTAwJSwgNTAlKSkpKTtcbiAgY29sb3I6IHZhcigtLXBseXItYXVkaW8tY29udHJvbC1jb2xvci1ob3ZlciwgI2ZmZik7XG59XG5cbi5wbHlyLS1mdWxsLXVpLnBseXItLWF1ZGlvIGlucHV0W3R5cGU9cmFuZ2VdOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFjayB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBseXItYXVkaW8tcmFuZ2UtdHJhY2stYmFja2dyb3VuZCwgdmFyKC0tcGx5ci1hdWRpby1wcm9ncmVzcy1idWZmZXJlZC1iYWNrZ3JvdW5kLCByZ2JhKDE5MywgMjAwLCAyMDksIDAuNikpKTtcbn1cbi5wbHlyLS1mdWxsLXVpLnBseXItLWF1ZGlvIGlucHV0W3R5cGU9cmFuZ2VdOjotbW96LXJhbmdlLXRyYWNrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcGx5ci1hdWRpby1yYW5nZS10cmFjay1iYWNrZ3JvdW5kLCB2YXIoLS1wbHlyLWF1ZGlvLXByb2dyZXNzLWJ1ZmZlcmVkLWJhY2tncm91bmQsIHJnYmEoMTkzLCAyMDAsIDIwOSwgMC42KSkpO1xufVxuLnBseXItLWZ1bGwtdWkucGx5ci0tYXVkaW8gaW5wdXRbdHlwZT1yYW5nZV06Oi1tcy10cmFjayB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBseXItYXVkaW8tcmFuZ2UtdHJhY2stYmFja2dyb3VuZCwgdmFyKC0tcGx5ci1hdWRpby1wcm9ncmVzcy1idWZmZXJlZC1iYWNrZ3JvdW5kLCByZ2JhKDE5MywgMjAwLCAyMDksIDAuNikpKTtcbn1cbi5wbHlyLS1mdWxsLXVpLnBseXItLWF1ZGlvIGlucHV0W3R5cGU9cmFuZ2VdOmFjdGl2ZTo6LXdlYmtpdC1zbGlkZXItdGh1bWIge1xuICBib3gtc2hhZG93OiB2YXIoLS1wbHlyLXJhbmdlLXRodW1iLXNoYWRvdywgMCAxcHggMXB4IHJnYmEoMzUsIDQwLCA0NywgMC4xNSksIDAgMCAwIDFweCByZ2JhKDM1LCA0MCwgNDcsIDAuMikpLCAwIDAgMCB2YXIoLS1wbHlyLXJhbmdlLXRodW1iLWFjdGl2ZS1zaGFkb3ctd2lkdGgsIDNweCkgdmFyKC0tcGx5ci1hdWRpby1yYW5nZS10aHVtYi1hY3RpdmUtc2hhZG93LWNvbG9yLCByZ2JhKDM1LCA0MCwgNDcsIDAuMSkpO1xufVxuLnBseXItLWZ1bGwtdWkucGx5ci0tYXVkaW8gaW5wdXRbdHlwZT1yYW5nZV06YWN0aXZlOjotbW96LXJhbmdlLXRodW1iIHtcbiAgYm94LXNoYWRvdzogdmFyKC0tcGx5ci1yYW5nZS10aHVtYi1zaGFkb3csIDAgMXB4IDFweCByZ2JhKDM1LCA0MCwgNDcsIDAuMTUpLCAwIDAgMCAxcHggcmdiYSgzNSwgNDAsIDQ3LCAwLjIpKSwgMCAwIDAgdmFyKC0tcGx5ci1yYW5nZS10aHVtYi1hY3RpdmUtc2hhZG93LXdpZHRoLCAzcHgpIHZhcigtLXBseXItYXVkaW8tcmFuZ2UtdGh1bWItYWN0aXZlLXNoYWRvdy1jb2xvciwgcmdiYSgzNSwgNDAsIDQ3LCAwLjEpKTtcbn1cbi5wbHlyLS1mdWxsLXVpLnBseXItLWF1ZGlvIGlucHV0W3R5cGU9cmFuZ2VdOmFjdGl2ZTo6LW1zLXRodW1iIHtcbiAgYm94LXNoYWRvdzogdmFyKC0tcGx5ci1yYW5nZS10aHVtYi1zaGFkb3csIDAgMXB4IDFweCByZ2JhKDM1LCA0MCwgNDcsIDAuMTUpLCAwIDAgMCAxcHggcmdiYSgzNSwgNDAsIDQ3LCAwLjIpKSwgMCAwIDAgdmFyKC0tcGx5ci1yYW5nZS10aHVtYi1hY3RpdmUtc2hhZG93LXdpZHRoLCAzcHgpIHZhcigtLXBseXItYXVkaW8tcmFuZ2UtdGh1bWItYWN0aXZlLXNoYWRvdy1jb2xvciwgcmdiYSgzNSwgNDAsIDQ3LCAwLjEpKTtcbn1cblxuLnBseXItLWF1ZGlvIC5wbHlyX19wcm9ncmVzc19fYnVmZmVyIHtcbiAgY29sb3I6IHZhcigtLXBseXItYXVkaW8tcHJvZ3Jlc3MtYnVmZmVyZWQtYmFja2dyb3VuZCwgcmdiYSgxOTMsIDIwMCwgMjA5LCAwLjYpKTtcbn1cblxuLnBseXItLXZpZGVvIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tcGx5ci12aWRlby1iYWNrZ3JvdW5kLCB2YXIoLS1wbHlyLXZpZGVvLWJhY2tncm91bmQsIHJnYigwLCAwLCAwKSkpO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLnBseXItLXZpZGVvLnBseXItLW1lbnUtb3BlbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4ucGx5cl9fdmlkZW8td3JhcHBlciB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXBseXItdmlkZW8tYmFja2dyb3VuZCwgdmFyKC0tcGx5ci12aWRlby1iYWNrZ3JvdW5kLCByZ2IoMCwgMCwgMCkpKTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IGF1dG87XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5wbHlyX192aWRlby1lbWJlZCxcbi5wbHlyX192aWRlby13cmFwcGVyLS1maXhlZC1yYXRpbyB7XG4gIGFzcGVjdC1yYXRpbzogMTYvOTtcbn1cbkBzdXBwb3J0cyBub3QgKGFzcGVjdC1yYXRpbzogMTYvOSkge1xuICAucGx5cl9fdmlkZW8tZW1iZWQsXG4gIC5wbHlyX192aWRlby13cmFwcGVyLS1maXhlZC1yYXRpbyB7XG4gICAgaGVpZ2h0OiAwO1xuICAgIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG59XG5cbi5wbHlyX192aWRlby1lbWJlZCBpZnJhbWUsXG4ucGx5cl9fdmlkZW8td3JhcHBlci0tZml4ZWQtcmF0aW8gdmlkZW8ge1xuICBib3JkZXI6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgbGVmdDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ucGx5ci0tZnVsbC11aSAucGx5cl9fdmlkZW8tZW1iZWQgPiAucGx5cl9fdmlkZW8tZW1iZWRfX2NvbnRhaW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiAyNDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzguMjgxMjUlKTtcbn1cblxuLnBseXItLXZpZGVvIC5wbHlyX19jb250cm9scyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXBseXItdmlkZW8tY29udHJvbHMtYmFja2dyb3VuZCwgbGluZWFyLWdyYWRpZW50KHJnYmEoMCwgMCwgMCwgMCksIHJnYmEoMCwgMCwgMCwgMC43NSkpKTtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogaW5oZXJpdDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IGluaGVyaXQ7XG4gIGJvdHRvbTogMDtcbiAgY29sb3I6IHZhcigtLXBseXItdmlkZW8tY29udHJvbC1jb2xvciwgI2ZmZik7XG4gIGxlZnQ6IDA7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tcGx5ci1jb250cm9sLXNwYWNpbmcsIDEwcHgpIC8gMik7XG4gIHBhZGRpbmctdG9wOiBjYWxjKHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KSAqIDIpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgZWFzZS1pbi1vdXQsIHRyYW5zZm9ybSAwLjRzIGVhc2UtaW4tb3V0O1xuICB6LWluZGV4OiAzO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDQ4MHB4KSB7XG4gIC5wbHlyLS12aWRlbyAucGx5cl9fY29udHJvbHMge1xuICAgIHBhZGRpbmc6IHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KTtcbiAgICBwYWRkaW5nLXRvcDogY2FsYyh2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCkgKiAzLjUpO1xuICB9XG59XG5cbi5wbHlyLS12aWRlby5wbHlyLS1oaWRlLWNvbnRyb2xzIC5wbHlyX19jb250cm9scyB7XG4gIG9wYWNpdHk6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTAwJSk7XG59XG5cbi5wbHlyLS12aWRlbyAucGx5cl9fY29udHJvbC5wbHlyX190YWItZm9jdXMsIC5wbHlyLS12aWRlbyAucGx5cl9fY29udHJvbDpob3ZlciwgLnBseXItLXZpZGVvIC5wbHlyX19jb250cm9sW2FyaWEtZXhwYW5kZWQ9dHJ1ZV0ge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1wbHlyLXZpZGVvLWNvbnRyb2wtYmFja2dyb3VuZC1ob3ZlciwgdmFyKC0tcGx5ci1jb2xvci1tYWluLCB2YXIoLS1wbHlyLWNvbG9yLW1haW4sIGhzbCgxOThkZWcsIDEwMCUsIDUwJSkpKSk7XG4gIGNvbG9yOiB2YXIoLS1wbHlyLXZpZGVvLWNvbnRyb2wtY29sb3ItaG92ZXIsICNmZmYpO1xufVxuXG4ucGx5cl9fY29udHJvbC0tb3ZlcmxhaWQge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1wbHlyLXZpZGVvLWNvbnRyb2wtYmFja2dyb3VuZC1ob3ZlciwgdmFyKC0tcGx5ci1jb2xvci1tYWluLCB2YXIoLS1wbHlyLWNvbG9yLW1haW4sIGhzbCgxOThkZWcsIDEwMCUsIDUwJSkpKSk7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgY29sb3I6IHZhcigtLXBseXItdmlkZW8tY29udHJvbC1jb2xvciwgI2ZmZik7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGxlZnQ6IDUwJTtcbiAgb3BhY2l0eTogMC45O1xuICBwYWRkaW5nOiBjYWxjKHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KSAqIDEuNSk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB0cmFuc2l0aW9uOiAwLjNzO1xuICB6LWluZGV4OiAyO1xufVxuLnBseXJfX2NvbnRyb2wtLW92ZXJsYWlkIHN2ZyB7XG4gIGxlZnQ6IDJweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLnBseXJfX2NvbnRyb2wtLW92ZXJsYWlkOmhvdmVyLCAucGx5cl9fY29udHJvbC0tb3ZlcmxhaWQ6Zm9jdXMge1xuICBvcGFjaXR5OiAxO1xufVxuXG4ucGx5ci0tcGxheWluZyAucGx5cl9fY29udHJvbC0tb3ZlcmxhaWQge1xuICBvcGFjaXR5OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi5wbHlyLS1mdWxsLXVpLnBseXItLXZpZGVvIC5wbHlyX19jb250cm9sLS1vdmVybGFpZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucGx5ci0tZnVsbC11aS5wbHlyLS12aWRlbyBpbnB1dFt0eXBlPXJhbmdlXTo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2sge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wbHlyLXZpZGVvLXJhbmdlLXRyYWNrLWJhY2tncm91bmQsIHZhcigtLXBseXItdmlkZW8tcHJvZ3Jlc3MtYnVmZmVyZWQtYmFja2dyb3VuZCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjI1KSkpO1xufVxuLnBseXItLWZ1bGwtdWkucGx5ci0tdmlkZW8gaW5wdXRbdHlwZT1yYW5nZV06Oi1tb3otcmFuZ2UtdHJhY2sge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wbHlyLXZpZGVvLXJhbmdlLXRyYWNrLWJhY2tncm91bmQsIHZhcigtLXBseXItdmlkZW8tcHJvZ3Jlc3MtYnVmZmVyZWQtYmFja2dyb3VuZCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjI1KSkpO1xufVxuLnBseXItLWZ1bGwtdWkucGx5ci0tdmlkZW8gaW5wdXRbdHlwZT1yYW5nZV06Oi1tcy10cmFjayB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBseXItdmlkZW8tcmFuZ2UtdHJhY2stYmFja2dyb3VuZCwgdmFyKC0tcGx5ci12aWRlby1wcm9ncmVzcy1idWZmZXJlZC1iYWNrZ3JvdW5kLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjUpKSk7XG59XG4ucGx5ci0tZnVsbC11aS5wbHlyLS12aWRlbyBpbnB1dFt0eXBlPXJhbmdlXTphY3RpdmU6Oi13ZWJraXQtc2xpZGVyLXRodW1iIHtcbiAgYm94LXNoYWRvdzogdmFyKC0tcGx5ci1yYW5nZS10aHVtYi1zaGFkb3csIDAgMXB4IDFweCByZ2JhKDM1LCA0MCwgNDcsIDAuMTUpLCAwIDAgMCAxcHggcmdiYSgzNSwgNDAsIDQ3LCAwLjIpKSwgMCAwIDAgdmFyKC0tcGx5ci1yYW5nZS10aHVtYi1hY3RpdmUtc2hhZG93LXdpZHRoLCAzcHgpIHZhcigtLXBseXItYXVkaW8tcmFuZ2UtdGh1bWItYWN0aXZlLXNoYWRvdy1jb2xvciwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpKTtcbn1cbi5wbHlyLS1mdWxsLXVpLnBseXItLXZpZGVvIGlucHV0W3R5cGU9cmFuZ2VdOmFjdGl2ZTo6LW1vei1yYW5nZS10aHVtYiB7XG4gIGJveC1zaGFkb3c6IHZhcigtLXBseXItcmFuZ2UtdGh1bWItc2hhZG93LCAwIDFweCAxcHggcmdiYSgzNSwgNDAsIDQ3LCAwLjE1KSwgMCAwIDAgMXB4IHJnYmEoMzUsIDQwLCA0NywgMC4yKSksIDAgMCAwIHZhcigtLXBseXItcmFuZ2UtdGh1bWItYWN0aXZlLXNoYWRvdy13aWR0aCwgM3B4KSB2YXIoLS1wbHlyLWF1ZGlvLXJhbmdlLXRodW1iLWFjdGl2ZS1zaGFkb3ctY29sb3IsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KSk7XG59XG4ucGx5ci0tZnVsbC11aS5wbHlyLS12aWRlbyBpbnB1dFt0eXBlPXJhbmdlXTphY3RpdmU6Oi1tcy10aHVtYiB7XG4gIGJveC1zaGFkb3c6IHZhcigtLXBseXItcmFuZ2UtdGh1bWItc2hhZG93LCAwIDFweCAxcHggcmdiYSgzNSwgNDAsIDQ3LCAwLjE1KSwgMCAwIDAgMXB4IHJnYmEoMzUsIDQwLCA0NywgMC4yKSksIDAgMCAwIHZhcigtLXBseXItcmFuZ2UtdGh1bWItYWN0aXZlLXNoYWRvdy13aWR0aCwgM3B4KSB2YXIoLS1wbHlyLWF1ZGlvLXJhbmdlLXRodW1iLWFjdGl2ZS1zaGFkb3ctY29sb3IsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KSk7XG59XG5cbi5wbHlyLS12aWRlbyAucGx5cl9fcHJvZ3Jlc3NfX2J1ZmZlciB7XG4gIGNvbG9yOiB2YXIoLS1wbHlyLXZpZGVvLXByb2dyZXNzLWJ1ZmZlcmVkLWJhY2tncm91bmQsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yNSkpO1xufVxuXG4ucGx5cjpmdWxsc2NyZWVuIHtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgd2lkdGg6IDEwMCU7XG59XG4ucGx5cjpmdWxsc2NyZWVuIHZpZGVvIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuLnBseXI6ZnVsbHNjcmVlbiAucGx5cl9fY29udHJvbCAuaWNvbi0tZXhpdC1mdWxsc2NyZWVuIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4ucGx5cjpmdWxsc2NyZWVuIC5wbHlyX19jb250cm9sIC5pY29uLS1leGl0LWZ1bGxzY3JlZW4gKyBzdmcge1xuICBkaXNwbGF5OiBub25lO1xufVxuLnBseXI6ZnVsbHNjcmVlbi5wbHlyLS1oaWRlLWNvbnRyb2xzIHtcbiAgY3Vyc29yOiBub25lO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAucGx5cjpmdWxsc2NyZWVuIC5wbHlyX19jYXB0aW9ucyB7XG4gICAgZm9udC1zaXplOiB2YXIoLS1wbHlyLWZvbnQtc2l6ZS14bGFyZ2UsIDIxcHgpO1xuICB9XG59XG5cbi5wbHlyLS1mdWxsc2NyZWVuLWZhbGxiYWNrIHtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvdHRvbTogMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGxlZnQ6IDA7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTAwMDAwMDA7XG59XG4ucGx5ci0tZnVsbHNjcmVlbi1mYWxsYmFjayB2aWRlbyB7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5wbHlyLS1mdWxsc2NyZWVuLWZhbGxiYWNrIC5wbHlyX19jb250cm9sIC5pY29uLS1leGl0LWZ1bGxzY3JlZW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5wbHlyLS1mdWxsc2NyZWVuLWZhbGxiYWNrIC5wbHlyX19jb250cm9sIC5pY29uLS1leGl0LWZ1bGxzY3JlZW4gKyBzdmcge1xuICBkaXNwbGF5OiBub25lO1xufVxuLnBseXItLWZ1bGxzY3JlZW4tZmFsbGJhY2sucGx5ci0taGlkZS1jb250cm9scyB7XG4gIGN1cnNvcjogbm9uZTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLnBseXItLWZ1bGxzY3JlZW4tZmFsbGJhY2sgLnBseXJfX2NhcHRpb25zIHtcbiAgICBmb250LXNpemU6IHZhcigtLXBseXItZm9udC1zaXplLXhsYXJnZSwgMjFweCk7XG4gIH1cbn1cblxuLnBseXJfX2FkcyB7XG4gIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG4gIGJvdHRvbTogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBsZWZ0OiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHotaW5kZXg6IC0xO1xufVxuLnBseXJfX2FkcyA+IGRpdixcbi5wbHlyX19hZHMgPiBkaXYgaWZyYW1lIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xufVxuLnBseXJfX2Fkczo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kOiBoc2woMjE2ZGVnLCAxNSUsIDE2JSk7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgYm90dG9tOiB2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCk7XG4gIGNvbG9yOiAjZmZmO1xuICBjb250ZW50OiBhdHRyKGRhdGEtYmFkZ2UtdGV4dCk7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgcGFkZGluZzogMnB4IDZweDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IHZhcigtLXBseXItY29udHJvbC1zcGFjaW5nLCAxMHB4KTtcbiAgei1pbmRleDogMztcbn1cbi5wbHlyX19hZHM6ZW1wdHk6OmFmdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBseXJfX2N1ZXMge1xuICBiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IHZhcigtLXBseXItcmFuZ2UtdHJhY2staGVpZ2h0LCA1cHgpO1xuICBsZWZ0OiAwO1xuICBvcGFjaXR5OiAwLjg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgd2lkdGg6IDNweDtcbiAgei1pbmRleDogMztcbn1cblxuLnBseXJfX3ByZXZpZXctdGh1bWIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wbHlyLXRvb2x0aXAtYmFja2dyb3VuZCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpKTtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tcGx5ci10b29sdGlwLXJhZGl1cywgNXB4KTtcbiAgYm90dG9tOiAxMDAlO1xuICBib3gtc2hhZG93OiB2YXIoLS1wbHlyLXRvb2x0aXAtc2hhZG93LCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjE1KSk7XG4gIG1hcmdpbi1ib3R0b206IGNhbGMoY2FsYyh2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCkgLyAyKSAqIDIpO1xuICBvcGFjaXR5OiAwO1xuICBwYWRkaW5nOiAzcHg7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwcHgpIHNjYWxlKDAuOCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDUwJSAxMDAlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyAwLjFzIGVhc2UsIG9wYWNpdHkgMC4ycyAwLjFzIGVhc2U7XG4gIHotaW5kZXg6IDI7XG59XG4ucGx5cl9fcHJldmlldy10aHVtYi0taXMtc2hvd24ge1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKSBzY2FsZSgxKTtcbn1cbi5wbHlyX19wcmV2aWV3LXRodW1iOjpiZWZvcmUge1xuICBib3JkZXItbGVmdDogdmFyKC0tcGx5ci10b29sdGlwLWFycm93LXNpemUsIDRweCkgc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yaWdodDogdmFyKC0tcGx5ci10b29sdGlwLWFycm93LXNpemUsIDRweCkgc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci10b3A6IHZhcigtLXBseXItdG9vbHRpcC1hcnJvdy1zaXplLCA0cHgpIHNvbGlkIHZhcigtLXBseXItdG9vbHRpcC1iYWNrZ3JvdW5kLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSkpO1xuICBib3R0b206IGNhbGModmFyKC0tcGx5ci10b29sdGlwLWFycm93LXNpemUsIDRweCkgKiAtMSk7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGhlaWdodDogMDtcbiAgbGVmdDogY2FsYyg1MCUgKyB2YXIoLS1wcmV2aWV3LWFycm93LW9mZnNldCkpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgd2lkdGg6IDA7XG4gIHotaW5kZXg6IDI7XG59XG4ucGx5cl9fcHJldmlldy10aHVtYl9faW1hZ2UtY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZDogaHNsKDIxNmRlZywgMTUlLCA3OSUpO1xuICBib3JkZXItcmFkaXVzOiBjYWxjKHZhcigtLXBseXItdG9vbHRpcC1yYWRpdXMsIDVweCkgLSAxcHgpO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDA7XG59XG4ucGx5cl9fcHJldmlldy10aHVtYl9faW1hZ2UtY29udGFpbmVyIGltZywgLnBseXJfX3ByZXZpZXctdGh1bWJfX2ltYWdlLWNvbnRhaW5lcjo6YWZ0ZXIge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbn1cbi5wbHlyX19wcmV2aWV3LXRodW1iX19pbWFnZS1jb250YWluZXI6OmFmdGVyIHtcbiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuLnBseXJfX3ByZXZpZXctdGh1bWJfX2ltYWdlLWNvbnRhaW5lciBpbWcge1xuICBtYXgtaGVpZ2h0OiBub25lO1xuICBtYXgtd2lkdGg6IG5vbmU7XG59XG4ucGx5cl9fcHJldmlldy10aHVtYl9fdGltZS1jb250YWluZXIge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1wbHlyLXZpZGVvLWNvbnRyb2xzLWJhY2tncm91bmQsIGxpbmVhci1ncmFkaWVudChyZ2JhKDAsIDAsIDAsIDApLCByZ2JhKDAsIDAsIDAsIDAuNzUpKSk7XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IGNhbGModmFyKC0tcGx5ci10b29sdGlwLXJhZGl1cywgNXB4KSAtIDFweCk7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiBjYWxjKHZhcigtLXBseXItdG9vbHRpcC1yYWRpdXMsIDVweCkgLSAxcHgpO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG4gIHBhZGRpbmc6IDIwcHggNnB4IDZweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgei1pbmRleDogMztcbn1cbi5wbHlyX19wcmV2aWV3LXRodW1iX190aW1lLWNvbnRhaW5lciBzcGFuIHtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogdmFyKC0tcGx5ci1mb250LXNpemUtdGltZSwgdmFyKC0tcGx5ci1mb250LXNpemUtc21hbGwsIDEzcHgpKTtcbn1cblxuLnBseXJfX3ByZXZpZXctc2NydWJiaW5nIHtcbiAgYm90dG9tOiAwO1xuICBmaWx0ZXI6IGJsdXIoMXB4KTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsZWZ0OiAwO1xuICBtYXJnaW46IGF1dG87XG4gIG9wYWNpdHk6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogMTtcbn1cbi5wbHlyX19wcmV2aWV3LXNjcnViYmluZy0taXMtc2hvd24ge1xuICBvcGFjaXR5OiAxO1xufVxuLnBseXJfX3ByZXZpZXctc2NydWJiaW5nIGltZyB7XG4gIGhlaWdodDogMTAwJTtcbiAgbGVmdDogMDtcbiAgbWF4LWhlaWdodDogbm9uZTtcbiAgbWF4LXdpZHRoOiBub25lO1xuICBvYmplY3QtZml0OiBjb250YWluO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5wbHlyLS1uby10cmFuc2l0aW9uIHtcbiAgdHJhbnNpdGlvbjogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4ucGx5cl9fc3Itb25seSB7XG4gIGNsaXA6IHJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm9yZGVyOiAwICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMXB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxcHggIWltcG9ydGFudDtcbn1cblxuLnBseXIgW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5wbHlyX19wcm9ncmVzc19fY29udGFpbmVyLFxuLnBseXJfX3ZvbHVtZSBpbnB1dFt0eXBlPXJhbmdlXSB7XG4gIGZsZXg6IDAgMSBhdXRvO1xufVxuXG4ucGx5ci0tYXVkaW8gLnBseXJfX2NvbnRyb2xzIHtcbiAgcGFkZGluZzogMDtcbn1cblxuW2Rpcj1ydGxdIC5wbHlyX19tZW51X19jb250YWluZXIge1xuICBkaXJlY3Rpb246IHJ0bDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5bZGlyPXJ0bF0gLnBseXJfX21lbnVfX2NvbnRhaW5lciAucGx5cl9fY29udHJvbC0tZm9yd2FyZDo6YWZ0ZXIge1xuICBsZWZ0OiA1cHg7XG4gIHJpZ2h0OiBhdXRvO1xuICBib3JkZXItcmlnaHQtY29sb3I6IHJnYmEodmFyKC0tcGx5ci1tZW51LWNvbG9yLCBoc2woMjE2ZGVnLCAxNSUsIDM0JSkpLCAwLjgpO1xuICBib3JkZXItbGVmdC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5bZGlyPXJ0bF0gLnBseXJfX21lbnVfX2NvbnRhaW5lciAucGx5cl9fY29udHJvbC0tZm9yd2FyZC5wbHlyX190YWItZm9jdXM6OmFmdGVyLCBbZGlyPXJ0bF0gLnBseXJfX21lbnVfX2NvbnRhaW5lciAucGx5cl9fY29udHJvbC0tZm9yd2FyZDpob3Zlcjo6YWZ0ZXIge1xuICBib3JkZXItcmlnaHQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbn1cbltkaXI9cnRsXSAucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19tZW51X192YWx1ZSB7XG4gIHBhZGRpbmctbGVmdDogMXJlbTtcbiAgcGFkZGluZy1yaWdodDogY2FsYyh2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCkgKiAwLjcgKiAxLjUpO1xufVxuW2Rpcj1ydGxdIC5wbHlyX19tZW51X19jb250YWluZXIgLnBseXJfX2NvbnRyb2xbcm9sZT1tZW51aXRlbXJhZGlvXSAucGx5cl9fbWVudV9fdmFsdWUge1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHBhZGRpbmctbGVmdDogMDtcbn1cbltkaXI9cnRsXSAucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19jb250cm9sW3JvbGU9bWVudWl0ZW1yYWRpb106OmJlZm9yZSB7XG4gIG1hcmdpbi1sZWZ0OiB2YXIoLS1wbHlyLWNvbnRyb2wtc3BhY2luZywgMTBweCk7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cbltkaXI9cnRsXSAucGx5cl9fbWVudV9fY29udGFpbmVyIC5wbHlyX19jb250cm9sW3JvbGU9bWVudWl0ZW1yYWRpb106OmFmdGVyIHtcbiAgcmlnaHQ6IDE1cHg7XG4gIGxlZnQ6IGF1dG87XG59XG5cbi5saWdodC1zdHlsZSAucGx5cl9fdG9vbHRpcCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbn1cblxuLmRhcmstc3R5bGUgLnBseXJfX3Rvb2x0aXAge1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDAuNzVyZW07XG59XG4uZGFyay1zdHlsZSAucGx5ci0tYXVkaW8gLnBseXJfX2NvbnRyb2xzIHtcbiAgY29sb3I6ICNhM2E0Y2M7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYjJjNDA7XG59XG4uZGFyay1zdHlsZSAucGx5ci0tZnVsbC11aS5wbHlyLS1hdWRpbyBpbnB1dFt0eXBlPXJhbmdlXTo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2sge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG59XG4uZGFyay1zdHlsZSAucGx5ci0tZnVsbC11aS5wbHlyLS1hdWRpbyBpbnB1dFt0eXBlPXJhbmdlXTo6LW1vei1yYW5nZS10cmFjayB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbn1cbi5kYXJrLXN0eWxlIC5wbHlyLS1mdWxsLXVpLnBseXItLWF1ZGlvIGlucHV0W3R5cGU9cmFuZ2VdOjotbXMtdHJhY2sge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG59XG4uZGFyay1zdHlsZSAucGx5ci0tYXVkaW8gLnBseXJfX3Byb2dyZXNzX19idWZmZXIge1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1TDI1dlpHVmZiVzlrZFd4bGN5OXdiSGx5TDNOeVl5OXpZWE56TDJ4cFlpOWhibWx0WVhScGIyNHVjMk56Y3lJc0lpNHVMMjV2WkdWZmJXOWtkV3hsY3k5d2JIbHlMM055WXk5ellYTnpMMkpoYzJVdWMyTnpjeUlzSWk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl3YkhseUwzTnlZeTl6WVhOekwyeHBZaTl0YVhocGJuTXVjMk56Y3lJc0lpNHVMMjV2WkdWZmJXOWtkV3hsY3k5d2JIbHlMM055WXk5ellYTnpMM05sZEhScGJtZHpMM1I1Y0dVdWMyTnpjeUlzSWk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl3YkhseUwzTnlZeTl6WVhOekwyTnZiWEJ2Ym1WdWRITXZZbUZrWjJWekxuTmpjM01pTENJdUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OXpaWFIwYVc1bmN5OWlZV1JuWlhNdWMyTnpjeUlzSWk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl3YkhseUwzTnlZeTl6WVhOekwyTnZiWEJ2Ym1WdWRITXZZMkZ3ZEdsdmJuTXVjMk56Y3lJc0lpNHVMMjV2WkdWZmJXOWtkV3hsY3k5d2JIbHlMM055WXk5ellYTnpMM05sZEhScGJtZHpMMk52Ym5SeWIyeHpMbk5qYzNNaUxDSXVMaTl1YjJSbFgyMXZaSFZzWlhNdmNHeDVjaTl6Y21NdmMyRnpjeTl6WlhSMGFXNW5jeTlqWVhCMGFXOXVjeTV6WTNOeklpd2lMaTR2Ym05a1pWOXRiMlIxYkdWekwzQnNlWEl2YzNKakwzTmhjM012WTI5dGNHOXVaVzUwY3k5amIyNTBjbTlzTG5OamMzTWlMQ0l1TGk5dWIyUmxYMjF2WkhWc1pYTXZjR3g1Y2k5emNtTXZjMkZ6Y3k5amIyMXdiMjVsYm5SekwyTnZiblJ5YjJ4ekxuTmpjM01pTENJdUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OWpiMjF3YjI1bGJuUnpMMjFsYm5WekxuTmpjM01pTENJdUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OXpaWFIwYVc1bmN5OXRaVzUxY3k1elkzTnpJaXdpTGk0dmJtOWtaVjl0YjJSMWJHVnpMM0JzZVhJdmMzSmpMM05oYzNNdlkyOXRjRzl1Wlc1MGN5OXpiR2xrWlhKekxuTmpjM01pTENJdUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OXpaWFIwYVc1bmN5OXpiR2xrWlhKekxuTmpjM01pTENJdUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OWpiMjF3YjI1bGJuUnpMM0J2YzNSbGNpNXpZM056SWl3aUxpNHZibTlrWlY5dGIyUjFiR1Z6TDNCc2VYSXZjM0pqTDNOaGMzTXZZMjl0Y0c5dVpXNTBjeTkwYVcxbGN5NXpZM056SWl3aUxpNHZibTlrWlY5dGIyUjFiR1Z6TDNCc2VYSXZjM0pqTDNOaGMzTXZZMjl0Y0c5dVpXNTBjeTkwYjI5c2RHbHdjeTV6WTNOeklpd2lMaTR2Ym05a1pWOXRiMlIxYkdWekwzQnNlWEl2YzNKakwzTmhjM012YzJWMGRHbHVaM012ZEc5dmJIUnBjSE11YzJOemN5SXNJaTR1TDI1dlpHVmZiVzlrZFd4bGN5OXdiSGx5TDNOeVl5OXpZWE56TDJOdmJYQnZibVZ1ZEhNdmNISnZaM0psYzNNdWMyTnpjeUlzSWk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl3YkhseUwzTnlZeTl6WVhOekwzTmxkSFJwYm1kekwzQnliMmR5WlhOekxuTmpjM01pTENJdUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OWpiMjF3YjI1bGJuUnpMM1p2YkhWdFpTNXpZM056SWl3aUxpNHZibTlrWlY5dGIyUjFiR1Z6TDNCc2VYSXZjM0pqTDNOaGMzTXZkSGx3WlhNdllYVmthVzh1YzJOemN5SXNJaTR1TDI1dlpHVmZiVzlrZFd4bGN5OXdiSGx5TDNOeVl5OXpZWE56TDNSNWNHVnpMM1pwWkdWdkxuTmpjM01pTENJdUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OXpkR0YwWlhNdlpuVnNiSE5qY21WbGJpNXpZM056SWl3aUxpNHZibTlrWlY5dGIyUjFiR1Z6TDNCc2VYSXZjM0pqTDNOaGMzTXZjR3gxWjJsdWN5OWhaSE11YzJOemN5SXNJaTR1TDI1dlpHVmZiVzlrZFd4bGN5OXdiSGx5TDNOeVl5OXpZWE56TDNObGRIUnBibWR6TDJOdmJHOXljeTV6WTNOeklpd2lMaTR2Ym05a1pWOXRiMlIxYkdWekwzQnNlWEl2YzNKakwzTmhjM012Y0d4MVoybHVjeTl3Y21WMmFXVjNMWFJvZFcxaWJtRnBiSE12YVc1a1pYZ3VjMk56Y3lJc0lpNHVMMjV2WkdWZmJXOWtkV3hsY3k5d2JIbHlMM055WXk5ellYTnpMM0JzZFdkcGJuTXZjSEpsZG1sbGR5MTBhSFZ0WW01aGFXeHpMM05sZEhScGJtZHpMbk5qYzNNaUxDSXVMaTl1YjJSbFgyMXZaSFZzWlhNdmNHeDVjaTl6Y21NdmMyRnpjeTkxZEdsc2N5OWhibWx0WVhScGIyNHVjMk56Y3lJc0lpNHVMMjV2WkdWZmJXOWtkV3hsY3k5d2JIbHlMM055WXk5ellYTnpMM1YwYVd4ekwyaHBaR1JsYmk1elkzTnpJaXdpZG1WdVpHOXlMMnhwWW5NdmNHeDVjaTl3YkhseUxuTmpjM01pTENKMlpXNWtiM0l2YzJOemN5OWZZM1Z6ZEc5dExYWmhjbWxoWW14bGN5OWZjM1Z3Y0c5eWRDNXpZM056SWl3aWRtVnVaRzl5TDNOamMzTXZYMkp2YjNSemRISmhjQzFsZUhSbGJtUmxaQzlmZG1GeWFXRmliR1Z6TG5OamMzTWlMQ0oyWlc1a2IzSXZjMk56Y3k5ZlltOXZkSE4wY21Gd0xXVjRkR1Z1WkdWa0wxOTJZWEpwWVdKc1pYTXRaR0Z5YXk1elkzTnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSTdRVUZKUVR0RlFVTkZPMGxCUTBVN096dEJRVWxLTzBWQlEwVTdTVUZEUlR0SlFVTkJPenRGUVVkR08wbEJRMFU3U1VGRFFUczdPMEZCU1VvN1JVRkRSVHRKUVVORk96dEZRVWRHTzBsQlEwVTdPenRCUTNaQ1NqdEZRMVZKTzBWQlEwRTdSVVJTUmp0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQkxHRkZVbWxDTzBWR1UycENPMFZCUTBFc1lVVkdlVUk3UlVaSGVrSXNZVVZFYVVJN1JVWkZha0k3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenRCUVVkQk8wRkJRVUU3UVVGQlFUdEZRVWRGTzBWQlEwRTdSVUZEUVRzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUczdRVUZKUmp0RlFVTkZPenM3UVVGUFJqdEZRVU5GT3p0QlFVVkJPMEZCUVVFN1FVRkJRVHRGUVVkRk96czdRVUZSUmp0QlFVRkJPMEZCUVVFN1FVRkJRVHRGUVVsRk96czdRVWMzUkU0N1JVRkRSU3haUTBSelFqdEZSRVYwUWp0RlFVTkJMRTlEUm5OQ08wVkVSM1JDTEZkRVIzRkNPMFZEUm5KQ08wVkJRMEU3T3p0QlJVeEdPMFZCUTBVN096dEJRVWRHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFc1YwaFFjVUk3UlVkUmNrSTdSVUZEUVN4VFExWnhRanRGUkZkeVFqdEZRVU5CTzBWQlEwRTdSVUZEUVRzN1FVRkZRVHRGUVVORk96dEJRVWRHTzBWQmFFSkdPMGxCYVVKSkxGZElja0pyUWp0SlIzTkNiRUk3T3p0QlFVZEdPMFZCY2tKR08wbEJjMEpKTEZkSWVFSnRRanM3T3p0QlJ6UkNka0k3UlVGRFJUczdPMEZCU1VZN1JVRkRSVHM3TzBGQlIwWTdSVUZEUlN4WlJYcERlVUk3UlVZd1EzcENPMFZCUTBFN1JVRkRRU3hQUlRORGVVSTdSVVkwUTNwQ08wVkJRMEU3UlVGRFFUczdRVUZIUVR0RlFVTkZPenM3UVVkdVJFbzdSVUZEUlR0RlFVTkJPMFZCUTBFc1pVWkRiMEk3UlVWQmNFSTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRU3hUUms1eFFqdEZSVTl5UWp0RlFVTkJPenRCUVVWQk8wVkJRMFU3UlVGRFFUdEZRVU5CTEZGR1puRkNPMFZGWjBKeVFqdEZRVU5CTEU5R2FrSnhRanM3UVVWeFFuWkNPMFZCUTBVN08wRkJTVVk3UlZCMlFrRTdSVUZEUVRzN08wRlBORUpHTzBWQlEwVTdPMEZCUlVFN1JVRkZSVHM3TzBGQlMwbzdRVUZCUVR0QlFVRkJPMEZCUVVFN1JVRkpSVHM3TzBGRE4wTkdPMFZCUTBVN096dEJRVWxHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN08wRkJSVUU3UlVGRFJUdEZRVU5CT3p0QlFVbEdPMFZCUTBVN08wRkJSVUU3UlVGRFJUdEZRVU5CT3p0QlFVZEdPMFZCUTBVN08wRkJSMFk3UlVGRFJUczdRVUZIUmp0RlFVZEZPenRCUVV0S08wVkJRMFU3T3p0QlFVdEtPMEZCUVVFN1FVRkJRVHRCUVVGQk8wVkJTVVU3T3p0QlFVZEdPMEZCUVVFN1FVRkJRVHRCUVVGQk8wVkJTVVU3T3p0QlF6TkVSanRGUVVORk8wVkJRMEU3TzBGQlIwRTdSVUZEUlRzN1FVRkpRVHRGUVVORk96dEJRVWxHTzBWQlEwVTdPMEZCUzBvN1JVRkRSVHRGUVVOQkxGbERka0p0UWp0RlJIZENia0k3UlVGRFFUdEZRVU5CTEZsRGRrSmxPMFZFZDBKbUxFOURla0pqTzBWRU1FSmtMRmRTTTBKclFqdEZVVFJDYkVJN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3p0QlFVVkJPMFZCUTBVN1JVRkRRVHM3UVVGSlJqdEZRVU5GTzBWQlEwRXNhMEpETlVOcFFqdEZSRFpEYWtJN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3p0QlFVZEdPMFZCUTBVc1UwcHdSR2xDT3p0QlNYVkVia0k3UVVGQlFUdEZRVVZGT3p0QlFVVkJPMEZCUVVFN1JVRkRSVHM3UVVGTFNqdEZRVU5GTzBWQlEwRXNUME51UlZrN1JVUnZSVm83UlVGRFFTeFhVbXBGWjBJN1JWRnJSV2hDTzBWQlEwRTdSVUZEUVRzN1FVRkZRVHRGUVVORk8wVkJRMEU3UlVGRFFUczdRVUZIUmp0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3TzBGQlIwWTdSVUZEUlRzN1FVRkZRVHRGUVVORkxHMUNRM2hHYlVJN1JVUjVSbTVDT3p0QlFVZEdPMFZCUlVVN08wRkJTVW83UlVGRFJTeGhVbXBIYlVJN1JWRnJSMjVDTEZGS2VFZGxPMFZKZVVkbU8wVkJRMEU3UlVGRFFUdEZRVU5CT3p0QlFVVkJPMFZCUTBVc2IwSkRNMGR0UWp0RlJEUkhia0k3TzBGQlIwWTdSVUZEUlN4WlF5OUhiMEk3UlVSblNIQkNPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN1FVRkhSanRGUVVWRk96dEJRVXRPTzBWQlEwVXNZMHA0U1dsQ096dEJTVEJKYWtJN1JVRkZSVHM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRU3hqU25SS1pUdEZTWFZLWmp0RlFVTkJPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96dEJRVWxCTzBWQlEwVXNXVXB5U3l0Q096dEJTWGRMYWtNN1JVRkRSVHRGUVVOQk96dEJRVWxLTzBWQlJVVTdPMEZCUzBvN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN08wRkZhazFPTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkhRU3hQUTFNeVFqdEZSRkl6UWp0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdRVUZGUVR0RldFZEJPMFZCUTBFN1JVRkRRVHRGUVVOQkxGRlpWSGRDTzBWYVZYaENPMFZCUTBFN1JWZE1SVHM3UVVGSFJqdEZXRTFCTEZsWk1VSTBRanRGV2pKQ05VSTdSVUZEUVR0RlFVTkJMRmxaTlVKM1FqdEZXalpDZUVJc1VWa3ZRbmRDTzBWYVowTjRRanRGUVVOQk8wVkJRMEVzVDFsc1EzZENPMFZFZDBKMFFqdEZRVU5CT3p0QlFVbEdPMFZZV0VFN1JVRkRRVHRGUVVOQk8wVkJRMEVzVVZsVWQwSTdSVnBWZUVJN1JVRkRRVHM3UVZkVlFUdEZXRTVCTEZsWk1VSTBRanRGV2pKQ05VSTdSVUZEUVR0RlFVTkJMRmxaTlVKM1FqdEZXalpDZUVJc1VWa3ZRbmRDTzBWYVowTjRRanRGUVVOQk8wVkJRMEVzVDFsc1EzZENPenRCUkhGRGVFSTdSVUZEUlR0RlFVTkJPMFZCUTBFc1VVTTFRbk5DT3p0QlJHZERlRUk3UlZneFFrRTdSVUZEUVR0RlFVTkJPMFZCUTBFc1VWbFVkMEk3UlZwVmVFSTdSVUZEUVR0RlYzZENSVHM3UVVGSFJqdEZXR2hEUVR0RlFVTkJPMFZCUTBFN1JVRkRRU3hSV1ZSM1FqdEZXbFY0UWp0RlFVTkJPenRCVnl0Q1FUdEZXSEJEUVR0RlFVTkJPMFZCUTBFN1JVRkRRU3hSV1ZSM1FqdEZXbFY0UWp0RlFVTkJPMFZYYTBORk96dEJRVWRHTzBWWWFrTkJMRmxaTVVJMFFqdEZXakpDTlVJN1JVRkRRVHRGUVVOQkxGbFpOVUozUWp0RldqWkNlRUlzVVZrdlFuZENPMFZhWjBONFFqdEZRVU5CTzBWQlEwRXNUMWxzUTNkQ08wVkVaMFYwUWpzN1FVRkhSanRGUVVORk96dEJRVWxHTzBWQlEwVTdPMEZCUjBZN1JVRkRSVHM3UVVGSlFUdEZXQzlGUmp0RlFVTkJPenRCVjJ0R1JUdEZXRzVHUmp0RlFVTkJPenRCVjNOR1JUdEZXSFpHUmp0RlFVTkJPenM3UVdGS1JqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN08wRkJSMFk3UlVGRFJUczdPMEZCU1VZN1JVRkRSVHM3TzBGRGNrSkdPMFZCUTBVc1YySkpiMEk3T3p0QllVVndRanRGUVVORk8wVkJRMEVzWTFSU2JVSTdPMEZUVjNKQ08wVkJVRVk3U1VGUlNUczdPenRCUTJwQ1NqdEJRVXRCTzBWQlEwVXNXVU5HZDBJN1JVUkhlRUlzWlVORmIwSTdSVVJFY0VJN1JVRkRRU3haUTBOdlFqdEZSRUZ3UWl4UFEweHRRanRGUkUxdVFpeFhaRXh4UWp0RlkwMXlRanRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdRVUZIUVR0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN096dEJRVXRLTzBGQlFVRTdRVUZCUVR0RlFVZEZPMFZCUTBFN096dEJRVWRHTzBWQlEwVTdPenRCUVVsR08wRkJRVUU3UlVGRlJUdEZRVU5CTzBWQlEwRTdPMEZCUlVFN1FVRkJRVHRGUVVORk96czdRVUZMU2p0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVOQk96dEJRVVZCTzBWQlEwVTdSVUZEUVR0RlFVTkJPenM3UVVGUFJqdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wVkJSMFU3T3p0QlJTOUZTanRGUVVORk8wVkJRMEVzWTB4S2QwSTdSVXRMZUVJN08wRkJSVUU3UlVGRlJUdEZRVU5CTzBWQlEwRTdPMEZCUjBZN1JVRkRSVHRGUVVOQk96dEJRVWxHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN096dEJRVWxLTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRU3hSVEhKQ2QwSTdSVXR6UW5oQ08wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPMEZCUlVFN1JVRkRSVHM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVN4WFRHNURjMEk3UlV0dlEzUkNPenRCUVVsR08wVkJRMFU3UlVGRFFUdEZRVU5CTEZkTU0wTnpRanRGU3pSRGRFSTdPMEZCU1VZN1JVRkRSVHRGUVVOQk96czdRVUZMU2p0RlFVTkZPMFZCUTBFN1JVRlZRVHRGUVVOQk8wVkJRMEU3T3p0QlFVZEdPMFZCUTBVc2EwSkROMFYzUXpzN08wRkVaMFl4UXp0RlFVTkZMR3RDUTJoR2QwTTdPenRCUkc5R01VTTdSVUZEUlN4clFrTXhSbWRETzBWRU1rWm9RenRGUVVOQkxGRk1jRVozUWp0RlMzRkdlRUk3UlVGRFFUdEZRVU5CTzBWQlEwRXNUME12UmpKQ08wVkVaMGN6UWpzN08wRkZkRWRHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96dEJRVVZCTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN096dEJRVXRLTzBWQlEwVTdSVUZEUVRzN08wRkRiRUpHTzBWQlEwVTdPenRCUVVsR08wVkJRMFVzV1daWkswSTdSV1ZZTDBJN1JVRkRRU3hQWmxkNVFqdEZaVlo2UWl4VFpsUnhRanM3TzBGbFkzSkNPMFZCUjBVc1dXWkphME03UldWSWJFTXNUMlpGTmtJN096dEJaVWt2UWp0RlFVTkZMR3RDVWtOblF6czdRVkZGYkVNN1JVRkRSU3hyUWxKSVowTTdPMEZSVFd4RE8wVkJRMFVzYTBKU1VHZERPenRCVVZsb1F6dEZjRUpCUmpzN1FXOUNTVVU3UlhCQ1NrWTdPMEZ2UWxGRk8wVndRbEpHT3pzN1FXOUNaVVk3UlVGRFJTeFBSamREZDBNN096dEJSMUF4UXp0RlFVTkZPMFZCUTBFN08wRkJSVUU3UlVGRFJUczdPMEZCU1VvN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPenRCUVUxR08wRkJRVUU3UlVGUlJUczdRVUZPUVR0RlFVWkdPMEZCUVVFN1NVRkhTVHRKUVVOQk8wbEJRMEU3T3pzN1FVRk5TanRCUVVGQk8wVkJSVVU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenM3UVVGSlJqdEZRVWxGTzBWQlEwRTdSVUZEUVRzN08wRkJTVVk3UlVGRFJTeFphRUpvUkN0Q08wVm5RbWxFTDBJN1JVRkRRVHRGUVVOQk8wVkJRMEVzVDJoQ2FFUjVRanRGWjBKcFJIcENPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3p0QlFVVkJPMFZCWkVZN1NVRmxTU3hUYUVKMFJXMUNPMGxuUW5WRmJrSTdPenM3UVVGTFNqdEZRVU5GTzBWQlEwRTdSVUZEUVRzN08wRkJUVUU3UlVGSFJTeFphRUl4Uld0RE8wVm5RakpGYkVNc1QyaENOVVUyUWpzN08wRm5RbWxHYWtNN1JVRkRSU3haYUVKcVJtOURPMFZuUW10R2NFTTdSVUZEUVR0RlFVTkJMRTlvUW5SR2VVSTdSV2RDZFVaNlFqdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3TzBGQlIwRTdSVUZEUlR0RlFVTkJPenRCUVVkR08wVkJSVVU3T3p0QlFVbEtPMFZCUTBVN1JVRkRRVHM3TzBGQlIwWTdSVUZEUlRzN08wRkJTMEU3UlVGRFJTeHJRbFJ1U0dkRE96dEJVM05JYkVNN1JVRkRSU3hyUWxSMlNHZERPenRCVXpCSWJFTTdSVUZEUlN4clFsUXpTR2RET3p0QlUyZEphRU03UlhKQ05VZEdPenRCY1VKblNFVTdSWEpDYUVoR096dEJjVUp2U0VVN1JYSkNjRWhHT3pzN1FYRkNNa2hHTzBWQlEwVXNUMGd4U25kRE96czdRVWxVTVVNN1JYUkNOa05GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN08wRkJSVUU3UlVGRFJUczdRVUZKUmp0RlFVTkZPenRCUVVWQk8wVkJRMFU3TzBGQlMwbzdSVUZEUlRzN1FVRkpSanRGUVVORk8wbEJRMFVzVjBOd1JXdENPenM3TzBGeFFrTjRRanRGZEVKM1EwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGYzBKNlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3TzBGMFFuRkRRVHRGUVVORk96dEJRVWxHTzBWQlEwVTdPMEZCUlVFN1JVRkRSVHM3UVVGTFNqdEZRVU5GT3p0QlFVbEdPMFZCUTBVN1NVRkRSU3hYUTNCRmEwSTdPenM3UVhOQ1NuaENPMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenRCUVVkQk8wRkJRVUU3UlVGRlJUdEZRVU5CTzBWQlEwRTdPMEZCU1VZN1JVRkRSU3haUTJwQ2EwSTdSVVJyUW14Q08wVkJRMEVzVVd4Q2RFSnRRanRGYTBKMVFtNUNPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTEU5c1FqZENiVUk3Uld0Q09FSnVRanM3UVVGSFJqdEZRVU5GT3pzN1FVRkxTanRGUVVORk8wVkJRMEU3UlVGRFFTeFJXRGxDZDBJN1JWY3JRbmhDTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96czdRVVZvUkVZN1JVRkRSU3hyUWxSSWQwSTdSVk5KZUVJc1pWUkRiMEk3UlZOQmNFSTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN1FVRkZRVHRGUVVORk8wVkJRMEU3TzBGQlNVWTdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenRCUVVkR08wVkJRMFVzV1VRelFtdENPMFZETkVKc1FqdEZRVU5CTzBWQlEwRTdSVUZEUVRzN1FVRkZRVHRGUVVWRk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPMEZCUjBZN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdRVUZIUmp0RlFVVkZPMFZCUTBFN08wRkJTMG83UlVGRFJTeFpReTlFY1VNN1JVUm5SWEpETzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRU3hUUTJwRmEwTTdSVVJyUld4RE8wVkJRMEU3UlVGRFFUczdRVUZGUVR0RlFVTkZMRTlEZEVWdlFqdEZSSFZGY0VJc1YzaENOMFZuUWpzN08wRjNRbXRHZEVJN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3p0QlFVVkJPMFZCUTBVN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96czdRVVZ1U0VvN1JVRkRSVHM3TzBGRFFVWTdSVUZEUlR0RlFVTkJPMFZCU1VVN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdPMEZCVlVvN1JVRkRSVHM3TzBGRFowSkdPMEZCUVVFN1JVRkZSVHM3TzBGQlJVWTdSVUZEUlRzN08wRkRaRWs3UlVSdFFrWTdSVUZEUVRzN1FVRkhSVHRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CT3p0QlFVZEdPMFZCUlVVN08wRkJTVW83UlVGRFJUdEZRVU5CT3p0QlFVbEJPMFZCUTBVN1JVRkRRVHM3UVVGRlJqdEZRVU5GTEdGNFFqTkZaVHRGZDBJMFJXWTdPMEZCUjBZN1JVRkRSVHRGUVVOQk96czdRVUZSU2p0RlFVTkZMR0ZGYlVsWE8wVkdiRWxZTEZkRmQwaFRPenM3UVVacVNGZzdSVUZEUlN4aFJUQklWenRGUm5wSVdDeFhSU3RIVXpzN1FVWTFSMWc3UlVGRFJTeFBSM2hDVHp0RlNIbENVQ3hyUWtjMlJFazdPMEZJZWtSS08wVkJRMFVzYTBKSE9VWkhPenRCU0dsSFREdEZRVU5GTEd0Q1IyeEhSenM3UVVoeFIwdzdSVUZEUlN4clFrZDBSMGM3TzBGSU1FZFFPMFZCUTBVc1QwY3hSMHNpTENKbWFXeGxJam9pZG1WdVpHOXlMMnhwWW5NdmNHeDVjaTl3YkhseUxtTnpjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWk4dklDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNHZMeUJCYm1sdFlYUnBiMjV6WEc0dkx5QXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVYRzVBYTJWNVpuSmhiV1Z6SUhCc2VYSXRjSEp2WjNKbGMzTWdlMXh1SUNCMGJ5QjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dKSEJzZVhJdGNISnZaM0psYzNNdGJHOWhaR2x1WnkxemFYcGxJREE3WEc0Z0lIMWNibjFjYmx4dVFHdGxlV1p5WVcxbGN5QndiSGx5TFhCdmNIVndJSHRjYmlBZ01DVWdlMXh1SUNBZ0lHOXdZV05wZEhrNklEQXVOVHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTVRCd2VDazdYRzRnSUgxY2JseHVJQ0IwYnlCN1hHNGdJQ0FnYjNCaFkybDBlVG9nTVR0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZrb01DazdYRzRnSUgxY2JuMWNibHh1UUd0bGVXWnlZVzFsY3lCd2JIbHlMV1poWkdVdGFXNGdlMXh1SUNCbWNtOXRJSHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXdPMXh1SUNCOVhHNWNiaUFnZEc4Z2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJSDFjYm4xY2JpSXNJaTh2SUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0dkx5QkNZWE5sSUhOMGVXeHBibWRjYmk4dklDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNWNiaTh2SUVKaGMyVmNiaTV3YkhseUlIdGNiaUFnUUdsdVkyeDFaR1VnY0d4NWNpMW1iMjUwTFhOdGIyOTBhR2x1Wnlna2NHeDVjaTFtYjI1MExYTnRiMjkwYUdsdVp5azdYRzVjYmlBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnWkdseVpXTjBhVzl1T2lCc2RISTdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQWtjR3g1Y2kxbWIyNTBMV1poYldsc2VUdGNiaUFnWm05dWRDMTJZWEpwWVc1MExXNTFiV1Z5YVdNNklIUmhZblZzWVhJdGJuVnRjenNnTHk4Z1JtOXlZMlVnYlc5dWIzTmhZMlV0WlhOeGRXVWdiblZ0WW1WeUlIZHBaSFJvYzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nSkhCc2VYSXRabTl1ZEMxM1pXbG5hSFF0Y21WbmRXeGhjanRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJQ1J3YkhseUxXeHBibVV0YUdWcFoyaDBPMXh1SUNCdFlYZ3RkMmxrZEdnNklERXdNQ1U3WEc0Z0lHMXBiaTEzYVdSMGFEb2dNakF3Y0hnN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ2RHVjRkQzF6YUdGa2IzYzZJRzV2Ym1VN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdKdmVDMXphR0ZrYjNjZ01DNHpjeUJsWVhObE8xeHVJQ0I2TFdsdVpHVjRPaUF3T3lBdkx5QkdiM0pqWlNCaGJua2dZbTl5WkdWeUlISmhaR2wxYzF4dVhHNGdJQzh2SUUxbFpHbGhJR1ZzWlcxbGJuUnpYRzRnSUhacFpHVnZMRnh1SUNCaGRXUnBieXhjYmlBZ2FXWnlZVzFsSUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUgxY2JseHVJQ0JpZFhSMGIyNGdlMXh1SUNBZ0lHWnZiblE2SUdsdWFHVnlhWFE3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SUdsdWFHVnlhWFE3WEc0Z0lDQWdkMmxrZEdnNklHRjFkRzg3WEc0Z0lIMWNibHh1SUNBdkx5QkpaMjV2Y21VZ1ptOWpkWE5jYmlBZ0pqcG1iMk4xY3lCN1hHNGdJQ0FnYjNWMGJHbHVaVG9nTUR0Y2JpQWdmVnh1ZlZ4dVhHNHZMeUJpYjNKa1pYSXRZbTk0SUdWMlpYSjVkR2hwYm1kY2JpOHZJR2gwZEhBNkx5OXdZWFZzYVhKcGMyZ3VZMjl0THpJd01USXZZbTk0TFhOcGVtbHVaeTFpYjNKa1pYSXRZbTk0TFdaMGR5OWNia0JwWmlBa2NHeDVjaTFpYjNKa1pYSXRZbTk0SUh0Y2JpQWdMbkJzZVhJdExXWjFiR3d0ZFdrZ2UxeHVJQ0FnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzVjYmlBZ0lDQXFMRnh1SUNBZ0lDbzZPbUZtZEdWeUxGeHVJQ0FnSUNvNk9tSmxabTl5WlNCN1hHNGdJQ0FnSUNCaWIzZ3RjMmw2YVc1bk9pQnBibWhsY21sME8xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dVhHNHZMeUJHYVhnZ016QXdiWE1nWkdWc1lYbGNia0JwWmlBa2NHeDVjaTEwYjNWamFDMWhZM1JwYjI0Z2UxeHVJQ0F1Y0d4NWNpMHRablZzYkMxMWFTQjdYRzRnSUNBZ1lTeGNiaUFnSUNCaWRYUjBiMjRzWEc0Z0lDQWdhVzV3ZFhRc1hHNGdJQ0FnYkdGaVpXd2dlMXh1SUNBZ0lDQWdkRzkxWTJndFlXTjBhVzl1T2lCdFlXNXBjSFZzWVhScGIyNDdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNGlMQ0l2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnVFdsNGFXNXpYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVYRzR2THlCT2FXTmxjaUJtYjJOMWN5QnpkSGxzWlhOY2JpOHZJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dVFHMXBlR2x1SUhCc2VYSXRkR0ZpTFdadlkzVnpLQ1JqYjJ4dmNqb2dKSEJzZVhJdGRHRmlMV1p2WTNWekxXTnZiRzl5S1NCN1hHNGdJRzkxZEd4cGJtVTZJQ1JqYjJ4dmNpQmtiM1IwWldRZ00zQjRPMXh1SUNCdmRYUnNhVzVsTFc5bVpuTmxkRG9nTW5CNE8xeHVmVnh1WEc0dkx5QkdiMjUwSUhOdGIyOTBhR2x1WjF4dUx5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc1QWJXbDRhVzRnY0d4NWNpMW1iMjUwTFhOdGIyOTBhR2x1Wnlna2JXOWtaVG9nZEhKMVpTa2dlMXh1SUNCQWFXWWdKRzF2WkdVZ2UxeHVJQ0FnSUMxdGIzb3RiM040TFdadmJuUXRjMjF2YjNSb2FXNW5PaUJuY21GNWMyTmhiR1U3WEc0Z0lDQWdMWGRsWW10cGRDMW1iMjUwTFhOdGIyOTBhR2x1WnpvZ1lXNTBhV0ZzYVdGelpXUTdYRzRnSUgxY2JuMWNibHh1THk4Z1BHbHVjSFYwSUhSNWNHVTlYQ0p5WVc1blpWd2lQaUJ6ZEhsc2FXNW5YRzR2THlBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNia0J0YVhocGJpQndiSGx5TFhKaGJtZGxMWFJ5WVdOcktDa2dlMXh1SUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ1ltOXlaR1Z5T2lBd08xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQmpZV3hqS0NON0pIQnNlWEl0Y21GdVoyVXRkSEpoWTJzdGFHVnBaMmgwZlNBdklESXBPMXh1SUNCb1pXbG5hSFE2SUNSd2JIbHlMWEpoYm1kbExYUnlZV05yTFdobGFXZG9kRHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZbTk0TFhOb1lXUnZkeUF3TGpOeklHVmhjMlU3WEc0Z0lIVnpaWEl0YzJWc1pXTjBPaUJ1YjI1bE8xeHVmVnh1WEc1QWJXbDRhVzRnY0d4NWNpMXlZVzVuWlMxMGFIVnRZaWdwSUh0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nSkhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0WW1GamEyZHliM1Z1WkR0Y2JpQWdZbTl5WkdWeU9pQXdPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF4TURBbE8xeHVJQ0JpYjNndGMyaGhaRzkzT2lBa2NHeDVjaTF5WVc1blpTMTBhSFZ0WWkxemFHRmtiM2M3WEc0Z0lHaGxhV2RvZERvZ0pIQnNlWEl0Y21GdVoyVXRkR2gxYldJdGFHVnBaMmgwTzF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F3TGpKeklHVmhjMlU3WEc0Z0lIZHBaSFJvT2lBa2NHeDVjaTF5WVc1blpTMTBhSFZ0WWkxb1pXbG5hSFE3WEc1OVhHNWNia0J0YVhocGJpQndiSGx5TFhKaGJtZGxMWFJvZFcxaUxXRmpkR2wyWlNna1kyOXNiM0lwSUh0Y2JpQWdZbTk0TFhOb1lXUnZkem9nSkhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0YzJoaFpHOTNMQ0F3SURBZ01DQWtjR3g1Y2kxeVlXNW5aUzEwYUhWdFlpMWhZM1JwZG1VdGMyaGhaRzkzTFhkcFpIUm9JQ1JqYjJ4dmNqdGNibjFjYmx4dUx5OGdSblZzYkhOamNtVmxiaUJ6ZEhsc1pYTmNiaTh2SUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVRRzFwZUdsdUlIQnNlWEl0Wm5Wc2JITmpjbVZsYmkxaFkzUnBkbVVvS1NCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNNd01EQTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJREFnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdhR1ZwWjJoME9pQXhNREFsTzF4dUlDQnRZWEpuYVc0NklEQTdYRzRnSUhkcFpIUm9PaUF4TURBbE8xeHVYRzRnSUhacFpHVnZJSHRjYmlBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lIMWNibHh1SUNBdkx5QkVhWE53YkdGNUlHTnZjbkpsWTNRZ2FXTnZibHh1SUNBdWNHeDVjbDlmWTI5dWRISnZiQ0F1YVdOdmJpMHRaWGhwZEMxbWRXeHNjMk55WldWdUlIdGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmx4dUlDQWdJQ3NnYzNabklIdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnTHk4Z1NHbGtaU0JqZFhKemIzSWdhVzRnWm5Wc2JITmpjbVZsYmlCM2FHVnVJR052Ym5SeWIyeHpJR2hwWkdSbGJseHVJQ0FtTG5Cc2VYSXRMV2hwWkdVdFkyOXVkSEp2YkhNZ2UxeHVJQ0FnSUdOMWNuTnZjam9nYm05dVpUdGNiaUFnZlZ4dVhHNGdJQzh2SUV4aGNtZGxJR05oY0hScGIyNXpJR2x1SUdaMWJHd2djMk55WldWdUlHOXVJR3hoY21kbGNpQnpZM0psWlc1elhHNGdJRUJ0WldScFlTQW9iV2x1TFhkcFpIUm9PaUFrY0d4NWNpMWljQzFzWnlrZ2UxeHVJQ0FnSUM1d2JIbHlYMTlqWVhCMGFXOXVjeUI3WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SUNSd2JIbHlMV1p2Ym5RdGMybDZaUzFqWVhCMGFXOXVjeTFzWVhKblpUdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JpSXNJaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNHZMeUJVZVhCdlozSmhjR2g1WEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1WEc0a2NHeDVjaTFtYjI1MExXWmhiV2xzZVRvZ2RtRnlLQzB0Y0d4NWNpMW1iMjUwTFdaaGJXbHNlU3dnYVc1b1pYSnBkQ2tnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTFtYjI1MExYTnBlbVV0WW1GelpUb2dkbUZ5S0MwdGNHeDVjaTFtYjI1MExYTnBlbVV0WW1GelpTd2dNVFZ3ZUNrZ0lXUmxabUYxYkhRN1hHNGtjR3g1Y2kxbWIyNTBMWE5wZW1VdGMyMWhiR3c2SUhaaGNpZ3RMWEJzZVhJdFptOXVkQzF6YVhwbExYTnRZV3hzTENBeE0zQjRLU0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMV1p2Ym5RdGMybDZaUzFzWVhKblpUb2dkbUZ5S0MwdGNHeDVjaTFtYjI1MExYTnBlbVV0YkdGeVoyVXNJREU0Y0hncElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdFptOXVkQzF6YVhwbExYaHNZWEpuWlRvZ2RtRnlLQzB0Y0d4NWNpMW1iMjUwTFhOcGVtVXRlR3hoY21kbExDQXlNWEI0S1NBaFpHVm1ZWFZzZER0Y2JpUndiSGx5TFdadmJuUXRjMmw2WlMxMGFXMWxPaUIyWVhJb0xTMXdiSGx5TFdadmJuUXRjMmw2WlMxMGFXMWxMQ0FrY0d4NWNpMW1iMjUwTFhOcGVtVXRjMjFoYkd3cElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdFptOXVkQzF6YVhwbExXMWxiblU2SUhaaGNpZ3RMWEJzZVhJdFptOXVkQzF6YVhwbExXMWxiblVzSUNSd2JIbHlMV1p2Ym5RdGMybDZaUzF6YldGc2JDa2dJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMW1iMjUwTFhOcGVtVXRZbUZrWjJVNklIWmhjaWd0TFhCc2VYSXRabTl1ZEMxemFYcGxMV0poWkdkbExDQTVjSGdwSUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0Wm05dWRDMTNaV2xuYUhRdGNtVm5kV3hoY2pvZ2RtRnlLQzB0Y0d4NWNpMW1iMjUwTFhkbGFXZG9kQzF5WldkMWJHRnlMQ0EwTURBcElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdFptOXVkQzEzWldsbmFIUXRZbTlzWkRvZ2RtRnlLQzB0Y0d4NWNpMW1iMjUwTFhkbGFXZG9kQzFpYjJ4a0xDQTJNREFwSUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0YkdsdVpTMW9aV2xuYUhRNklIWmhjaWd0TFhCc2VYSXRiR2x1WlMxb1pXbG5hSFFzSURFdU55a2dJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMW1iMjUwTFhOdGIyOTBhR2x1WnpvZ2RtRnlLQzB0Y0d4NWNpMW1iMjUwTFhOdGIyOTBhR2x1Wnl3Z1ptRnNjMlVwSUNGa1pXWmhkV3gwTzF4dUlpd2lMeThnTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmk4dklFSmhaR2RsYzF4dUx5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNibHh1TG5Cc2VYSmZYMkpoWkdkbElIdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0pIQnNlWEl0WW1Ga1oyVXRZbUZqYTJkeWIzVnVaRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nSkhCc2VYSXRZbUZrWjJVdFltOXlaR1Z5TFhKaFpHbDFjenRjYmlBZ1kyOXNiM0k2SUNSd2JIbHlMV0poWkdkbExYUmxlSFF0WTI5c2IzSTdYRzRnSUdadmJuUXRjMmw2WlRvZ0pIQnNlWEl0Wm05dWRDMXphWHBsTFdKaFpHZGxPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNVHRjYmlBZ2NHRmtaR2x1WnpvZ00zQjRJRFJ3ZUR0Y2JuMWNiaUlzSWk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzR2THlCQ1lXUm5aWE5jYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzVjYmlSd2JIbHlMV0poWkdkbExXSmhZMnRuY205MWJtUTZJSFpoY2lndExYQnNlWEl0WW1Ga1oyVXRZbUZqYTJkeWIzVnVaQ3dnSkhCc2VYSXRZMjlzYjNJdFozSmhlUzAzTURBcElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdFltRmtaMlV0ZEdWNGRDMWpiMnh2Y2pvZ2RtRnlLQzB0Y0d4NWNpMWlZV1JuWlMxMFpYaDBMV052Ykc5eUxDQWpabVptS1NBaFpHVm1ZWFZzZER0Y2JpUndiSGx5TFdKaFpHZGxMV0p2Y21SbGNpMXlZV1JwZFhNNklIWmhjaWd0TFhCc2VYSXRZbUZrWjJVdFltOXlaR1Z5TFhKaFpHbDFjeXdnTW5CNEtTQWhaR1ZtWVhWc2REdGNiaUlzSWk4dklDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNHZMeUJEWVhCMGFXOXVjMXh1THk4Z0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JseHVMeThnU0dsa1pTQmtaV1poZFd4MElHTmhjSFJwYjI1elhHNHVjR3g1Y2kwdFpuVnNiQzExYVNBNk9pMTNaV0pyYVhRdGJXVmthV0V0ZEdWNGRDMTBjbUZqYXkxamIyNTBZV2x1WlhJZ2UxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVmVnh1WEc0dWNHeDVjbDlmWTJGd2RHbHZibk1nZTF4dUlDQmhibWx0WVhScGIyNDZJSEJzZVhJdFptRmtaUzFwYmlBd0xqTnpJR1ZoYzJVN1hHNGdJR0p2ZEhSdmJUb2dNRHRjYmlBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ1ptOXVkQzF6YVhwbE9pQWtjR3g1Y2kxbWIyNTBMWE5wZW1VdFkyRndkR2x2Ym5NdGMyMWhiR3c3WEc0Z0lHeGxablE2SURBN1hHNGdJSEJoWkdScGJtYzZJQ1J3YkhseUxXTnZiblJ5YjJ3dGMzQmhZMmx1Wnp0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUhSeVlXNXpabTl5YlNBd0xqUnpJR1ZoYzJVdGFXNHRiM1YwTzF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmx4dUlDQnpjR0Z1T21WdGNIUjVJSHRjYmlBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQjlYRzVjYmlBZ1FHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklDUndiSGx5TFdKd0xYTnRLU0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUFrY0d4NWNpMW1iMjUwTFhOcGVtVXRZMkZ3ZEdsdmJuTXRZbUZ6WlR0Y2JpQWdJQ0J3WVdSa2FXNW5PaUJqWVd4aktDTjdKSEJzZVhJdFkyOXVkSEp2YkMxemNHRmphVzVuZlNBcUlESXBPMXh1SUNCOVhHNWNiaUFnUUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SUNSd2JIbHlMV0p3TFcxa0tTQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQWtjR3g1Y2kxbWIyNTBMWE5wZW1VdFkyRndkR2x2Ym5NdGJXVmthWFZ0TzF4dUlDQjlYRzU5WEc1Y2JpNXdiSGx5TFMxallYQjBhVzl1Y3kxaFkzUnBkbVVnTG5Cc2VYSmZYMk5oY0hScGIyNXpJSHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc1OVhHNWNiaTh2SUVsbUlIUm9aU0JzYjNkbGNpQmpiMjUwY205c2N5QmhjbVVnYzJodmQyNGdZVzVrSUc1dmRDQmxiWEIwZVZ4dUxuQnNlWEk2Ym05MEtDNXdiSGx5TFMxb2FXUmxMV052Ym5SeWIyeHpLU0F1Y0d4NWNsOWZZMjl1ZEhKdmJITTZibTkwS0RwbGJYQjBlU2tnZmlBdWNHeDVjbDlmWTJGd2RHbHZibk1nZTF4dUlDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvWTJGc1l5Z2pleVJ3YkhseUxXTnZiblJ5YjJ3dGMzQmhZMmx1WjMwZ0tpQXROQ2twTzF4dWZWeHVYRzR1Y0d4NWNsOWZZMkZ3ZEdsdmJpQjdYRzRnSUdKaFkydG5jbTkxYm1RNklDUndiSGx5TFdOaGNIUnBiMjV6TFdKaFkydG5jbTkxYm1RN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklESndlRHRjYmlBZ1ltOTRMV1JsWTI5eVlYUnBiMjR0WW5KbFlXczZJR05zYjI1bE8xeHVJQ0JqYjJ4dmNqb2dKSEJzZVhJdFkyRndkR2x2Ym5NdGRHVjRkQzFqYjJ4dmNqdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERTROU1U3WEc0Z0lIQmhaR1JwYm1jNklEQXVNbVZ0SURBdU5XVnRPMXh1SUNCM2FHbDBaUzF6Y0dGalpUb2djSEpsTFhkeVlYQTdYRzVjYmlBZ0x5OGdSbWx5WldadmVDQmhaR1J6SUdFZ1BHUnBkajRnZDJobGJpQjFjMmx1WnlCblpYUkRkV1ZCYzBoVVRVd29LVnh1SUNCa2FYWWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlR0Y2JpQWdmVnh1ZlZ4dUlpd2lMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpOHZJRU52Ym5SeWIyeHpYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVYRzRrY0d4NWNpMWpiMjUwY205c0xXbGpiMjR0YzJsNlpUb2dkbUZ5S0MwdGNHeDVjaTFqYjI1MGNtOXNMV2xqYjI0dGMybDZaU3dnTVRod2VDa2dJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMWpiMjUwY205c0xYTndZV05wYm1jNklIWmhjaWd0TFhCc2VYSXRZMjl1ZEhKdmJDMXpjR0ZqYVc1bkxDQXhNSEI0S1NBaFpHVm1ZWFZzZER0Y2JpUndiSGx5TFdOdmJuUnliMnd0Y0dGa1pHbHVaem9nWTJGc1l5Z2pleVJ3YkhseUxXTnZiblJ5YjJ3dGMzQmhZMmx1WjMwZ0tpQXdMamNwTzF4dUpIQnNlWEl0WTI5dWRISnZiQzF3WVdSa2FXNW5PaUIyWVhJb0xTMXdiSGx5TFdOdmJuUnliMnd0Y0dGa1pHbHVaeXdnSkhCc2VYSXRZMjl1ZEhKdmJDMXdZV1JrYVc1bktTQWhaR1ZtWVhWc2REdGNiaVJ3YkhseUxXTnZiblJ5YjJ3dGNtRmthWFZ6T2lCMllYSW9MUzF3YkhseUxXTnZiblJ5YjJ3dGNtRmthWFZ6TENBemNIZ3BJQ0ZrWldaaGRXeDBPMXh1SkhCc2VYSXRZMjl1ZEhKdmJDMTBiMmRuYkdVdFkyaGxZMnRsWkMxaVlXTnJaM0p2ZFc1a09pQjJZWElvWEc0Z0lDMHRjR3g1Y2kxamIyNTBjbTlzTFhSdloyZHNaUzFqYUdWamEyVmtMV0poWTJ0bmNtOTFibVFzWEc0Z0lIWmhjaWd0TFhCc2VYSXRZMjlzYjNJdGJXRnBiaXdnSkhCc2VYSXRZMjlzYjNJdGJXRnBiaWxjYmlrZ0lXUmxabUYxYkhRN1hHNGtjR3g1Y2kxMmFXUmxieTFqYjI1MGNtOXNjeTFpWVdOclozSnZkVzVrT2lCMllYSW9YRzRnSUMwdGNHeDVjaTEyYVdSbGJ5MWpiMjUwY205c2N5MWlZV05yWjNKdmRXNWtMRnh1SUNCc2FXNWxZWEl0WjNKaFpHbGxiblFvY21kaVlTZ2pNREF3TENBd0tTd2djbWRpWVNnak1EQXdMQ0F3TGpjMUtTbGNiaWtnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTEyYVdSbGJ5MWpiMjUwY205c0xXTnZiRzl5T2lCMllYSW9MUzF3YkhseUxYWnBaR1Z2TFdOdmJuUnliMnd0WTI5c2IzSXNJQ05tWm1ZcElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdGRtbGtaVzh0WTI5dWRISnZiQzFqYjJ4dmNpMW9iM1psY2pvZ2RtRnlLQzB0Y0d4NWNpMTJhV1JsYnkxamIyNTBjbTlzTFdOdmJHOXlMV2h2ZG1WeUxDQWpabVptS1NBaFpHVm1ZWFZzZER0Y2JpUndiSGx5TFhacFpHVnZMV052Ym5SeWIyd3RZbUZqYTJkeWIzVnVaQzFvYjNabGNqb2dkbUZ5S0Z4dUlDQXRMWEJzZVhJdGRtbGtaVzh0WTI5dWRISnZiQzFpWVdOclozSnZkVzVrTFdodmRtVnlMRnh1SUNCMllYSW9MUzF3YkhseUxXTnZiRzl5TFcxaGFXNHNJQ1J3YkhseUxXTnZiRzl5TFcxaGFXNHBYRzRwSUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0WVhWa2FXOHRZMjl1ZEhKdmJITXRZbUZqYTJkeWIzVnVaRG9nZG1GeUtDMHRjR3g1Y2kxaGRXUnBieTFqYjI1MGNtOXNjeTFpWVdOclozSnZkVzVrTENBalptWm1LU0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMV0YxWkdsdkxXTnZiblJ5YjJ3dFkyOXNiM0k2SUhaaGNpZ3RMWEJzZVhJdFlYVmthVzh0WTI5dWRISnZiQzFqYjJ4dmNpd2dKSEJzZVhJdFkyOXNiM0l0WjNKaGVTMDNNREFwSUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0WVhWa2FXOHRZMjl1ZEhKdmJDMWpiMnh2Y2kxb2IzWmxjam9nZG1GeUtDMHRjR3g1Y2kxaGRXUnBieTFqYjI1MGNtOXNMV052Ykc5eUxXaHZkbVZ5TENBalptWm1LU0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMV0YxWkdsdkxXTnZiblJ5YjJ3dFltRmphMmR5YjNWdVpDMW9iM1psY2pvZ2RtRnlLRnh1SUNBdExYQnNlWEl0WVhWa2FXOHRZMjl1ZEhKdmJDMWlZV05yWjNKdmRXNWtMV2h2ZG1WeUxGeHVJQ0IyWVhJb0xTMXdiSGx5TFdOdmJHOXlMVzFoYVc0c0lDUndiSGx5TFdOdmJHOXlMVzFoYVc0cFhHNHBJQ0ZrWldaaGRXeDBPMXh1SWl3aUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmk4dklFTmhjSFJwYjI1elhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dVhHNGtjR3g1Y2kxallYQjBhVzl1Y3kxaVlXTnJaM0p2ZFc1a09pQjJZWElvTFMxd2JIbHlMV05oY0hScGIyNXpMV0poWTJ0bmNtOTFibVFzSUhKblltRW9JekF3TUN3Z01DNDRLU2tnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTFqWVhCMGFXOXVjeTEwWlhoMExXTnZiRzl5T2lCMllYSW9MUzF3YkhseUxXTmhjSFJwYjI1ekxYUmxlSFF0WTI5c2IzSXNJQ05tWm1ZcElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdFptOXVkQzF6YVhwbExXTmhjSFJwYjI1ekxXSmhjMlU2SUNSd2JIbHlMV1p2Ym5RdGMybDZaUzFpWVhObElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdFptOXVkQzF6YVhwbExXTmhjSFJwYjI1ekxYTnRZV3hzT2lBa2NHeDVjaTFtYjI1MExYTnBlbVV0YzIxaGJHd2dJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMW1iMjUwTFhOcGVtVXRZMkZ3ZEdsdmJuTXRiV1ZrYVhWdE9pQWtjR3g1Y2kxbWIyNTBMWE5wZW1VdGJHRnlaMlVnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTFtYjI1MExYTnBlbVV0WTJGd2RHbHZibk10YkdGeVoyVTZJQ1J3YkhseUxXWnZiblF0YzJsNlpTMTRiR0Z5WjJVZ0lXUmxabUYxYkhRN1hHNGlMQ0l2THlBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUx5OGdRMjl1ZEhKdmJDQmlkWFIwYjI1elhHNHZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1WEc0dWNHeDVjbDlmWTI5dWRISnZiQ0I3WEc0Z0lHSmhZMnRuY205MWJtUTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQmliM0prWlhJNklEQTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJQ1J3YkhseUxXTnZiblJ5YjJ3dGNtRmthWFZ6TzF4dUlDQmpiMnh2Y2pvZ2FXNW9aWEpwZER0Y2JpQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVJQ0JtYkdWNExYTm9jbWx1YXpvZ01EdGNiaUFnYjNabGNtWnNiM2M2SUhacGMybGliR1U3SUM4dklFbEZNVEZjYmlBZ2NHRmtaR2x1WnpvZ0pIQnNlWEl0WTI5dWRISnZiQzF3WVdSa2FXNW5PMXh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXdMak56SUdWaGMyVTdYRzVjYmlBZ2MzWm5JSHRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0JtYVd4c09pQmpkWEp5Wlc1MFEyOXNiM0k3WEc0Z0lDQWdhR1ZwWjJoME9pQWtjR3g1Y2kxamIyNTBjbTlzTFdsamIyNHRjMmw2WlR0Y2JpQWdJQ0J3YjJsdWRHVnlMV1YyWlc1MGN6b2dibTl1WlR0Y2JpQWdJQ0IzYVdSMGFEb2dKSEJzZVhJdFkyOXVkSEp2YkMxcFkyOXVMWE5wZW1VN1hHNGdJSDFjYmx4dUlDQXZMeUJFWldaaGRXeDBJR1p2WTNWelhHNGdJQ1k2Wm05amRYTWdlMXh1SUNBZ0lHOTFkR3hwYm1VNklEQTdYRzRnSUgxY2JseHVJQ0F2THlCVVlXSWdabTlqZFhOY2JpQWdKaTV3YkhseVgxOTBZV0l0Wm05amRYTWdlMXh1SUNBZ0lFQnBibU5zZFdSbElIQnNlWEl0ZEdGaUxXWnZZM1Z6TzF4dUlDQjlYRzU5WEc1Y2JpOHZJRkpsYlc5MlpTQmhibmtnYkdsdWF5QnpkSGxzYVc1blhHNWhMbkJzZVhKZlgyTnZiblJ5YjJ3Z2UxeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1VN1hHNWNiaUFnSmpvNllXWjBaWElzWEc0Z0lDWTZPbUpsWm05eVpTQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ2ZWeHVmVnh1WEc0dkx5QkRhR0Z1WjJVZ2FXTnZibk1nYjI0Z2MzUmhkR1VnWTJoaGJtZGxYRzR1Y0d4NWNsOWZZMjl1ZEhKdmJEcHViM1FvTG5Cc2VYSmZYMk52Ym5SeWIyd3RMWEJ5WlhOelpXUXBJQzVwWTI5dUxTMXdjbVZ6YzJWa0xGeHVMbkJzZVhKZlgyTnZiblJ5YjJ3dWNHeDVjbDlmWTI5dWRISnZiQzB0Y0hKbGMzTmxaQ0F1YVdOdmJpMHRibTkwTFhCeVpYTnpaV1FzWEc0dWNHeDVjbDlmWTI5dWRISnZiRHB1YjNRb0xuQnNlWEpmWDJOdmJuUnliMnd0TFhCeVpYTnpaV1FwSUM1c1lXSmxiQzB0Y0hKbGMzTmxaQ3hjYmk1d2JIbHlYMTlqYjI1MGNtOXNMbkJzZVhKZlgyTnZiblJ5YjJ3dExYQnlaWE56WldRZ0xteGhZbVZzTFMxdWIzUXRjSEpsYzNObFpDQjdYRzRnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzU5WEc0aUxDSXZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1THk4Z1EyOXVkSEp2YkhOY2JpOHZJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzVjYmk4dklFaHBaR1VnYm1GMGFYWmxJR052Ym5SeWIyeHpYRzR1Y0d4NWNpMHRablZzYkMxMWFTQTZPaTEzWldKcmFYUXRiV1ZrYVdFdFkyOXVkSEp2YkhNZ2UxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVmVnh1WEc0dkx5QlFiR0Y1WW1GamF5QmpiMjUwY205c2MxeHVMbkJzZVhKZlgyTnZiblJ5YjJ4eklIdGNiaUFnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQm1iR1Y0TFdWdVpEdGNiaUFnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dVhHNGdJQzV3YkhseVgxOXdjbTluY21WemMxOWZZMjl1ZEdGcGJtVnlJSHRjYmlBZ0lDQm1iR1Y0T2lBeE8xeHVJQ0FnSUcxcGJpMTNhV1IwYURvZ01Ec2dMeThnUm1sNElHWnZjaUJGWkdkbElHbHpjM1ZsSUhkb1pYSmxJR052Ym5SbGJuUWdkMjkxYkdRZ2IzWmxjbVpzYjNkY2JpQWdmVnh1WEc0Z0lDOHZJRk53WVdOcGJtZGNiaUFnTG5Cc2VYSmZYMk52Ym5SeWIyeHpYMTlwZEdWdElIdGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dZMkZzWXlnamV5UndiSGx5TFdOdmJuUnliMnd0YzNCaFkybHVaMzBnTHlBMEtUdGNibHh1SUNBZ0lDWTZabWx5YzNRdFkyaHBiR1FnZTF4dUlDQWdJQ0FnYldGeVoybHVMV3hsWm5RNklEQTdYRzRnSUNBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SUdGMWRHODdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0ppNXdiSGx5WDE5d2NtOW5jbVZ6YzE5ZlkyOXVkR0ZwYm1WeUlIdGNiaUFnSUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nWTJGc1l5Z2pleVJ3YkhseUxXTnZiblJ5YjJ3dGMzQmhZMmx1WjMwZ0x5QTBLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1MbkJzZVhKZlgzUnBiV1VnZTF4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTUNCallXeGpLQ043SkhCc2VYSXRZMjl1ZEhKdmJDMXpjR0ZqYVc1bmZTQXZJRElwTzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1l1Y0d4NWNsOWZjSEp2WjNKbGMzTmZYMk52Ym5SaGFXNWxjanBtYVhKemRDMWphR2xzWkN4Y2JpQWdJQ0FtTG5Cc2VYSmZYM1JwYldVNlptbHljM1F0WTJocGJHUXNYRzRnSUNBZ0ppNXdiSGx5WDE5MGFXMWxJQ3NnTG5Cc2VYSmZYM1JwYldVZ2UxeHVJQ0FnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF3TzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUM4dklFaHBaR1VnWlcxd2RIa2dZMjl1ZEhKdmJITmNiaUFnSmpwbGJYQjBlU0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JpQWdmVnh1ZlZ4dVhHNHZMeUJUYjIxbElHOXdkR2x2Ym5NZ1lYSmxJR2hwWkdSbGJpQmllU0JrWldaaGRXeDBYRzR1Y0d4NWNpQmJaR0YwWVMxd2JIbHlQU2RqWVhCMGFXOXVjeWRkTEZ4dUxuQnNlWElnVzJSaGRHRXRjR3g1Y2owbmNHbHdKMTBzWEc0dWNHeDVjaUJiWkdGMFlTMXdiSGx5UFNkaGFYSndiR0Y1SjEwc1hHNHVjR3g1Y2lCYlpHRjBZUzF3YkhseVBTZG1kV3hzYzJOeVpXVnVKMTBnZTF4dUlDQmthWE53YkdGNU9pQnViMjVsTzF4dWZWeHVYRzR1Y0d4NWNpMHRZMkZ3ZEdsdmJuTXRaVzVoWW14bFpDQmJaR0YwWVMxd2JIbHlQU2RqWVhCMGFXOXVjeWRkTEZ4dUxuQnNlWEl0TFhCcGNDMXpkWEJ3YjNKMFpXUWdXMlJoZEdFdGNHeDVjajBuY0dsd0oxMHNYRzR1Y0d4NWNpMHRZV2x5Y0d4aGVTMXpkWEJ3YjNKMFpXUWdXMlJoZEdFdGNHeDVjajBuWVdseWNHeGhlU2RkTEZ4dUxuQnNlWEl0TFdaMWJHeHpZM0psWlc0dFpXNWhZbXhsWkNCYlpHRjBZUzF3YkhseVBTZG1kV3hzYzJOeVpXVnVKMTBnZTF4dUlDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEc1OVhHNGlMQ0l2THlBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUx5OGdUV1Z1ZFhOY2JpOHZJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzVjYmk1d2JIbHlYMTl0Wlc1MUlIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEc2dMeThnUldSblpTQm1hWGhjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVYRzRnSUM4dklFRnVhVzFoZEdVZ2RHaGxJR2xqYjI1Y2JpQWdMbkJzZVhKZlgyTnZiblJ5YjJ3Z2MzWm5JSHRjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUIwY21GdWMyWnZjbTBnTUM0emN5QmxZWE5sTzF4dUlDQjlYRzVjYmlBZ0xuQnNlWEpmWDJOdmJuUnliMnhiWVhKcFlTMWxlSEJoYm1SbFpEMG5kSEoxWlNkZElIdGNiaUFnSUNCemRtY2dlMXh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9PVEJrWldjcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklFaHBaR1VnZEc5dmJIUnBjRnh1SUNBZ0lDNXdiSGx5WDE5MGIyOXNkR2x3SUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdMeThnVkdobElHRmpkSFZoYkNCdFpXNTFJR052Ym5SaGFXNWxjbHh1SUNBbVgxOWpiMjUwWVdsdVpYSWdlMXh1SUNBZ0lHRnVhVzFoZEdsdmJqb2djR3g1Y2kxd2IzQjFjQ0F3TGpKeklHVmhjMlU3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSkhCc2VYSXRiV1Z1ZFMxaVlXTnJaM0p2ZFc1a08xeHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJRFJ3ZUR0Y2JpQWdJQ0JpYjNSMGIyMDZJREV3TUNVN1hHNGdJQ0FnWW05NExYTm9ZV1J2ZHpvZ0pIQnNlWEl0YldWdWRTMXphR0ZrYjNjN1hHNGdJQ0FnWTI5c2IzSTZJQ1J3YkhseUxXMWxiblV0WTI5c2IzSTdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQWtjR3g1Y2kxbWIyNTBMWE5wZW1VdFltRnpaVHRjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBeE1IQjRPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNCeWFXZG9kRG9nTFROd2VEdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQnNaV1owTzF4dUlDQWdJSGRvYVhSbExYTndZV05sT2lCdWIzZHlZWEE3WEc0Z0lDQWdlaTFwYm1SbGVEb2dNenRjYmx4dUlDQWdJRDRnWkdsMklIdGNiaUFnSUNBZ0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQm9aV2xuYUhRZ01DNHpOWE1nWTNWaWFXTXRZbVY2YVdWeUtEQXVOQ3dnTUN3Z01DNHlMQ0F4S1N3Z2QybGtkR2dnTUM0ek5YTWdZM1ZpYVdNdFltVjZhV1Z5S0RBdU5Dd2dNQ3dnTUM0eUxDQXhLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUJCY25KdmQxeHVJQ0FnSUNZNk9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUdKdmNtUmxjam9nSkhCc2VYSXRiV1Z1ZFMxaGNuSnZkeTF6YVhwbElITnZiR2xrSUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0FnSUNBZ1ltOXlaR1Z5TFhSdmNDMWpiMnh2Y2pvZ0pIQnNlWEl0YldWdWRTMWlZV05yWjNKdmRXNWtPMXh1SUNBZ0lDQWdZMjl1ZEdWdWREb2dKeWM3WEc0Z0lDQWdJQ0JvWldsbmFIUTZJREE3WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0J5YVdkb2REb2dZMkZzWXlnb0tDTjdKSEJzZVhJdFkyOXVkSEp2YkMxcFkyOXVMWE5wZW1WOUlDOGdNaWtnS3lBamV5UndiSGx5TFdOdmJuUnliMnd0Y0dGa1pHbHVaMzBwSUMwZ0tDTjdKSEJzZVhJdGJXVnVkUzFoY25KdmR5MXphWHBsZlNBdklESXBLVHRjYmlBZ0lDQWdJSFJ2Y0RvZ01UQXdKVHRjYmlBZ0lDQWdJSGRwWkhSb09pQXdPMXh1SUNBZ0lIMWNibHh1SUNBZ0lGdHliMnhsUFNkdFpXNTFKMTBnZTF4dUlDQWdJQ0FnY0dGa1pHbHVaem9nSkhCc2VYSXRZMjl1ZEhKdmJDMXdZV1JrYVc1bk8xeHVJQ0FnSUgxY2JseHVJQ0FnSUZ0eWIyeGxQU2R0Wlc1MWFYUmxiU2RkTEZ4dUlDQWdJRnR5YjJ4bFBTZHRaVzUxYVhSbGJYSmhaR2x2SjEwZ2UxeHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNbkI0TzF4dVhHNGdJQ0FnSUNBbU9tWnBjbk4wTFdOb2FXeGtJSHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01EdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QlBjSFJwYjI1elhHNGdJQ0FnTG5Cc2VYSmZYMk52Ym5SeWIyd2dlMXh1SUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ0lDQWdJR052Ykc5eU9pQWtjR3g1Y2kxdFpXNTFMV052Ykc5eU8xeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nSkhCc2VYSXRabTl1ZEMxemFYcGxMVzFsYm5VN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lCallXeGpLQ043SkhCc2VYSXRZMjl1ZEhKdmJDMXdZV1JrYVc1bmZTQXZJREV1TlNrZ1kyRnNZeWdqZXlSd2JIbHlMV052Ym5SeWIyd3RjR0ZrWkdsdVozMGdLaUF4TGpVcE8xeHVJQ0FnSUNBZ2RYTmxjaTF6Wld4bFkzUTZJRzV2Ym1VN1hHNGdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNibHh1SUNBZ0lDQWdQaUJ6Y0dGdUlIdGNiaUFnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdsdWFHVnlhWFE3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBbU9qcGhablJsY2lCN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ0pIQnNlWEl0YldWdWRTMXBkR1Z0TFdGeWNtOTNMWE5wZW1VZ2MyOXNhV1FnZEhKaGJuTndZWEpsYm5RN1hHNGdJQ0FnSUNBZ0lHTnZiblJsYm5RNklDY25PMXh1SUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUhSdmNEb2dOVEFsTzF4dUlDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29MVFV3SlNrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDWXRMV1p2Y25kaGNtUWdlMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQmpZV3hqS0NON0pIQnNlWEl0WTI5dWRISnZiQzF3WVdSa2FXNW5mU0FxSURRcE8xeHVYRzRnSUNBZ0lDQWdJQ1k2T21GbWRHVnlJSHRjYmlBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0YkdWbWRDMWpiMnh2Y2pvZ0pIQnNlWEl0YldWdWRTMXBkR1Z0TFdGeWNtOTNMV052Ykc5eU8xeHVJQ0FnSUNBZ0lDQWdJSEpwWjJoME9pQmpZV3hqS0NnamV5UndiSGx5TFdOdmJuUnliMnd0Y0dGa1pHbHVaMzBnS2lBeExqVXBJQzBnSTNza2NHeDVjaTF0Wlc1MUxXbDBaVzB0WVhKeWIzY3RjMmw2WlgwcE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSmk1d2JIbHlYMTkwWVdJdFptOWpkWE02T21GbWRHVnlMRnh1SUNBZ0lDQWdJQ0FtT21odmRtVnlPanBoWm5SbGNpQjdYRzRnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMV3hsWm5RdFkyOXNiM0k2SUdOMWNuSmxiblJEYjJ4dmNqdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FtTFMxaVlXTnJJSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklDUndiSGx5TFdadmJuUXRkMlZwWjJoMExYSmxaM1ZzWVhJN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ0pIQnNlWEl0WTI5dWRISnZiQzF3WVdSa2FXNW5PMXh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQmpZV3hqS0NON0pIQnNlWEl0WTI5dWRISnZiQzF3WVdSa2FXNW5mU0F2SURJcE8xeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2SUdOaGJHTW9JM3NrY0d4NWNpMWpiMjUwY205c0xYQmhaR1JwYm1kOUlDb2dOQ2s3WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0FnSUNBZ2QybGtkR2c2SUdOaGJHTW9NVEF3SlNBdElDZ2pleVJ3YkhseUxXTnZiblJ5YjJ3dGNHRmtaR2x1WjMwZ0tpQXlLU2s3WEc1Y2JpQWdJQ0FnSUNBZ0pqbzZZV1owWlhJZ2UxeHVJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMXlhV2RvZEMxamIyeHZjam9nSkhCc2VYSXRiV1Z1ZFMxcGRHVnRMV0Z5Y205M0xXTnZiRzl5TzF4dUlDQWdJQ0FnSUNBZ0lHeGxablE2SUdOaGJHTW9LQ043SkhCc2VYSXRZMjl1ZEhKdmJDMXdZV1JrYVc1bmZTQXFJREV1TlNrZ0xTQWpleVJ3YkhseUxXMWxiblV0YVhSbGJTMWhjbkp2ZHkxemFYcGxmU2s3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQW1PanBpWldadmNtVWdlMXh1SUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUndiSGx5TFcxbGJuVXRZbUZqYXkxaWIzSmtaWEl0WTI5c2IzSTdYRzRnSUNBZ0lDQWdJQ0FnWW05NExYTm9ZV1J2ZHpvZ01DQXhjSGdnTUNBa2NHeDVjaTF0Wlc1MUxXSmhZMnN0WW05eVpHVnlMWE5vWVdSdmR5MWpiMnh2Y2p0Y2JpQWdJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQW5KenRjYmlBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURGd2VEdGNiaUFnSUNBZ0lDQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklHTmhiR01vSTNza2NHeDVjaTFqYjI1MGNtOXNMWEJoWkdScGJtZDlJQzhnTWlrN1hHNGdJQ0FnSUNBZ0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUNBZ2NtbG5hSFE2SURBN1hHNGdJQ0FnSUNBZ0lDQWdkRzl3T2lBeE1EQWxPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0ppNXdiSGx5WDE5MFlXSXRabTlqZFhNNk9tRm1kR1Z5TEZ4dUlDQWdJQ0FnSUNBbU9taHZkbVZ5T2pwaFpuUmxjaUI3WEc0Z0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKcFoyaDBMV052Ykc5eU9pQmpkWEp5Wlc1MFEyOXNiM0k3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F1Y0d4NWNsOWZZMjl1ZEhKdmJGdHliMnhsUFNkdFpXNTFhWFJsYlhKaFpHbHZKMTBnZTF4dUlDQWdJQ0FnY0dGa1pHbHVaeTFzWldaME9pQWtjR3g1Y2kxamIyNTBjbTlzTFhCaFpHUnBibWM3WEc1Y2JpQWdJQ0FnSUNZNk9tSmxabTl5WlN4Y2JpQWdJQ0FnSUNZNk9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTVRBd0pUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdKam82WW1WbWIzSmxJSHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ2NtZGlZU2dqTURBd0xDQXdMakVwTzF4dUlDQWdJQ0FnSUNCamIyNTBaVzUwT2lBbkp6dGNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnSUNBZ0lHWnNaWGd0YzJoeWFXNXJPaUF3TzF4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURFMmNIZzdYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMXlhV2RvZERvZ0pIQnNlWEl0WTI5dWRISnZiQzF6Y0dGamFXNW5PMXh1SUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dNQzR6Y3lCbFlYTmxPMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVFp3ZUR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0pqbzZZV1owWlhJZ2UxeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFqWm1abU8xeHVJQ0FnSUNBZ0lDQmliM0prWlhJNklEQTdYRzRnSUNBZ0lDQWdJR2hsYVdkb2REb2dObkI0TzF4dUlDQWdJQ0FnSUNCc1pXWjBPaUF4TW5CNE8xeHVJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9pQXdPMXh1SUNBZ0lDQWdJQ0IwYjNBNklEVXdKVHRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMDFNQ1VwSUhOallXeGxLREFwTzF4dUlDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQjBjbUZ1YzJadmNtMGdNQzR6Y3lCbFlYTmxMQ0J2Y0dGamFYUjVJREF1TTNNZ1pXRnpaVHRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJRFp3ZUR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0psdGhjbWxoTFdOb1pXTnJaV1E5SjNSeWRXVW5YU0I3WEc0Z0lDQWdJQ0FnSUNZNk9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSkhCc2VYSXRZMjl1ZEhKdmJDMTBiMmRuYkdVdFkyaGxZMnRsWkMxaVlXTnJaM0p2ZFc1a08xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSmpvNllXWjBaWElnZTF4dUlDQWdJQ0FnSUNBZ0lHOXdZV05wZEhrNklERTdYRzRnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMDFNQ1VwSUhOallXeGxLREVwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDWXVjR3g1Y2w5ZmRHRmlMV1p2WTNWek9qcGlaV1p2Y21Vc1hHNGdJQ0FnSUNBbU9taHZkbVZ5T2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQnlaMkpoS0NSd2JIbHlMV052Ykc5eUxXZHlZWGt0T1RBd0xDQXdMakVwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUU5d2RHbHZiaUIyWVd4MVpWeHVJQ0FnSUM1d2JIbHlYMTl0Wlc1MVgxOTJZV3gxWlNCN1hHNGdJQ0FnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lCaGRYUnZPMXh1SUNBZ0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lCallXeGpLQ2dqZXlSd2JIbHlMV052Ym5SeWIyd3RjR0ZrWkdsdVozMGdMU0F5S1NBcUlDMHhLVHRjYmlBZ0lDQWdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYRzRnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2SUdOaGJHTW9JM3NrY0d4NWNpMWpiMjUwY205c0xYQmhaR1JwYm1kOUlDb2dNeTQxS1R0Y2JpQWdJQ0FnSUhCdmFXNTBaWEl0WlhabGJuUnpPaUJ1YjI1bE8xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dUlpd2lMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpOHZJRTFsYm5WelhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dVhHNGtjR3g1Y2kxdFpXNTFMV0poWTJ0bmNtOTFibVE2SUhaaGNpZ3RMWEJzZVhJdGJXVnVkUzFpWVdOclozSnZkVzVrTENCeVoySmhLQ05tWm1Zc0lEQXVPU2twSUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0YldWdWRTMXlZV1JwZFhNNklIWmhjaWd0TFhCc2VYSXRiV1Z1ZFMxeVlXUnBkWE1zSURSd2VDa2dJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMXRaVzUxTFdOdmJHOXlPaUIyWVhJb0xTMXdiSGx5TFcxbGJuVXRZMjlzYjNJc0lDUndiSGx5TFdOdmJHOXlMV2R5WVhrdE56QXdLU0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMVzFsYm5VdGMyaGhaRzkzT2lCMllYSW9MUzF3YkhseUxXMWxiblV0YzJoaFpHOTNMQ0F3SURGd2VDQXljSGdnY21kaVlTZ2pNREF3TENBd0xqRTFLU2tnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTF0Wlc1MUxXRnljbTkzTFhOcGVtVTZJSFpoY2lndExYQnNlWEl0YldWdWRTMWhjbkp2ZHkxemFYcGxMQ0EwY0hncElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdGJXVnVkUzFwZEdWdExXRnljbTkzTFhOcGVtVTZJSFpoY2lndExYQnNlWEl0YldWdWRTMXBkR1Z0TFdGeWNtOTNMWE5wZW1Vc0lEUndlQ2tnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTF0Wlc1MUxXbDBaVzB0WVhKeWIzY3RZMjlzYjNJNklIWmhjaWd0TFhCc2VYSXRiV1Z1ZFMxaGNuSnZkeTFqYjJ4dmNpd2dKSEJzZVhJdFkyOXNiM0l0WjNKaGVTMDFNREFwSUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0YldWdWRTMWlZV05yTFdKdmNtUmxjaTFqYjJ4dmNqb2dkbUZ5S0MwdGNHeDVjaTF0Wlc1MUxXSmhZMnN0WW05eVpHVnlMV052Ykc5eUxDQWtjR3g1Y2kxamIyeHZjaTFuY21GNUxURXdNQ2tnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTF0Wlc1MUxXSmhZMnN0WW05eVpHVnlMWE5vWVdSdmR5MWpiMnh2Y2pvZ2RtRnlLQzB0Y0d4NWNpMXRaVzUxTFdKaFkyc3RZbTl5WkdWeUxYTm9ZV1J2ZHkxamIyeHZjaXdnSTJabVppa2dJV1JsWm1GMWJIUTdYRzRpTENJdkx5QXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVMeThnVTJ4cFpHVnlJR2x1Y0hWMGN5QXRJRHhwYm5CMWRDQjBlWEJsUFZ3aWNtRnVaMlZjSWo1Y2JpOHZJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzVjYmk1d2JIbHlMUzFtZFd4c0xYVnBJR2x1Y0hWMFczUjVjR1U5SjNKaGJtZGxKMTBnZTF4dUlDQmhjSEJsWVhKaGJtTmxPaUJ1YjI1bE8xeHVJQ0JpWVdOclozSnZkVzVrT2lCMGNtRnVjM0JoY21WdWREdGNiaUFnWW05eVpHVnlPaUF3TzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lCallXeGpLQ043SkhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0YUdWcFoyaDBmU0FxSURJcE8xeHVYRzRnSUM4dklHQmpiMnh2Y21BZ2NISnZjR1Z5ZEhrZ2FYTWdkWE5sWkNCcGJpQktVeUIwYnlCd2IzQjFiR0YwWlNCc2IzZGxjaUJtYVd4c0lHWnZjaUJYWldKTGFYUmNiaUFnWTI5c2IzSTZJQ1J3YkhseUxYSmhibWRsTFdacGJHd3RZbUZqYTJkeWIzVnVaRHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lHaGxhV2RvZERvZ1kyRnNZeWdvSTNza2NHeDVjaTF5WVc1blpTMTBhSFZ0WWkxaFkzUnBkbVV0YzJoaFpHOTNMWGRwWkhSb2ZTQXFJRElwSUNzZ0kzc2tjR3g1Y2kxeVlXNW5aUzEwYUhWdFlpMW9aV2xuYUhSOUtUdGNiaUFnYldGeVoybHVPaUF3TzF4dUlDQnRhVzR0ZDJsa2RHZzZJREE3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzRnSUhSeVlXNXphWFJwYjI0NklHSnZlQzF6YUdGa2IzY2dNQzR6Y3lCbFlYTmxPMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNibHh1SUNBbU9qb3RkMlZpYTJsMExYTnNhV1JsY2kxeWRXNXVZV0pzWlMxMGNtRmpheUI3WEc0Z0lDQWdRR2x1WTJ4MVpHVWdjR3g1Y2kxeVlXNW5aUzEwY21GamF6dGNibHh1SUNBZ0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklHeHBibVZoY2kxbmNtRmthV1Z1ZENoMGJ5QnlhV2RvZEN3Z1kzVnljbVZ1ZEVOdmJHOXlJSFpoY2lndExYWmhiSFZsTENBd0pTa3NJSFJ5WVc1emNHRnlaVzUwSUhaaGNpZ3RMWFpoYkhWbExDQXdKU2twTzF4dUlDQjlYRzVjYmlBZ0pqbzZMWGRsWW10cGRDMXpiR2xrWlhJdGRHaDFiV0lnZTF4dUlDQWdJRUJwYm1Oc2RXUmxJSEJzZVhJdGNtRnVaMlV0ZEdoMWJXSTdYRzVjYmlBZ0lDQmhjSEJsWVhKaGJtTmxPaUJ1YjI1bE8xeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklHTmhiR01vS0NnamV5UndiSGx5TFhKaGJtZGxMWFJvZFcxaUxXaGxhV2RvZEgwZ0xTQWpleVJ3YkhseUxYSmhibWRsTFhSeVlXTnJMV2hsYVdkb2RIMHBJQzhnTWlrZ0tpQXRNU2s3WEc0Z0lIMWNibHh1SUNBdkx5Qk5iM3BwYkd4aFhHNGdJQ1k2T2kxdGIzb3RjbUZ1WjJVdGRISmhZMnNnZTF4dUlDQWdJRUJwYm1Oc2RXUmxJSEJzZVhJdGNtRnVaMlV0ZEhKaFkyczdYRzRnSUgxY2JseHVJQ0FtT2pvdGJXOTZMWEpoYm1kbExYUm9kVzFpSUh0Y2JpQWdJQ0JBYVc1amJIVmtaU0J3YkhseUxYSmhibWRsTFhSb2RXMWlPMXh1SUNCOVhHNWNiaUFnSmpvNkxXMXZlaTF5WVc1blpTMXdjbTluY21WemN5QjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dZM1Z5Y21WdWRFTnZiRzl5TzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklHTmhiR01vSTNza2NHeDVjaTF5WVc1blpTMTBjbUZqYXkxb1pXbG5hSFI5SUM4Z01pazdYRzRnSUNBZ2FHVnBaMmgwT2lBa2NHeDVjaTF5WVc1blpTMTBjbUZqYXkxb1pXbG5hSFE3WEc0Z0lIMWNibHh1SUNBdkx5Qk5hV055YjNOdlpuUmNiaUFnSmpvNkxXMXpMWFJ5WVdOcklIdGNiaUFnSUNCQWFXNWpiSFZrWlNCd2JIbHlMWEpoYm1kbExYUnlZV05yTzF4dVhHNGdJQ0FnWTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQjlYRzVjYmlBZ0pqbzZMVzF6TFdacGJHd3RkWEJ3WlhJZ2UxeHVJQ0FnSUVCcGJtTnNkV1JsSUhCc2VYSXRjbUZ1WjJVdGRISmhZMnM3WEc0Z0lIMWNibHh1SUNBbU9qb3RiWE10Wm1sc2JDMXNiM2RsY2lCN1hHNGdJQ0FnUUdsdVkyeDFaR1VnY0d4NWNpMXlZVzVuWlMxMGNtRmphenRjYmx4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUdOMWNuSmxiblJEYjJ4dmNqdGNiaUFnZlZ4dVhHNGdJQ1k2T2kxdGN5MTBhSFZ0WWlCN1hHNGdJQ0FnUUdsdVkyeDFaR1VnY0d4NWNpMXlZVzVuWlMxMGFIVnRZanRjYmx4dUlDQWdJQzh2SUVadmNpQnpiMjFsSUhKbFlYTnZiaXdnUldSblpTQjFjMlZ6SUhSb1pTQXRkMlZpYTJsMElHMWhjbWRwYmlCaFltOTJaVnh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREE3WEc0Z0lIMWNibHh1SUNBbU9qb3RiWE10ZEc5dmJIUnBjQ0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JpQWdmVnh1WEc0Z0lDOHZJRVp2WTNWeklITjBlV3hsYzF4dUlDQW1Pam90Ylc5NkxXWnZZM1Z6TFc5MWRHVnlJSHRjYmlBZ0lDQmliM0prWlhJNklEQTdYRzRnSUgxY2JseHVJQ0FtT21adlkzVnpJSHRjYmlBZ0lDQnZkWFJzYVc1bE9pQXdPMXh1SUNCOVhHNWNiaUFnSmk1d2JIbHlYMTkwWVdJdFptOWpkWE1nZTF4dUlDQWdJQ1k2T2kxM1pXSnJhWFF0YzJ4cFpHVnlMWEoxYm01aFlteGxMWFJ5WVdOcklIdGNiaUFnSUNBZ0lFQnBibU5zZFdSbElIQnNlWEl0ZEdGaUxXWnZZM1Z6TzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1k2T2kxdGIzb3RjbUZ1WjJVdGRISmhZMnNnZTF4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnY0d4NWNpMTBZV0l0Wm05amRYTTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0pqbzZMVzF6TFhSeVlXTnJJSHRjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJSEJzZVhJdGRHRmlMV1p2WTNWek8xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dUlpd2lMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpOHZJRk5zYVdSbGNuTmNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNWNiaTh2SUZSb2RXMWlYRzRrY0d4NWNpMXlZVzVuWlMxMGFIVnRZaTFvWldsbmFIUTZJSFpoY2lndExYQnNlWEl0Y21GdVoyVXRkR2gxYldJdGFHVnBaMmgwTENBeE0zQjRLU0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMWEpoYm1kbExYUm9kVzFpTFdKaFkydG5jbTkxYm1RNklIWmhjaWd0TFhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0WW1GamEyZHliM1Z1WkN3Z0kyWm1aaWtnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTF5WVc1blpTMTBhSFZ0WWkxemFHRmtiM2M2SUhaaGNpaGNiaUFnTFMxd2JIbHlMWEpoYm1kbExYUm9kVzFpTFhOb1lXUnZkeXhjYmlBZ01DQXhjSGdnTVhCNElISm5ZbUVvSkhCc2VYSXRZMjlzYjNJdFozSmhlUzA1TURBc0lEQXVNVFVwTEZ4dUlDQXdJREFnTUNBeGNIZ2djbWRpWVNna2NHeDVjaTFqYjJ4dmNpMW5jbUY1TFRrd01Dd2dNQzR5S1Z4dUtTQWhaR1ZtWVhWc2REdGNibHh1THk4Z1FXTjBhWFpsSUhOMFlYUmxYRzRrY0d4NWNpMXlZVzVuWlMxMGFIVnRZaTFoWTNScGRtVXRjMmhoWkc5M0xYZHBaSFJvT2lCMllYSW9MUzF3YkhseUxYSmhibWRsTFhSb2RXMWlMV0ZqZEdsMlpTMXphR0ZrYjNjdGQybGtkR2dzSUROd2VDa2dJV1JsWm1GMWJIUTdYRzVjYmk4dklGUnlZV05yWEc0a2NHeDVjaTF5WVc1blpTMTBjbUZqYXkxb1pXbG5hSFE2SUhaaGNpZ3RMWEJzZVhJdGNtRnVaMlV0ZEhKaFkyc3RhR1ZwWjJoMExDQTFjSGdwSUNGa1pXWmhkV3gwTzF4dVhHNHZMeUJHYVd4c1hHNGtjR3g1Y2kxeVlXNW5aUzFtYVd4c0xXSmhZMnRuY205MWJtUTZJSFpoY2lndExYQnNlWEl0Y21GdVoyVXRabWxzYkMxaVlXTnJaM0p2ZFc1a0xDQjJZWElvTFMxd2JIbHlMV052Ykc5eUxXMWhhVzRzSUNSd2JIbHlMV052Ykc5eUxXMWhhVzRwS1NBaFpHVm1ZWFZzZER0Y2JseHVMeThnVkhsd1pTQnpjR1ZqYVdacFkxeHVKSEJzZVhJdGRtbGtaVzh0Y21GdVoyVXRkSEpoWTJzdFltRmphMmR5YjNWdVpEb2dkbUZ5S0Z4dUlDQXRMWEJzZVhJdGRtbGtaVzh0Y21GdVoyVXRkSEpoWTJzdFltRmphMmR5YjNWdVpDeGNiaUFnSkhCc2VYSXRkbWxrWlc4dGNISnZaM0psYzNNdFluVm1abVZ5WldRdFltRmphMmR5YjNWdVpGeHVLU0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMWFpwWkdWdkxYSmhibWRsTFhSb2RXMWlMV0ZqZEdsMlpTMXphR0ZrYjNjdFkyOXNiM0k2SUhaaGNpaGNiaUFnTFMxd2JIbHlMV0YxWkdsdkxYSmhibWRsTFhSb2RXMWlMV0ZqZEdsMlpTMXphR0ZrYjNjdFkyOXNiM0lzWEc0Z0lISm5ZbUVvSTJabVppd2dNQzQxS1Z4dUtTQWhaR1ZtWVhWc2REdGNiaVJ3YkhseUxXRjFaR2x2TFhKaGJtZGxMWFJ5WVdOckxXSmhZMnRuY205MWJtUTZJSFpoY2loY2JpQWdMUzF3YkhseUxXRjFaR2x2TFhKaGJtZGxMWFJ5WVdOckxXSmhZMnRuY205MWJtUXNYRzRnSUNSd2JIbHlMV0YxWkdsdkxYQnliMmR5WlhOekxXSjFabVpsY21Wa0xXSmhZMnRuY205MWJtUmNiaWtnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTFoZFdScGJ5MXlZVzVuWlMxMGFIVnRZaTFoWTNScGRtVXRjMmhoWkc5M0xXTnZiRzl5T2lCMllYSW9YRzRnSUMwdGNHeDVjaTFoZFdScGJ5MXlZVzVuWlMxMGFIVnRZaTFoWTNScGRtVXRjMmhoWkc5M0xXTnZiRzl5TEZ4dUlDQnlaMkpoS0NSd2JIbHlMV052Ykc5eUxXZHlZWGt0T1RBd0xDQXdMakVwWEc0cElDRmtaV1poZFd4ME8xeHVJaXdpTHk4Z0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpOHZJRVpoZFhnZ2NHOXpkR1Z5SUc5MlpYSnNZWGxjYmk4dklDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNWNiaTV3YkhseVgxOXdiM04wWlhJZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMXdiSGx5TFhacFpHVnZMV0poWTJ0bmNtOTFibVFzSUNSd2JIbHlMWFpwWkdWdkxXSmhZMnRuY205MWJtUXBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQTFNQ1VnTlRBbE8xeHVJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dUlDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklHTnZiblJoYVc0N1hHNGdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdiR1ZtZERvZ01EdGNiaUFnYjNCaFkybDBlVG9nTUR0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCMGIzQTZJREE3WEc0Z0lIUnlZVzV6YVhScGIyNDZJRzl3WVdOcGRIa2dNQzR5Y3lCbFlYTmxPMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnZWkxcGJtUmxlRG9nTVR0Y2JuMWNibHh1TG5Cc2VYSXRMWE4wYjNCd1pXUXVjR3g1Y2w5ZmNHOXpkR1Z5TFdWdVlXSnNaV1FnTG5Cc2VYSmZYM0J2YzNSbGNpQjdYRzRnSUc5d1lXTnBkSGs2SURFN1hHNTlYRzVjYmk4dklFRnNiRzkzSUdsdWRHVnlZV04wYVc5dUlIZHBkR2dnV1c5MVZIVmlaU0JqYjI1MGNtOXNjeUIzYUdsc1pTQndZWFZ6WldSY2JpNXdiSGx5TFMxNWIzVjBkV0psTG5Cc2VYSXRMWEJoZFhObFpDNXdiSGx5WDE5d2IzTjBaWEl0Wlc1aFlteGxaRHB1YjNRb0xuQnNlWEl0TFhOMGIzQndaV1FwSUM1d2JIbHlYMTl3YjNOMFpYSWdlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dUlpd2lMeThnTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmk4dklGUnBiV1ZjYmk4dklDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNWNiaTV3YkhseVgxOTBhVzFsSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUFrY0d4NWNpMW1iMjUwTFhOcGVtVXRkR2x0WlR0Y2JuMWNibHh1THk4Z1RXVmthV0VnWkhWeVlYUnBiMjRnYUdsa1pHVnVJRzl1SUhOdFlXeHNJSE5qY21WbGJuTmNiaTV3YkhseVgxOTBhVzFsSUNzZ0xuQnNlWEpmWDNScGJXVWdlMXh1SUNBdkx5QkJaR1FnWVNCemJHRnphQ0JwYmlCaVpXWnZjbVZjYmlBZ0pqbzZZbVZtYjNKbElIdGNiaUFnSUNCamIyNTBaVzUwT2lBblhGd3lNRFEwSnp0Y2JpQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklDUndiSGx5TFdOdmJuUnliMnd0YzNCaFkybHVaenRjYmlBZ2ZWeHVYRzRnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBb0pIQnNlWEl0WW5BdGJXUWdMU0F4Y0hncEtTQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ2ZWeHVmVnh1SWl3aUx5b2djM1I1YkdWc2FXNTBMV1JwYzJGaWJHVWdjMlZzWldOMGIzSXRiV0Y0TFdOdmJYQnZkVzVrTFhObGJHVmpkRzl5Y3lBcUwxeHVMeThnTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmk4dklGUnZiMngwYVhCelhHNHZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1WEc0dWNHeDVjbDlmZEc5dmJIUnBjQ0I3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ1J3YkhseUxYUnZiMngwYVhBdFltRmphMmR5YjNWdVpEdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dKSEJzZVhJdGRHOXZiSFJwY0MxeVlXUnBkWE03WEc0Z0lHSnZkSFJ2YlRvZ01UQXdKVHRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dKSEJzZVhJdGRHOXZiSFJwY0MxemFHRmtiM2M3WEc0Z0lHTnZiRzl5T2lBa2NHeDVjaTEwYjI5c2RHbHdMV052Ykc5eU8xeHVJQ0JtYjI1MExYTnBlbVU2SUNSd2JIbHlMV1p2Ym5RdGMybDZaUzF6YldGc2JEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklDUndiSGx5TFdadmJuUXRkMlZwWjJoMExYSmxaM1ZzWVhJN1hHNGdJR3hsWm5RNklEVXdKVHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TXp0Y2JpQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ1kyRnNZeWdqZXlSd2JIbHlMWFJ2YjJ4MGFYQXRjR0ZrWkdsdVozMGdLaUF5S1R0Y2JpQWdiM0JoWTJsMGVUb2dNRHRjYmlBZ2NHRmtaR2x1WnpvZ0pIQnNlWEl0ZEc5dmJIUnBjQzF3WVdSa2FXNW5JR05oYkdNb0kzc2tjR3g1Y2kxMGIyOXNkR2x3TFhCaFpHUnBibWQ5SUNvZ01TNDFLVHRjYmlBZ2NHOXBiblJsY2kxbGRtVnVkSE02SUc1dmJtVTdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTFRVd0pTd2dNVEJ3ZUNrZ2MyTmhiR1VvTUM0NEtUdGNiaUFnZEhKaGJuTm1iM0p0TFc5eWFXZHBiam9nTlRBbElERXdNQ1U3WEc0Z0lIUnlZVzV6YVhScGIyNDZJSFJ5WVc1elptOXliU0F3TGpKeklEQXVNWE1nWldGelpTd2diM0JoWTJsMGVTQXdMakp6SURBdU1YTWdaV0Z6WlR0Y2JpQWdkMmhwZEdVdGMzQmhZMlU2SUc1dmQzSmhjRHRjYmlBZ2VpMXBibVJsZURvZ01qdGNibHh1SUNBdkx5QlVhR1VnWW1GamEyZHliM1Z1WkNCMGNtbGhibWRzWlZ4dUlDQW1PanBpWldadmNtVWdlMXh1SUNBZ0lHSnZjbVJsY2kxc1pXWjBPaUFrY0d4NWNpMTBiMjlzZEdsd0xXRnljbTkzTFhOcGVtVWdjMjlzYVdRZ2RISmhibk53WVhKbGJuUTdYRzRnSUNBZ1ltOXlaR1Z5TFhKcFoyaDBPaUFrY0d4NWNpMTBiMjlzZEdsd0xXRnljbTkzTFhOcGVtVWdjMjlzYVdRZ2RISmhibk53WVhKbGJuUTdYRzRnSUNBZ1ltOXlaR1Z5TFhSdmNEb2dKSEJzZVhJdGRHOXZiSFJwY0MxaGNuSnZkeTF6YVhwbElITnZiR2xrSUNSd2JIbHlMWFJ2YjJ4MGFYQXRZbUZqYTJkeWIzVnVaRHRjYmlBZ0lDQmliM1IwYjIwNklHTmhiR01vSTNza2NHeDVjaTEwYjI5c2RHbHdMV0Z5Y205M0xYTnBlbVY5SUNvZ0xURXBPMXh1SUNBZ0lHTnZiblJsYm5RNklDY25PMXh1SUNBZ0lHaGxhV2RvZERvZ01EdGNiaUFnSUNCc1pXWjBPaUExTUNVN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NndE5UQWxLVHRjYmlBZ0lDQjNhV1IwYURvZ01EdGNiaUFnSUNCNkxXbHVaR1Y0T2lBeU8xeHVJQ0I5WEc1OVhHNWNiaTh2SUVScGMzQnNZWGxwYm1kY2JpNXdiSGx5SUM1d2JIbHlYMTlqYjI1MGNtOXNPbWh2ZG1WeUlDNXdiSGx5WDE5MGIyOXNkR2x3TEZ4dUxuQnNlWElnTG5Cc2VYSmZYMk52Ym5SeWIyd3VjR3g1Y2w5ZmRHRmlMV1p2WTNWeklDNXdiSGx5WDE5MGIyOXNkR2x3TEZ4dUxuQnNlWEpmWDNSdmIyeDBhWEF0TFhacGMybGliR1VnZTF4dUlDQnZjR0ZqYVhSNU9pQXhPMXh1SUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpTZ3ROVEFsTENBd0tTQnpZMkZzWlNneEtUdGNibjFjYmx4dUxuQnNlWElnTG5Cc2VYSmZYMk52Ym5SeWIydzZhRzkyWlhJZ0xuQnNlWEpmWDNSdmIyeDBhWEFnZTF4dUlDQjZMV2x1WkdWNE9pQXpPMXh1ZlZ4dVhHNHZMeUJHYVhKemRDQjBiMjlzZEdsd1hHNHVjR3g1Y2w5ZlkyOXVkSEp2YkhNZ1BpQXVjR3g1Y2w5ZlkyOXVkSEp2YkRwbWFYSnpkQzFqYUdsc1pDQXVjR3g1Y2w5ZmRHOXZiSFJwY0N4Y2JpNXdiSGx5WDE5amIyNTBjbTlzY3lBK0lDNXdiSGx5WDE5amIyNTBjbTlzT21acGNuTjBMV05vYVd4a0lDc2dMbkJzZVhKZlgyTnZiblJ5YjJ3Z0xuQnNlWEpmWDNSdmIyeDBhWEFnZTF4dUlDQnNaV1owT2lBd08xeHVJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlNnd0xDQXhNSEI0S1NCelkyRnNaU2d3TGpncE8xeHVJQ0IwY21GdWMyWnZjbTB0YjNKcFoybHVPaUF3SURFd01DVTdYRzVjYmlBZ0pqbzZZbVZtYjNKbElIdGNiaUFnSUNCc1pXWjBPaUJqWVd4aktDZ2pleVJ3YkhseUxXTnZiblJ5YjJ3dGFXTnZiaTF6YVhwbGZTQXZJRElwSUNzZ0kzc2tjR3g1Y2kxamIyNTBjbTlzTFhCaFpHUnBibWQ5S1R0Y2JpQWdmVnh1ZlZ4dVhHNHZMeUJNWVhOMElIUnZiMngwYVhCY2JpNXdiSGx5WDE5amIyNTBjbTlzY3lBK0lDNXdiSGx5WDE5amIyNTBjbTlzT214aGMzUXRZMmhwYkdRZ0xuQnNlWEpmWDNSdmIyeDBhWEFnZTF4dUlDQnNaV1owT2lCaGRYUnZPMXh1SUNCeWFXZG9kRG9nTUR0Y2JpQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTUN3Z01UQndlQ2tnYzJOaGJHVW9NQzQ0S1R0Y2JpQWdkSEpoYm5ObWIzSnRMVzl5YVdkcGJqb2dNVEF3SlNBeE1EQWxPMXh1WEc0Z0lDWTZPbUpsWm05eVpTQjdYRzRnSUNBZ2JHVm1kRG9nWVhWMGJ6dGNiaUFnSUNCeWFXZG9kRG9nWTJGc1l5Z29JM3NrY0d4NWNpMWpiMjUwY205c0xXbGpiMjR0YzJsNlpYMGdMeUF5S1NBcklDTjdKSEJzZVhJdFkyOXVkSEp2YkMxd1lXUmthVzVuZlNrN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtEVXdKU2s3WEc0Z0lIMWNibjFjYmx4dUxuQnNlWEpmWDJOdmJuUnliMnh6SUQ0Z0xuQnNlWEpmWDJOdmJuUnliMnc2Wm1seWMzUXRZMmhwYkdRc1hHNHVjR3g1Y2w5ZlkyOXVkSEp2YkhNZ1BpQXVjR3g1Y2w5ZlkyOXVkSEp2YkRwbWFYSnpkQzFqYUdsc1pDQXJJQzV3YkhseVgxOWpiMjUwY205c0xGeHVMbkJzZVhKZlgyTnZiblJ5YjJ4eklENGdMbkJzZVhKZlgyTnZiblJ5YjJ3NmJHRnpkQzFqYUdsc1pDQjdYRzRnSUNZNmFHOTJaWElnTG5Cc2VYSmZYM1J2YjJ4MGFYQXNYRzRnSUNZdWNHeDVjbDlmZEdGaUxXWnZZM1Z6SUM1d2JIbHlYMTkwYjI5c2RHbHdMRnh1SUNBdWNHeDVjbDlmZEc5dmJIUnBjQzB0ZG1semFXSnNaU0I3WEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTUN3Z01Da2djMk5oYkdVb01TazdYRzRnSUgxY2JuMWNiaUlzSWk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzR2THlCVWIyOXNkR2x3YzF4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmx4dUpIQnNlWEl0ZEc5dmJIUnBjQzFpWVdOclozSnZkVzVrT2lCMllYSW9MUzF3YkhseUxYUnZiMngwYVhBdFltRmphMmR5YjNWdVpDd2djbWRpWVNnalptWm1MQ0F3TGprcEtTQWhaR1ZtWVhWc2REdGNiaVJ3YkhseUxYUnZiMngwYVhBdFkyOXNiM0k2SUhaaGNpZ3RMWEJzZVhJdGRHOXZiSFJwY0MxamIyeHZjaXdnSkhCc2VYSXRZMjlzYjNJdFozSmhlUzAzTURBcElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdGRHOXZiSFJwY0Mxd1lXUmthVzVuT2lCallXeGpLQ043SkhCc2VYSXRZMjl1ZEhKdmJDMXpjR0ZqYVc1bmZTQXZJRElwTzF4dUpIQnNlWEl0ZEc5dmJIUnBjQzF3WVdSa2FXNW5PaUIyWVhJb0xTMXdiSGx5TFhSdmIyeDBhWEF0Y0dGa1pHbHVaeXdnSkhCc2VYSXRkRzl2YkhScGNDMXdZV1JrYVc1bktTQWhaR1ZtWVhWc2REdGNiaVJ3YkhseUxYUnZiMngwYVhBdFlYSnliM2N0YzJsNlpUb2dkbUZ5S0MwdGNHeDVjaTEwYjI5c2RHbHdMV0Z5Y205M0xYTnBlbVVzSURSd2VDa2dJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMTBiMjlzZEdsd0xYSmhaR2wxY3pvZ2RtRnlLQzB0Y0d4NWNpMTBiMjlzZEdsd0xYSmhaR2wxY3l3Z05YQjRLU0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMWFJ2YjJ4MGFYQXRjMmhoWkc5M09pQjJZWElvTFMxd2JIbHlMWFJ2YjJ4MGFYQXRjMmhoWkc5M0xDQXdJREZ3ZUNBeWNIZ2djbWRpWVNnd0xDQXdMQ0F3TENBd0xqRTFLU2tnSVdSbFptRjFiSFE3WEc0aUxDSXZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1THk4Z1VHeGhlV0poWTJzZ2NISnZaM0psYzNOY2JpOHZJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzVjYmk4dklFOW1abk5sZENCMGFHVWdjbUZ1WjJVZ2RHaDFiV0lnYVc0Z2IzSmtaWElnZEc4Z1ltVWdZV0pzWlNCMGJ5QmpZV3hqZFd4aGRHVWdkR2hsSUhKbGJHRjBhWFpsSUhCeWIyZHlaWE56SUNnak9UVTBLVnh1SkhCc2VYSXRjSEp2WjNKbGMzTXRiMlptYzJWME9pQWtjR3g1Y2kxeVlXNW5aUzEwYUhWdFlpMW9aV2xuYUhRN1hHNWNiaTV3YkhseVgxOXdjbTluY21WemN5QjdYRzRnSUd4bFpuUTZJR05oYkdNb0kzc2tjR3g1Y2kxd2NtOW5jbVZ6Y3kxdlptWnpaWFI5SUNvZ01DNDFLVHRjYmlBZ2JXRnlaMmx1TFhKcFoyaDBPaUFrY0d4NWNpMXdjbTluY21WemN5MXZabVp6WlhRN1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmx4dUlDQnBibkIxZEZ0MGVYQmxQU2R5WVc1blpTZGRMRnh1SUNBbVgxOWlkV1ptWlhJZ2UxeHVJQ0FnSUcxaGNtZHBiaTFzWldaME9pQmpZV3hqS0NON0pIQnNlWEl0Y0hKdlozSmxjM010YjJabWMyVjBmU0FxSUMwd0xqVXBPMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nWTJGc1l5Z2pleVJ3YkhseUxYQnliMmR5WlhOekxXOW1abk5sZEgwZ0tpQXRNQzQxS1R0Y2JpQWdJQ0IzYVdSMGFEb2dZMkZzWXlneE1EQWxJQ3NnSTNza2NHeDVjaTF3Y205bmNtVnpjeTF2Wm1aelpYUjlLVHRjYmlBZ2ZWeHVYRzRnSUdsdWNIVjBXM1I1Y0dVOUozSmhibWRsSjEwZ2UxeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0I2TFdsdVpHVjRPaUF5TzF4dUlDQjlYRzVjYmlBZ0x5OGdVMlZsYXlCMGIyOXNkR2x3SUhSdklITm9iM2NnZEdsdFpWeHVJQ0F1Y0d4NWNsOWZkRzl2YkhScGNDQjdYRzRnSUNBZ2JHVm1kRG9nTUR0Y2JpQWdJQ0J0WVhndGQybGtkR2c2SURFeU1IQjRPMXh1SUNBZ0lHOTJaWEptYkc5M0xYZHlZWEE2SUdKeVpXRnJMWGR2Y21RN1hHNGdJQ0FnZDJocGRHVXRjM0JoWTJVNklHNXZjbTFoYkR0Y2JpQWdmVnh1ZlZ4dVhHNHVjR3g1Y2w5ZmNISnZaM0psYzNOZlgySjFabVpsY2lCN1hHNGdJQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVG9nYm05dVpUc2dMeW9nYzNSNWJHVnNhVzUwTFdScGMyRmliR1V0YkdsdVpTQXFMMXh1SUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ1ltOXlaR1Z5T2lBd08xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhNREJ3ZUR0Y2JpQWdhR1ZwWjJoME9pQWtjR3g1Y2kxeVlXNW5aUzEwY21GamF5MW9aV2xuYUhRN1hHNGdJR3hsWm5RNklEQTdYRzRnSUcxaGNtZHBiaTEwYjNBNklHTmhiR01vS0NON0pIQnNlWEl0Y21GdVoyVXRkSEpoWTJzdGFHVnBaMmgwZlNBdklESXBJQ29nTFRFcE8xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUhSdmNEb2dOVEFsTzF4dVhHNGdJQ1k2T2kxM1pXSnJhWFF0Y0hKdlozSmxjM010WW1GeUlIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ2ZWeHVYRzRnSUNZNk9pMTNaV0pyYVhRdGNISnZaM0psYzNNdGRtRnNkV1VnZTF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUdOMWNuSmxiblJEYjJ4dmNqdGNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF4TURCd2VEdGNiaUFnSUNCdGFXNHRkMmxrZEdnNklDUndiSGx5TFhKaGJtZGxMWFJ5WVdOckxXaGxhV2RvZER0Y2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCM2FXUjBhQ0F3TGpKeklHVmhjMlU3WEc0Z0lIMWNibHh1SUNBdkx5Qk5iM3BwYkd4aFhHNGdJQ1k2T2kxdGIzb3RjSEp2WjNKbGMzTXRZbUZ5SUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCamRYSnlaVzUwUTI5c2IzSTdYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTVRBd2NIZzdYRzRnSUNBZ2JXbHVMWGRwWkhSb09pQWtjR3g1Y2kxeVlXNW5aUzEwY21GamF5MW9aV2xuYUhRN1hHNGdJQ0FnZEhKaGJuTnBkR2x2YmpvZ2QybGtkR2dnTUM0eWN5QmxZWE5sTzF4dUlDQjlYRzVjYmlBZ0x5OGdUV2xqY205emIyWjBYRzRnSUNZNk9pMXRjeTFtYVd4c0lIdGNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF4TURCd2VEdGNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQjNhV1IwYUNBd0xqSnpJR1ZoYzJVN1hHNGdJSDFjYm4xY2JseHVMeThnVEc5aFpHbHVaeUJ6ZEdGMFpWeHVMbkJzZVhJdExXeHZZV1JwYm1jZ0xuQnNlWEpmWDNCeWIyZHlaWE56WDE5aWRXWm1aWElnZTF4dUlDQmhibWx0WVhScGIyNDZJSEJzZVhJdGNISnZaM0psYzNNZ01YTWdiR2x1WldGeUlHbHVabWx1YVhSbE8xeHVJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUJzYVc1bFlYSXRaM0poWkdsbGJuUW9YRzRnSUNBZ0xUUTFaR1ZuTEZ4dUlDQWdJQ1J3YkhseUxYQnliMmR5WlhOekxXeHZZV1JwYm1jdFltRmphMmR5YjNWdVpDQXlOU1VzWEc0Z0lDQWdkSEpoYm5Od1lYSmxiblFnTWpVbExGeHVJQ0FnSUhSeVlXNXpjR0Z5Wlc1MElEVXdKU3hjYmlBZ0lDQWtjR3g1Y2kxd2NtOW5jbVZ6Y3kxc2IyRmthVzVuTFdKaFkydG5jbTkxYm1RZ05UQWxMRnh1SUNBZ0lDUndiSGx5TFhCeWIyZHlaWE56TFd4dllXUnBibWN0WW1GamEyZHliM1Z1WkNBM05TVXNYRzRnSUNBZ2RISmhibk53WVhKbGJuUWdOelVsTEZ4dUlDQWdJSFJ5WVc1emNHRnlaVzUwWEc0Z0lDazdYRzRnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCeVpYQmxZWFF0ZUR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQWtjR3g1Y2kxd2NtOW5jbVZ6Y3kxc2IyRmthVzVuTFhOcGVtVWdKSEJzZVhJdGNISnZaM0psYzNNdGJHOWhaR2x1WnkxemFYcGxPMXh1SUNCamIyeHZjam9nZEhKaGJuTndZWEpsYm5RN1hHNTlYRzVjYmk1d2JIbHlMUzEyYVdSbGJ5NXdiSGx5TFMxc2IyRmthVzVuSUM1d2JIbHlYMTl3Y205bmNtVnpjMTlmWW5WbVptVnlJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pIQnNlWEl0ZG1sa1pXOHRjSEp2WjNKbGMzTXRZblZtWm1WeVpXUXRZbUZqYTJkeWIzVnVaRHRjYm4xY2JseHVMbkJzZVhJdExXRjFaR2x2TG5Cc2VYSXRMV3h2WVdScGJtY2dMbkJzZVhKZlgzQnliMmR5WlhOelgxOWlkV1ptWlhJZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrY0d4NWNpMWhkV1JwYnkxd2NtOW5jbVZ6Y3kxaWRXWm1aWEpsWkMxaVlXTnJaM0p2ZFc1a08xeHVmVnh1WEc0dkx5Qk5ZWEpyWlhKelhHNHVjR3g1Y2w5ZmNISnZaM0psYzNOZlgyMWhjbXRsY2lCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1J3YkhseUxYQnliMmR5WlhOekxXMWhjbXRsY2kxaVlXTnJaM0p2ZFc1a08xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhjSGc3WEc0Z0lHaGxhV2RvZERvZ0pIQnNlWEl0Y21GdVoyVXRkSEpoWTJzdGFHVnBaMmgwTzF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUhSdmNEb2dOVEFsTzF4dUlDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaU2d0TlRBbExDQXROVEFsS1R0Y2JpQWdkMmxrZEdnNklDUndiSGx5TFhCeWIyZHlaWE56TFcxaGNtdGxjaTEzYVdSMGFEdGNiaUFnZWkxcGJtUmxlRG9nTXp0Y2JuMWNiaUlzSWk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzR2THlCUWNtOW5jbVZ6YzF4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmx4dUx5OGdURzloWkdsdVoxeHVKSEJzZVhJdGNISnZaM0psYzNNdGJHOWhaR2x1WnkxemFYcGxPaUIyWVhJb0xTMXdiSGx5TFhCeWIyZHlaWE56TFd4dllXUnBibWN0YzJsNlpTd2dNalZ3ZUNrZ0lXUmxabUYxYkhRN1hHNGtjR3g1Y2kxd2NtOW5jbVZ6Y3kxc2IyRmthVzVuTFdKaFkydG5jbTkxYm1RNklIWmhjaWd0TFhCc2VYSXRjSEp2WjNKbGMzTXRiRzloWkdsdVp5MWlZV05yWjNKdmRXNWtMQ0J5WjJKaEtDUndiSGx5TFdOdmJHOXlMV2R5WVhrdE9UQXdMQ0F3TGpZcEtTQWhaR1ZtWVhWc2REdGNibHh1THk4Z1RXRnlhMlZ5YzF4dUpIQnNlWEl0Y0hKdlozSmxjM010YldGeWEyVnlMV0poWTJ0bmNtOTFibVE2SUhaaGNpZ3RMWEJzZVhJdGNISnZaM0psYzNNdGJXRnlhMlZ5TFdKaFkydG5jbTkxYm1Rc0lDTm1abVlwSUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0Y0hKdlozSmxjM010YldGeWEyVnlMWGRwWkhSb09pQjJZWElvTFMxd2JIbHlMWEJ5YjJkeVpYTnpMVzFoY210bGNpMTNhV1IwYUN3Z00zQjRLU0FoWkdWbVlYVnNkRHRjYmx4dUx5OGdRblZtWm1WeVpXUmNiaVJ3YkhseUxYWnBaR1Z2TFhCeWIyZHlaWE56TFdKMVptWmxjbVZrTFdKaFkydG5jbTkxYm1RNklIWmhjaWd0TFhCc2VYSXRkbWxrWlc4dGNISnZaM0psYzNNdFluVm1abVZ5WldRdFltRmphMmR5YjNWdVpDd2djbWRpWVNnalptWm1MQ0F3TGpJMUtTa2dJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMWhkV1JwYnkxd2NtOW5jbVZ6Y3kxaWRXWm1aWEpsWkMxaVlXTnJaM0p2ZFc1a09pQjJZWElvWEc0Z0lDMHRjR3g1Y2kxaGRXUnBieTF3Y205bmNtVnpjeTFpZFdabVpYSmxaQzFpWVdOclozSnZkVzVrTEZ4dUlDQnlaMkpoS0NSd2JIbHlMV052Ykc5eUxXZHlZWGt0TWpBd0xDQXdMallwWEc0cElDRmtaV1poZFd4ME8xeHVJaXdpTHk4Z0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpOHZJRlp2YkhWdFpWeHVMeThnTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmx4dUxuQnNlWEpmWDNadmJIVnRaU0I3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUcxaGVDMTNhV1IwYURvZ01URXdjSGc3WEc0Z0lHMXBiaTEzYVdSMGFEb2dPREJ3ZUR0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCM2FXUjBhRG9nTWpBbE8xeHVYRzRnSUdsdWNIVjBXM1I1Y0dVOUozSmhibWRsSjEwZ2UxeHVJQ0FnSUcxaGNtZHBiaTFzWldaME9pQmpZV3hqS0NON0pIQnNlWEl0WTI5dWRISnZiQzF6Y0dGamFXNW5mU0F2SURJcE8xeHVJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dZMkZzWXlnamV5UndiSGx5TFdOdmJuUnliMnd0YzNCaFkybHVaMzBnTHlBeUtUdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJQ0FnZWkxcGJtUmxlRG9nTWp0Y2JpQWdmVnh1ZlZ4dVhHNHZMeUJCZFhSdklITnBlbVVnYjI0Z2FVOVRJR0Z6SUhSb1pYSmxKM01nYm04Z2MyeHBaR1Z5WEc0dWNHeDVjaTB0YVhNdGFXOXpJQzV3YkhseVgxOTJiMngxYldVZ2UxeHVJQ0J0YVc0dGQybGtkR2c2SURBN1hHNGdJSGRwWkhSb09pQmhkWFJ2TzF4dWZWeHVJaXdpTHk4Z0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpOHZJRUYxWkdsdklITjBlV3hsYzF4dUx5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNibHh1THk4Z1EyOXVkR0ZwYm1WeVhHNHVjR3g1Y2kwdFlYVmthVzhnZTF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JuMWNibHh1THk4Z1EyOXVkSEp2YkhNZ1kyOXVkR0ZwYm1WeVhHNHVjR3g1Y2kwdFlYVmthVzhnTG5Cc2VYSmZYMk52Ym5SeWIyeHpJSHRjYmlBZ1ltRmphMmR5YjNWdVpEb2dKSEJzZVhJdFlYVmthVzh0WTI5dWRISnZiSE10WW1GamEyZHliM1Z1WkR0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ2FXNW9aWEpwZER0Y2JpQWdZMjlzYjNJNklDUndiSGx5TFdGMVpHbHZMV052Ym5SeWIyd3RZMjlzYjNJN1hHNGdJSEJoWkdScGJtYzZJQ1J3YkhseUxXTnZiblJ5YjJ3dGMzQmhZMmx1Wnp0Y2JuMWNibHh1THk4Z1EyOXVkSEp2YkNCbGJHVnRaVzUwYzF4dUxuQnNlWEl0TFdGMVpHbHZJQzV3YkhseVgxOWpiMjUwY205c0lIdGNiaUFnSmk1d2JIbHlYMTkwWVdJdFptOWpkWE1zWEc0Z0lDWTZhRzkyWlhJc1hHNGdJQ1piWVhKcFlTMWxlSEJoYm1SbFpEMG5kSEoxWlNkZElIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWtjR3g1Y2kxaGRXUnBieTFqYjI1MGNtOXNMV0poWTJ0bmNtOTFibVF0YUc5MlpYSTdYRzRnSUNBZ1kyOXNiM0k2SUNSd2JIbHlMV0YxWkdsdkxXTnZiblJ5YjJ3dFkyOXNiM0l0YUc5MlpYSTdYRzRnSUgxY2JuMWNibHh1THk4Z1VtRnVaMlVnYVc1d2RYUnpYRzR1Y0d4NWNpMHRablZzYkMxMWFTNXdiSGx5TFMxaGRXUnBieUJwYm5CMWRGdDBlWEJsUFNkeVlXNW5aU2RkSUh0Y2JpQWdKam82TFhkbFltdHBkQzF6Ykdsa1pYSXRjblZ1Ym1GaWJHVXRkSEpoWTJzZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSd2JIbHlMV0YxWkdsdkxYSmhibWRsTFhSeVlXTnJMV0poWTJ0bmNtOTFibVE3WEc0Z0lIMWNibHh1SUNBbU9qb3RiVzk2TFhKaGJtZGxMWFJ5WVdOcklIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa2NHeDVjaTFoZFdScGJ5MXlZVzVuWlMxMGNtRmpheTFpWVdOclozSnZkVzVrTzF4dUlDQjlYRzVjYmlBZ0pqbzZMVzF6TFhSeVlXTnJJSHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtjR3g1Y2kxaGRXUnBieTF5WVc1blpTMTBjbUZqYXkxaVlXTnJaM0p2ZFc1a08xeHVJQ0I5WEc1Y2JpQWdMeThnVUhKbGMzTmxaQ0J6ZEhsc1pYTmNiaUFnSmpwaFkzUnBkbVVnZTF4dUlDQWdJQ1k2T2kxM1pXSnJhWFF0YzJ4cFpHVnlMWFJvZFcxaUlIdGNiaUFnSUNBZ0lFQnBibU5zZFdSbElIQnNlWEl0Y21GdVoyVXRkR2gxYldJdFlXTjBhWFpsS0NSd2JIbHlMV0YxWkdsdkxYSmhibWRsTFhSb2RXMWlMV0ZqZEdsMlpTMXphR0ZrYjNjdFkyOXNiM0lwTzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1k2T2kxdGIzb3RjbUZ1WjJVdGRHaDFiV0lnZTF4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnY0d4NWNpMXlZVzVuWlMxMGFIVnRZaTFoWTNScGRtVW9KSEJzZVhJdFlYVmthVzh0Y21GdVoyVXRkR2gxYldJdFlXTjBhWFpsTFhOb1lXUnZkeTFqYjJ4dmNpazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0pqbzZMVzF6TFhSb2RXMWlJSHRjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJSEJzZVhJdGNtRnVaMlV0ZEdoMWJXSXRZV04wYVhabEtDUndiSGx5TFdGMVpHbHZMWEpoYm1kbExYUm9kVzFpTFdGamRHbDJaUzF6YUdGa2IzY3RZMjlzYjNJcE8xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dVhHNHZMeUJRY205bmNtVnpjMXh1TG5Cc2VYSXRMV0YxWkdsdklDNXdiSGx5WDE5d2NtOW5jbVZ6YzE5ZlluVm1abVZ5SUh0Y2JpQWdZMjlzYjNJNklDUndiSGx5TFdGMVpHbHZMWEJ5YjJkeVpYTnpMV0oxWm1abGNtVmtMV0poWTJ0bmNtOTFibVE3WEc1OVhHNGlMQ0l2THlBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUx5OGdWbWxrWlc4Z2MzUjViR1Z6WEc0dkx5QXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVYRzVBZFhObElDZHpZWE56T20xaGRHZ25PMXh1WEc0dkx5QkRiMjUwWVdsdVpYSmNiaTV3YkhseUxTMTJhV1JsYnlCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUhaaGNpZ3RMWEJzZVhJdGRtbGtaVzh0WW1GamEyZHliM1Z1WkN3Z0pIQnNlWEl0ZG1sa1pXOHRZbUZqYTJkeWIzVnVaQ2s3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNWNiaUFnSmk1d2JIbHlMUzF0Wlc1MUxXOXdaVzRnZTF4dUlDQWdJRzkyWlhKbWJHOTNPaUIyYVhOcFlteGxPMXh1SUNCOVhHNTlYRzVjYmk1d2JIbHlYMTkyYVdSbGJ5MTNjbUZ3Y0dWeUlIdGNiaUFnWW1GamEyZHliM1Z1WkRvZ2RtRnlLQzB0Y0d4NWNpMTJhV1JsYnkxaVlXTnJaM0p2ZFc1a0xDQWtjR3g1Y2kxMmFXUmxieTFpWVdOclozSnZkVzVrS1R0Y2JpQWdhR1ZwWjJoME9pQXhNREFsTzF4dUlDQnRZWEpuYVc0NklHRjFkRzg3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzU5WEc1Y2JpOHZJRVJsWm1GMWJIUWdkRzhnTVRZNk9TQnlZWFJwYnlCaWRYUWdkR2hwY3lCcGN5QnpaWFFnWW5rZ1NtRjJZVk5qY21sd2RDQmlZWE5sWkNCdmJpQmpiMjVtYVdkY2JpUmxiV0psWkMxd1lXUmthVzVuT2lBb2JXRjBhQzVrYVhZb01UQXdMQ0F4TmlrZ0tpQTVLVHRjYmx4dUxuQnNlWEpmWDNacFpHVnZMV1Z0WW1Wa0xGeHVMbkJzZVhKZlgzWnBaR1Z2TFhkeVlYQndaWEl0TFdacGVHVmtMWEpoZEdsdklIdGNiaUFnUUhOMWNIQnZjblJ6SUc1dmRDQW9ZWE53WldOMExYSmhkR2x2T2lBeE5pQXZJRGtwSUh0Y2JpQWdJQ0JvWldsbmFIUTZJREE3WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklIUnZMWEJsY21ObGJuUmhaMlVvSkdWdFltVmtMWEJoWkdScGJtY3BPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnZlZ4dVhHNGdJR0Z6Y0dWamRDMXlZWFJwYnpvZ01UWWdMeUE1TzF4dWZWeHVYRzR1Y0d4NWNsOWZkbWxrWlc4dFpXMWlaV1FnYVdaeVlXMWxMRnh1TG5Cc2VYSmZYM1pwWkdWdkxYZHlZWEJ3WlhJdExXWnBlR1ZrTFhKaGRHbHZJSFpwWkdWdklIdGNiaUFnWW05eVpHVnlPaUF3TzF4dUlDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lHeGxablE2SURBN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ2RHOXdPaUF3TzF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYm4xY2JseHVMeThnUm05eUlGWnBiV1Z2TENCcFppQjBhR1VnWm5Wc2JDQmpkWE4wYjIwZ1ZVa2dhWE1nYzNWd2NHOXlkR1ZrWEc0dWNHeDVjaTB0Wm5Wc2JDMTFhU0F1Y0d4NWNsOWZkbWxrWlc4dFpXMWlaV1FnUGlBdWNHeDVjbDlmZG1sa1pXOHRaVzFpWldSZlgyTnZiblJoYVc1bGNpQjdYRzRnSUNSb1pXbG5hSFE2SURJME1EdGNiaUFnSkc5bVpuTmxkRG9nZEc4dGNHVnlZMlZ1ZEdGblpTaHRZWFJvTG1ScGRpZ2thR1ZwWjJoMElDMGdKR1Z0WW1Wa0xYQmhaR1JwYm1jc0lHMWhkR2d1WkdsMktDUm9aV2xuYUhRc0lEVXdLU2twTzF4dVhHNGdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQjBieTF3WlhKalpXNTBZV2RsS0NSb1pXbG5hSFFwTzF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdTZ3RKRzltWm5ObGRDazdYRzU5WEc1Y2JpOHZJRU52Ym5SeWIyeHpJR052Ym5SaGFXNWxjbHh1TG5Cc2VYSXRMWFpwWkdWdklDNXdiSGx5WDE5amIyNTBjbTlzY3lCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNSd2JIbHlMWFpwWkdWdkxXTnZiblJ5YjJ4ekxXSmhZMnRuY205MWJtUTdYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMHRiR1ZtZEMxeVlXUnBkWE02SUdsdWFHVnlhWFE3WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjB0Y21sbmFIUXRjbUZrYVhWek9pQnBibWhsY21sME8xeHVJQ0JpYjNSMGIyMDZJREE3WEc0Z0lHTnZiRzl5T2lBa2NHeDVjaTEyYVdSbGJ5MWpiMjUwY205c0xXTnZiRzl5TzF4dUlDQnNaV1owT2lBd08xeHVJQ0J3WVdSa2FXNW5PaUJqWVd4aktDTjdKSEJzZVhJdFkyOXVkSEp2YkMxemNHRmphVzVuZlNBdklESXBPMXh1SUNCd1lXUmthVzVuTFhSdmNEb2dZMkZzWXlnamV5UndiSGx5TFdOdmJuUnliMnd0YzNCaFkybHVaMzBnS2lBeUtUdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQnlhV2RvZERvZ01EdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNBd0xqUnpJR1ZoYzJVdGFXNHRiM1YwTENCMGNtRnVjMlp2Y20wZ01DNDBjeUJsWVhObExXbHVMVzkxZER0Y2JpQWdlaTFwYm1SbGVEb2dNenRjYmx4dUlDQkFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dKSEJzZVhJdFluQXRjMjBwSUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUFrY0d4NWNpMWpiMjUwY205c0xYTndZV05wYm1jN1hHNGdJQ0FnY0dGa1pHbHVaeTEwYjNBNklHTmhiR01vSTNza2NHeDVjaTFqYjI1MGNtOXNMWE53WVdOcGJtZDlJQ29nTXk0MUtUdGNiaUFnZlZ4dWZWeHVYRzR2THlCSWFXUmxJR052Ym5SeWIyeHpYRzR1Y0d4NWNpMHRkbWxrWlc4dWNHeDVjaTB0YUdsa1pTMWpiMjUwY205c2N5QXVjR3g1Y2w5ZlkyOXVkSEp2YkhNZ2UxeHVJQ0J2Y0dGamFYUjVPaUF3TzF4dUlDQndiMmx1ZEdWeUxXVjJaVzUwY3pvZ2JtOXVaVHRjYmlBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLREV3TUNVcE8xeHVmVnh1WEc0dkx5QkRiMjUwY205c0lHVnNaVzFsYm5SelhHNHVjR3g1Y2kwdGRtbGtaVzhnTG5Cc2VYSmZYMk52Ym5SeWIyd2dlMXh1SUNBdkx5QkliM1psY2lCaGJtUWdkR0ZpSUdadlkzVnpYRzRnSUNZdWNHeDVjbDlmZEdGaUxXWnZZM1Z6TEZ4dUlDQW1PbWh2ZG1WeUxGeHVJQ0FtVzJGeWFXRXRaWGh3WVc1a1pXUTlKM1J5ZFdVblhTQjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dKSEJzZVhJdGRtbGtaVzh0WTI5dWRISnZiQzFpWVdOclozSnZkVzVrTFdodmRtVnlPMXh1SUNBZ0lHTnZiRzl5T2lBa2NHeDVjaTEyYVdSbGJ5MWpiMjUwY205c0xXTnZiRzl5TFdodmRtVnlPMXh1SUNCOVhHNTlYRzVjYmk4dklFeGhjbWRsSUhCc1lYa2dZblYwZEc5dUlDaDJhV1JsYnlCdmJteDVLVnh1TG5Cc2VYSmZYMk52Ym5SeWIyd3RMVzkyWlhKc1lXbGtJSHRjYmlBZ1ltRmphMmR5YjNWdVpEb2dKSEJzZVhJdGRtbGtaVzh0WTI5dWRISnZiQzFpWVdOclozSnZkVzVrTFdodmRtVnlPMXh1SUNCaWIzSmtaWEk2SURBN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklERXdNQ1U3WEc0Z0lHTnZiRzl5T2lBa2NHeDVjaTEyYVdSbGJ5MWpiMjUwY205c0xXTnZiRzl5TzF4dUlDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQnNaV1owT2lBMU1DVTdYRzRnSUc5d1lXTnBkSGs2SURBdU9UdGNiaUFnY0dGa1pHbHVaem9nWTJGc1l5Z2pleVJ3YkhseUxXTnZiblJ5YjJ3dGMzQmhZMmx1WjMwZ0tpQXhMalVwTzF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUhSdmNEb2dOVEFsTzF4dUlDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaU2d0TlRBbExDQXROVEFsS1R0Y2JpQWdkSEpoYm5OcGRHbHZiam9nTUM0emN6dGNiaUFnZWkxcGJtUmxlRG9nTWp0Y2JseHVJQ0F2THlCUFptWnpaWFFnYVdOdmJpQjBieUJ0WVd0bElIUm9aU0J3YkdGNUlHSjFkSFJ2YmlCc2IyOXJJSEpwWjJoMFhHNGdJSE4yWnlCN1hHNGdJQ0FnYkdWbWREb2dNbkI0TzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjYmlBZ2ZWeHVYRzRnSUNZNmFHOTJaWElzWEc0Z0lDWTZabTlqZFhNZ2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJSDFjYm4xY2JseHVMbkJzZVhJdExYQnNZWGxwYm1jZ0xuQnNlWEpmWDJOdmJuUnliMnd0TFc5MlpYSnNZV2xrSUh0Y2JpQWdiM0JoWTJsMGVUb2dNRHRjYmlBZ2RtbHphV0pwYkdsMGVUb2dhR2xrWkdWdU8xeHVmVnh1WEc0dWNHeDVjaTB0Wm5Wc2JDMTFhUzV3YkhseUxTMTJhV1JsYnlBdWNHeDVjbDlmWTI5dWRISnZiQzB0YjNabGNteGhhV1FnZTF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JuMWNibHh1THk4Z1ZtbGtaVzhnY21GdVoyVWdhVzV3ZFhSelhHNHVjR3g1Y2kwdFpuVnNiQzExYVM1d2JIbHlMUzEyYVdSbGJ5QnBibkIxZEZ0MGVYQmxQU2R5WVc1blpTZGRJSHRjYmlBZ0pqbzZMWGRsWW10cGRDMXpiR2xrWlhJdGNuVnVibUZpYkdVdGRISmhZMnNnZTF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1J3YkhseUxYWnBaR1Z2TFhKaGJtZGxMWFJ5WVdOckxXSmhZMnRuY205MWJtUTdYRzRnSUgxY2JseHVJQ0FtT2pvdGJXOTZMWEpoYm1kbExYUnlZV05ySUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrY0d4NWNpMTJhV1JsYnkxeVlXNW5aUzEwY21GamF5MWlZV05yWjNKdmRXNWtPMXh1SUNCOVhHNWNiaUFnSmpvNkxXMXpMWFJ5WVdOcklIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa2NHeDVjaTEyYVdSbGJ5MXlZVzVuWlMxMGNtRmpheTFpWVdOclozSnZkVzVrTzF4dUlDQjlYRzVjYmlBZ0x5OGdVSEpsYzNObFpDQnpkSGxzWlhOY2JpQWdKanBoWTNScGRtVWdlMXh1SUNBZ0lDWTZPaTEzWldKcmFYUXRjMnhwWkdWeUxYUm9kVzFpSUh0Y2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUhCc2VYSXRjbUZ1WjJVdGRHaDFiV0l0WVdOMGFYWmxLQ1J3YkhseUxYWnBaR1Z2TFhKaGJtZGxMWFJvZFcxaUxXRmpkR2wyWlMxemFHRmtiM2N0WTI5c2IzSXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDWTZPaTF0YjNvdGNtRnVaMlV0ZEdoMWJXSWdlMXh1SUNBZ0lDQWdRR2x1WTJ4MVpHVWdjR3g1Y2kxeVlXNW5aUzEwYUhWdFlpMWhZM1JwZG1Vb0pIQnNlWEl0ZG1sa1pXOHRjbUZ1WjJVdGRHaDFiV0l0WVdOMGFYWmxMWE5vWVdSdmR5MWpiMnh2Y2lrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmpvNkxXMXpMWFJvZFcxaUlIdGNiaUFnSUNBZ0lFQnBibU5zZFdSbElIQnNlWEl0Y21GdVoyVXRkR2gxYldJdFlXTjBhWFpsS0NSd2JIbHlMWFpwWkdWdkxYSmhibWRsTFhSb2RXMWlMV0ZqZEdsMlpTMXphR0ZrYjNjdFkyOXNiM0lwTzF4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1WEc0dkx5QlFjbTluY21WemMxeHVMbkJzZVhJdExYWnBaR1Z2SUM1d2JIbHlYMTl3Y205bmNtVnpjMTlmWW5WbVptVnlJSHRjYmlBZ1kyOXNiM0k2SUNSd2JIbHlMWFpwWkdWdkxYQnliMmR5WlhOekxXSjFabVpsY21Wa0xXSmhZMnRuY205MWJtUTdYRzU5WEc0aUxDSXZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1THk4Z1JuVnNiSE5qY21WbGJseHVMeThnTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmx4dUxuQnNlWEk2Wm5Wc2JITmpjbVZsYmlCN1hHNGdJRUJwYm1Oc2RXUmxJSEJzZVhJdFpuVnNiSE5qY21WbGJpMWhZM1JwZG1VN1hHNTlYRzVjYmk4dklFWmhiR3hpWVdOcklHWnZjaUIxYm5OMWNIQnZjblJsWkNCaWNtOTNjMlZ5YzF4dUxuQnNlWEl0TFdaMWJHeHpZM0psWlc0dFptRnNiR0poWTJzZ2UxeHVJQ0JBYVc1amJIVmtaU0J3YkhseUxXWjFiR3h6WTNKbFpXNHRZV04wYVhabE8xeHVYRzRnSUdKdmRIUnZiVG9nTUR0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJR3hsWm5RNklEQTdYRzRnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjYmlBZ2NtbG5hSFE2SURBN1hHNGdJSFJ2Y0RvZ01EdGNiaUFnZWkxcGJtUmxlRG9nTVRBd01EQXdNREE3WEc1OVhHNGlMQ0l2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnUVdSMlpYSjBhWE5sYldWdWRITmNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNWNiaTV3YkhseVgxOWhaSE1nZTF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lCcGJtaGxjbWwwTzF4dUlDQmliM1IwYjIwNklEQTdYRzRnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmlBZ2JHVm1kRG9nTUR0Y2JpQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQnlhV2RvZERvZ01EdGNiaUFnZEc5d09pQXdPMXh1SUNCNkxXbHVaR1Y0T2lBdE1Uc2dMeThnU0dsa1pTQnBkQ0JpZVNCa1pXWmhkV3gwWEc1Y2JpQWdMeThnVFdGclpTQnpkWEpsSUhSb1pTQnBibTVsY2lCamIyNTBZV2x1WlhJZ2FYTWdZbWxuSUdWdWIzVm5hQ0JtYjNJZ2RHaGxJR0ZrSUdOeVpXRjBhWFpsTGx4dUlDQStJR1JwZGl4Y2JpQWdQaUJrYVhZZ2FXWnlZVzFsSUh0Y2JpQWdJQ0JvWldsbmFIUTZJREV3TUNVN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQjlYRzVjYmlBZ0x5OGdWR2hsSUdOdmRXNTBaRzkzYmlCc1lXSmxiRnh1SUNBbU9qcGhablJsY2lCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pIQnNlWEl0WTI5c2IzSXRaM0poZVMwNU1EQTdYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTW5CNE8xeHVJQ0FnSUdKdmRIUnZiVG9nSkhCc2VYSXRZMjl1ZEhKdmJDMXpjR0ZqYVc1bk8xeHVJQ0FnSUdOdmJHOXlPaUFqWm1abU8xeHVJQ0FnSUdOdmJuUmxiblE2SUdGMGRISW9aR0YwWVMxaVlXUm5aUzEwWlhoMEtUdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXhjSGc3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNbkI0SURad2VEdGNiaUFnSUNCd2IybHVkR1Z5TFdWMlpXNTBjem9nYm05dVpUdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnY21sbmFIUTZJQ1J3YkhseUxXTnZiblJ5YjJ3dGMzQmhZMmx1Wnp0Y2JpQWdJQ0I2TFdsdVpHVjRPaUF6TzF4dUlDQjlYRzVjYmlBZ0pqcGxiWEIwZVRvNllXWjBaWElnZTF4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJSDFjYm4xY2JseHVMeThnUVdSMlpYSjBhWE5sYldWdWRDQmpkV1VuY3lCbWIzSWdkR2hsSUhCeWIyZHlaWE56SUdKaGNseHVMbkJzZVhKZlgyTjFaWE1nZTF4dUlDQmlZV05yWjNKdmRXNWtPaUJqZFhKeVpXNTBRMjlzYjNJN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0JvWldsbmFIUTZJQ1J3YkhseUxYSmhibWRsTFhSeVlXTnJMV2hsYVdkb2REdGNiaUFnYkdWbWREb2dNRHRjYmlBZ2IzQmhZMmwwZVRvZ01DNDRPMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSFJ2Y0RvZ05UQWxPMXh1SUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29MVFV3SlNrN1hHNGdJSGRwWkhSb09pQXpjSGc3WEc0Z0lIb3RhVzVrWlhnNklETTdJQzh2SUVKbGRIZGxaVzRnY0hKdlozSmxjM01nWVc1a0lIUm9kVzFpWEc1OVhHNGlMQ0l2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnUTI5c2IzSnpYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVYRzRrY0d4NWNpMWpiMnh2Y2kxdFlXbHVPaUIyWVhJb0xTMXdiSGx5TFdOdmJHOXlMVzFoYVc0c0lHaHpiQ2d4T1Roa1pXY2dNVEF3SlNBMU1DVXBLU0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMWFpwWkdWdkxXSmhZMnRuY205MWJtUTZJSFpoY2lndExYQnNlWEl0ZG1sa1pXOHRZbUZqYTJkeWIzVnVaQ3dnY21kaUtEQWdNQ0F3SUM4Z01UQXdKU2twSUNGa1pXWmhkV3gwTzF4dVhHNHZMeUJIY21GNWMyTmhiR1ZjYmlSd2JIbHlMV052Ykc5eUxXZHlZWGt0T1RBd09pQm9jMndvTWpFMlpHVm5JREUxSlNBeE5pVXBJQ0ZrWldaaGRXeDBPMXh1SkhCc2VYSXRZMjlzYjNJdFozSmhlUzA0TURBNklHaHpiQ2d5TVRaa1pXY2dNVFVsSURJMUpTa2dJV1JsWm1GMWJIUTdYRzRrY0d4NWNpMWpiMnh2Y2kxbmNtRjVMVGN3TURvZ2FITnNLREl4Tm1SbFp5QXhOU1VnTXpRbEtTQWhaR1ZtWVhWc2REdGNiaVJ3YkhseUxXTnZiRzl5TFdkeVlYa3ROakF3T2lCb2Myd29NakUyWkdWbklERTFKU0EwTXlVcElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdFkyOXNiM0l0WjNKaGVTMDFNREE2SUdoemJDZ3lNVFprWldjZ01UVWxJRFV5SlNrZ0lXUmxabUYxYkhRN1hHNGtjR3g1Y2kxamIyeHZjaTFuY21GNUxUUXdNRG9nYUhOc0tESXhObVJsWnlBeE5TVWdOakVsS1NBaFpHVm1ZWFZzZER0Y2JpUndiSGx5TFdOdmJHOXlMV2R5WVhrdE16QXdPaUJvYzJ3b01qRTJaR1ZuSURFMUpTQTNNQ1VwSUNGa1pXWmhkV3gwTzF4dUpIQnNlWEl0WTI5c2IzSXRaM0poZVMweU1EQTZJR2h6YkNneU1UWmtaV2NnTVRVbElEYzVKU2tnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTFqYjJ4dmNpMW5jbUY1TFRFd01Eb2dhSE5zS0RJeE5tUmxaeUF4TlNVZ09EZ2xLU0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMV052Ykc5eUxXZHlZWGt0TlRBNklHaHpiQ2d5TVRaa1pXY2dNVFVsSURrM0pTa2dJV1JsWm1GMWJIUTdYRzRpTENJdkx5QXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVMeThnVUhKbGRtbGxkeUJVYUhWdFltNWhhV3h6WEc0dkx5QXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVYRzVBYVcxd2IzSjBJQ2N1TDNObGRIUnBibWR6Snp0Y2JseHVMbkJzZVhKZlgzQnlaWFpwWlhjdGRHaDFiV0lnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtjR3g1Y2kxd2NtVjJhV1YzTFdKaFkydG5jbTkxYm1RN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklDUndiSGx5TFhCeVpYWnBaWGN0Y21Ga2FYVnpPMXh1SUNCaWIzUjBiMjA2SURFd01DVTdYRzRnSUdKdmVDMXphR0ZrYjNjNklDUndiSGx5TFhCeVpYWnBaWGN0YzJoaFpHOTNPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUJqWVd4aktDTjdKSEJzZVhJdGNISmxkbWxsZHkxd1lXUmthVzVuZlNBcUlESXBPMXh1SUNCdmNHRmphWFI1T2lBd08xeHVJQ0J3WVdSa2FXNW5PaUF6Y0hnN1hHNGdJSEJ2YVc1MFpYSXRaWFpsYm5Sek9pQnViMjVsTzF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbEtEQXNJREV3Y0hncElITmpZV3hsS0RBdU9DazdYRzRnSUhSeVlXNXpabTl5YlMxdmNtbG5hVzQ2SURVd0pTQXhNREFsTzF4dUlDQjBjbUZ1YzJsMGFXOXVPaUIwY21GdWMyWnZjbTBnTUM0eWN5QXdMakZ6SUdWaGMyVXNJRzl3WVdOcGRIa2dNQzR5Y3lBd0xqRnpJR1ZoYzJVN1hHNGdJSG90YVc1a1pYZzZJREk3WEc1Y2JpQWdKaTB0YVhNdGMyaHZkMjRnZTF4dUlDQWdJRzl3WVdOcGRIazZJREU3WEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTUN3Z01Da2djMk5oYkdVb01TazdYRzRnSUgxY2JseHVJQ0F2THlCVWFHVWdZbUZqYTJkeWIzVnVaQ0IwY21saGJtZHNaVnh1SUNBbU9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUdKdmNtUmxjaTFzWldaME9pQWtjR3g1Y2kxd2NtVjJhV1YzTFdGeWNtOTNMWE5wZW1VZ2MyOXNhV1FnZEhKaGJuTndZWEpsYm5RN1hHNGdJQ0FnWW05eVpHVnlMWEpwWjJoME9pQWtjR3g1Y2kxd2NtVjJhV1YzTFdGeWNtOTNMWE5wZW1VZ2MyOXNhV1FnZEhKaGJuTndZWEpsYm5RN1hHNGdJQ0FnWW05eVpHVnlMWFJ2Y0RvZ0pIQnNlWEl0Y0hKbGRtbGxkeTFoY25KdmR5MXphWHBsSUhOdmJHbGtJQ1J3YkhseUxYQnlaWFpwWlhjdFltRmphMmR5YjNWdVpEdGNiaUFnSUNCaWIzUjBiMjA2SUdOaGJHTW9JM3NrY0d4NWNpMXdjbVYyYVdWM0xXRnljbTkzTFhOcGVtVjlJQ29nTFRFcE8xeHVJQ0FnSUdOdmJuUmxiblE2SUNjbk8xeHVJQ0FnSUdobGFXZG9kRG9nTUR0Y2JpQWdJQ0JzWldaME9pQmpZV3hqS0RVd0pTQXJJSFpoY2lndExYQnlaWFpwWlhjdFlYSnliM2N0YjJabWMyVjBLU2s3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TlRBbEtUdGNiaUFnSUNCM2FXUjBhRG9nTUR0Y2JpQWdJQ0I2TFdsdVpHVjRPaUF5TzF4dUlDQjlYRzVjYmlBZ0psOWZhVzFoWjJVdFkyOXVkR0ZwYm1WeUlIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWtjR3g1Y2kxd2NtVjJhV1YzTFdsdFlXZGxMV0poWTJ0bmNtOTFibVE3WEc0Z0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ1kyRnNZeWdqZXlSd2JIbHlMWEJ5WlhacFpYY3RjbUZrYVhWemZTQXRJREZ3ZUNrN1hHNGdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ2VpMXBibVJsZURvZ01EdGNibHh1SUNBZ0lHbHRaeXhjYmlBZ0lDQW1PanBoWm5SbGNpQjdYRzRnSUNBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lDQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdkRzl3T2lBd08xeHVJQ0FnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0pqbzZZV1owWlhJZ2UxeHVJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nYVc1b1pYSnBkRHRjYmlBZ0lDQWdJR0p2ZUMxemFHRmtiM2M2SUdsdWMyVjBJREFnTUNBd0lERndlQ0J5WjJKaEtDTXdNREFzSURFMUpTazdYRzRnSUNBZ0lDQmpiMjUwWlc1ME9pQW5KenRjYmlBZ0lDQWdJSEJ2YVc1MFpYSXRaWFpsYm5Sek9pQnViMjVsTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2x0WnlCN1hHNGdJQ0FnSUNBdkx5Qk9iMjRnYzNCeWFYUmxJR2x0WVdkbGN5QmhjbVVnTVRBd0pTNGdVM0J5YVhSbGN5QjNhV3hzSUdoaGRtVWdkR2hsYVhJZ2MybDZaU0JoY0hCc2FXVmtJR0o1SUVwaGRtRlRZM0pwY0hSY2JpQWdJQ0FnSUcxaGVDMW9aV2xuYUhRNklHNXZibVU3WEc0Z0lDQWdJQ0J0WVhndGQybGtkR2c2SUc1dmJtVTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdMeThnVTJWbGF5QjBhVzFsSUhSbGVIUmNiaUFnSmw5ZmRHbHRaUzFqYjI1MFlXbHVaWElnZTF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNSd2JIbHlMWEJ5WlhacFpYY3RkR2x0WlMxamIyNTBZV2x1WlhJdFltRmphMmR5YjNWdVpEdGNiaUFnSUNCaWIzSmtaWEl0WW05MGRHOXRMV3hsWm5RdGNtRmthWFZ6T2lCallXeGpLQ043SkhCc2VYSXRjSEpsZG1sbGR5MXlZV1JwZFhOOUlDMGdNWEI0S1R0Y2JpQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dExYSnBaMmgwTFhKaFpHbDFjem9nWTJGc1l5Z2pleVJ3YkhseUxYQnlaWFpwWlhjdGNtRmthWFZ6ZlNBdElERndlQ2s3WEc0Z0lDQWdZbTkwZEc5dE9pQXdPMXh1SUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVNVHRjYmlBZ0lDQndZV1JrYVc1bk9pQWtjR3g1Y2kxd2NtVjJhV1YzTFhScGJXVXRZMjl1ZEdGcGJtVnlMWEJoWkdScGJtYzdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUhKcFoyaDBPaUF3TzF4dUlDQWdJSG90YVc1a1pYZzZJRE03WEc1Y2JpQWdJQ0J6Y0dGdUlIdGNiaUFnSUNBZ0lHTnZiRzl5T2lBa2NHeDVjaTF3Y21WMmFXVjNMWFJwYldVdFkyOXNiM0k3WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SUNSd2JIbHlMWEJ5WlhacFpYY3RkR2x0WlMxbWIyNTBMWE5wZW1VN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpNXdiSGx5WDE5d2NtVjJhV1YzTFhOamNuVmlZbWx1WnlCN1hHNGdJR0p2ZEhSdmJUb2dNRHRjYmlBZ1ptbHNkR1Z5T2lCaWJIVnlLREZ3ZUNrN1hHNGdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdiR1ZtZERvZ01EdGNiaUFnYldGeVoybHVPaUJoZFhSdk95QXZMeUJTWlhGMWFYSmxaQ0IzYUdWdUlIWnBaR1Z2SUdseklHUnBabVpsY21WdWRDQmthVzFsYm5OcGIyNXpJSFJ2SUdOdmJuUmhhVzVsY2lBb1pTNW5MaUJtZFd4c2MyTnlaV1Z1S1Z4dUlDQnZjR0ZqYVhSNU9pQXdPMXh1SUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4dUlDQndiMmx1ZEdWeUxXVjJaVzUwY3pvZ2JtOXVaVHRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0J5YVdkb2REb2dNRHRjYmlBZ2RHOXdPaUF3TzF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJ2Y0dGamFYUjVJREF1TTNNZ1pXRnpaVHRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzRnSUhvdGFXNWtaWGc2SURFN1hHNWNiaUFnSmkwdGFYTXRjMmh2ZDI0Z2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJSDFjYmx4dUlDQnBiV2NnZTF4dUlDQWdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lHMWhlQzFvWldsbmFIUTZJRzV2Ym1VN1hHNGdJQ0FnYldGNExYZHBaSFJvT2lCdWIyNWxPMXh1SUNBZ0lHOWlhbVZqZEMxbWFYUTZJR052Ym5SaGFXNDdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUhSdmNEb2dNRHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2ZWeHVmVnh1SWl3aUx5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaTh2SUZCeVpYWnBaWGNnVkdoMWJXSnVZV2xzYzF4dUx5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNibHh1SkhCc2VYSXRjSEpsZG1sbGR5MXdZV1JrYVc1bk9pQWtjR3g1Y2kxMGIyOXNkR2x3TFhCaFpHUnBibWNnSVdSbFptRjFiSFE3WEc0a2NHeDVjaTF3Y21WMmFXVjNMV0poWTJ0bmNtOTFibVE2SUNSd2JIbHlMWFJ2YjJ4MGFYQXRZbUZqYTJkeWIzVnVaQ0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMWEJ5WlhacFpYY3RjbUZrYVhWek9pQWtjR3g1Y2kxMGIyOXNkR2x3TFhKaFpHbDFjeUFoWkdWbVlYVnNkRHRjYmlSd2JIbHlMWEJ5WlhacFpYY3RjMmhoWkc5M09pQWtjR3g1Y2kxMGIyOXNkR2x3TFhOb1lXUnZkeUFoWkdWbVlYVnNkRHRjYmlSd2JIbHlMWEJ5WlhacFpYY3RZWEp5YjNjdGMybDZaVG9nSkhCc2VYSXRkRzl2YkhScGNDMWhjbkp2ZHkxemFYcGxJQ0ZrWldaaGRXeDBPMXh1SkhCc2VYSXRjSEpsZG1sbGR5MXBiV0ZuWlMxaVlXTnJaM0p2ZFc1a09pQWtjR3g1Y2kxamIyeHZjaTFuY21GNUxUSXdNQ0FoWkdWbVlYVnNkRHRjYmlSd2JIbHlMWEJ5WlhacFpYY3RkR2x0WlMxamIyNTBZV2x1WlhJdFltRmphMmR5YjNWdVpEb2dkbUZ5S0Z4dUlDQXRMWEJzZVhJdGRtbGtaVzh0WTI5dWRISnZiSE10WW1GamEyZHliM1Z1WkN4Y2JpQWdiR2x1WldGeUxXZHlZV1JwWlc1MEtISm5ZbUVvSXpBd01Dd2dNQ2tzSUhKblltRW9JekF3TUN3Z01DNDNOU2twWEc0cElDRmtaV1poZFd4ME8xeHVKSEJzZVhJdGNISmxkbWxsZHkxMGFXMWxMV052Ym5SaGFXNWxjaTF3WVdSa2FXNW5PaUF5TUhCNElEWndlQ0EyY0hnZ0lXUmxabUYxYkhRN1hHNGtjR3g1Y2kxd2NtVjJhV1YzTFhScGJXVXRZMjlzYjNJNklDTm1abVk3WEc0a2NHeDVjaTF3Y21WMmFXVjNMWFJwYldVdFptOXVkQzF6YVhwbE9pQWtjR3g1Y2kxbWIyNTBMWE5wZW1VdGRHbHRaU0FoWkdWbVlYVnNkRHRjYmlJc0lpOHZJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzR2THlCQmJtbHRZWFJwYjI0Z2RYUnBiSE5jYmk4dklDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNWNiaTV3YkhseUxTMXVieTEwY21GdWMybDBhVzl1SUh0Y2JpQWdkSEpoYm5OcGRHbHZiam9nYm05dVpTQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dUlpd2lMeThnTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmk4dklFaHBaR2x1WnlCamIyNTBaVzUwSUc1cFkyVnNlVnh1THk4Z0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JseHVMeThnVTJOeVpXVnVJSEpsWVdSbGNpQnZibXg1SUdWc1pXMWxiblJ6WEc0dWNHeDVjbDlmYzNJdGIyNXNlU0I3WEc0Z0lHTnNhWEE2SUhKbFkzUW9NWEI0TENBeGNIZ3NJREZ3ZUN3Z01YQjRLVHRjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JseHVJQ0F2THlBaGFXMXdiM0owWVc1MElHbHpJRzV2ZENCaGJIZGhlWE1nYm1WbFpHVmtYRzRnSUVCcFppQWtjR3g1Y2kxemNpMXZibXg1TFdsdGNHOXlkR0Z1ZENCN1hHNGdJQ0FnWW05eVpHVnlPaUF3SUNGcGJYQnZjblJoYm5RN1hHNGdJQ0FnYUdWcFoyaDBPaUF4Y0hnZ0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNCd1lXUmthVzVuT2lBd0lDRnBiWEJ2Y25SaGJuUTdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbElDRnBiWEJ2Y25SaGJuUTdYRzRnSUNBZ2QybGtkR2c2SURGd2VDQWhhVzF3YjNKMFlXNTBPMXh1SUNCOUlFQmxiSE5sSUh0Y2JpQWdJQ0JpYjNKa1pYSTZJREE3WEc0Z0lDQWdhR1ZwWjJoME9pQXhjSGc3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ2QybGtkR2c2SURGd2VEdGNiaUFnZlZ4dWZWeHVYRzR1Y0d4NWNpQmJhR2xrWkdWdVhTQjdYRzRnSUdScGMzQnNZWGs2SUc1dmJtVWdJV2x0Y0c5eWRHRnVkRHRjYm4xY2JpSXNJa0IxYzJVZ0p5NHVMeTR1TDNOamMzTXZYMkp2YjNSemRISmhjQzFsZUhSbGJtUmxaQzlwYm1Oc2RXUmxKeUJoY3lCc2FXZG9kRHRjY2x4dVFIVnpaU0FuTGk0dkxpNHZjMk56Y3k5ZlltOXZkSE4wY21Gd0xXVjRkR1Z1WkdWa0wybHVZMngxWkdVdFpHRnlheWNnWVhNZ1pHRnlhenRjY2x4dVFHbHRjRzl5ZENBbkxpNHZMaTR2YzJOemN5OWZZM1Z6ZEc5dExYWmhjbWxoWW14bGN5OXNhV0p6Snp0Y2NseHVYSEpjYmk4dklGWmhjbWxoWW14bGMxeHlYRzVBYVcxd2IzSjBJQ2N1TGk4dUxpOHVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZjR3g1Y2k5emNtTXZjMkZ6Y3k5elpYUjBhVzVuY3k5aWNtVmhhM0J2YVc1MGN5YzdYSEpjYmtCcGJYQnZjblFnSnk0dUx5NHVMeTR1THk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl3YkhseUwzTnlZeTl6WVhOekwzTmxkSFJwYm1kekwyTnZiRzl5Y3ljN1hISmNia0JwYlhCdmNuUWdKeTR1THk0dUx5NHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXdiSGx5TDNOeVl5OXpZWE56TDNObGRIUnBibWR6TDJOdmMyMWxkR2xqY3ljN1hISmNia0JwYlhCdmNuUWdKeTR1THk0dUx5NHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXdiSGx5TDNOeVl5OXpZWE56TDNObGRIUnBibWR6TDNSNWNHVW5PMXh5WEc1QWFXMXdiM0owSUNjdUxpOHVMaTh1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OXpaWFIwYVc1bmN5OWlZV1JuWlhNbk8xeHlYRzVBYVcxd2IzSjBJQ2N1TGk4dUxpOHVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZjR3g1Y2k5emNtTXZjMkZ6Y3k5elpYUjBhVzVuY3k5allYQjBhVzl1Y3ljN1hISmNia0JwYlhCdmNuUWdKeTR1THk0dUx5NHVMeTR1TDI1dlpHVmZiVzlrZFd4bGN5OXdiSGx5TDNOeVl5OXpZWE56TDNObGRIUnBibWR6TDJOdmJuUnliMnh6Snp0Y2NseHVRR2x0Y0c5eWRDQW5MaTR2TGk0dkxpNHZMaTR2Ym05a1pWOXRiMlIxYkdWekwzQnNlWEl2YzNKakwzTmhjM012YzJWMGRHbHVaM012YUdWc2NHVnljeWM3WEhKY2JrQnBiWEJ2Y25RZ0p5NHVMeTR1THk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5d2JIbHlMM055WXk5ellYTnpMM05sZEhScGJtZHpMMjFsYm5Wekp6dGNjbHh1UUdsdGNHOXlkQ0FuTGk0dkxpNHZMaTR2TGk0dmJtOWtaVjl0YjJSMWJHVnpMM0JzZVhJdmMzSmpMM05oYzNNdmMyVjBkR2x1WjNNdmNISnZaM0psYzNNbk8xeHlYRzVBYVcxd2IzSjBJQ2N1TGk4dUxpOHVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZjR3g1Y2k5emNtTXZjMkZ6Y3k5elpYUjBhVzVuY3k5emJHbGtaWEp6Snp0Y2NseHVRR2x0Y0c5eWRDQW5MaTR2TGk0dkxpNHZMaTR2Ym05a1pWOXRiMlIxYkdWekwzQnNlWEl2YzNKakwzTmhjM012YzJWMGRHbHVaM012ZEc5dmJIUnBjSE1uTzF4eVhHNUFhVzF3YjNKMElDY3VMaTh1TGk4dUxpOHVMaTl1YjJSbFgyMXZaSFZzWlhNdmNHeDVjaTl6Y21NdmMyRnpjeTlzYVdJdllXNXBiV0YwYVc5dUp6dGNjbHh1UUdsdGNHOXlkQ0FuTGk0dkxpNHZMaTR2TGk0dmJtOWtaVjl0YjJSMWJHVnpMM0JzZVhJdmMzSmpMM05oYzNNdmJHbGlMMloxYm1OMGFXOXVjeWM3WEhKY2JrQnBiWEJ2Y25RZ0p5NHVMeTR1THk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5d2JIbHlMM055WXk5ellYTnpMMnhwWWk5dGFYaHBibk1uTzF4eVhHNWNjbHh1THk4Z1EyOXRjRzl1Wlc1MGMxeHlYRzVBYVcxd2IzSjBJQ2N1TGk4dUxpOHVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZjR3g1Y2k5emNtTXZjMkZ6Y3k5aVlYTmxKenRjY2x4dVFHbHRjRzl5ZENBbkxpNHZMaTR2TGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDNCc2VYSXZjM0pqTDNOaGMzTXZZMjl0Y0c5dVpXNTBjeTlpWVdSblpYTW5PMXh5WEc1QWFXMXdiM0owSUNjdUxpOHVMaTh1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OWpiMjF3YjI1bGJuUnpMMk5oY0hScGIyNXpKenRjY2x4dVFHbHRjRzl5ZENBbkxpNHZMaTR2TGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDNCc2VYSXZjM0pqTDNOaGMzTXZZMjl0Y0c5dVpXNTBjeTlqYjI1MGNtOXNKenRjY2x4dVFHbHRjRzl5ZENBbkxpNHZMaTR2TGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDNCc2VYSXZjM0pqTDNOaGMzTXZZMjl0Y0c5dVpXNTBjeTlqYjI1MGNtOXNjeWM3WEhKY2JrQnBiWEJ2Y25RZ0p5NHVMeTR1THk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5d2JIbHlMM055WXk5ellYTnpMMk52YlhCdmJtVnVkSE12YldWdWRYTW5PMXh5WEc1QWFXMXdiM0owSUNjdUxpOHVMaTh1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OWpiMjF3YjI1bGJuUnpMM05zYVdSbGNuTW5PMXh5WEc1QWFXMXdiM0owSUNjdUxpOHVMaTh1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OWpiMjF3YjI1bGJuUnpMM0J2YzNSbGNpYzdYSEpjYmtCcGJYQnZjblFnSnk0dUx5NHVMeTR1THk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl3YkhseUwzTnlZeTl6WVhOekwyTnZiWEJ2Ym1WdWRITXZkR2x0WlhNbk8xeHlYRzVBYVcxd2IzSjBJQ2N1TGk4dUxpOHVMaTh1TGk5dWIyUmxYMjF2WkhWc1pYTXZjR3g1Y2k5emNtTXZjMkZ6Y3k5amIyMXdiMjVsYm5SekwzUnZiMngwYVhCekp6dGNjbHh1UUdsdGNHOXlkQ0FuTGk0dkxpNHZMaTR2TGk0dmJtOWtaVjl0YjJSMWJHVnpMM0JzZVhJdmMzSmpMM05oYzNNdlkyOXRjRzl1Wlc1MGN5OXdjbTluY21WemN5YzdYSEpjYmtCcGJYQnZjblFnSnk0dUx5NHVMeTR1THk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl3YkhseUwzTnlZeTl6WVhOekwyTnZiWEJ2Ym1WdWRITXZkbTlzZFcxbEp6dGNjbHh1UUdsdGNHOXlkQ0FuTGk0dkxpNHZMaTR2TGk0dmJtOWtaVjl0YjJSMWJHVnpMM0JzZVhJdmMzSmpMM05oYzNNdmRIbHdaWE12WVhWa2FXOG5PMXh5WEc1QWFXMXdiM0owSUNjdUxpOHVMaTh1TGk4dUxpOXViMlJsWDIxdlpIVnNaWE12Y0d4NWNpOXpjbU12YzJGemN5OTBlWEJsY3k5MmFXUmxieWM3WEhKY2JrQnBiWEJ2Y25RZ0p5NHVMeTR1THk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5d2JIbHlMM055WXk5ellYTnpMM04wWVhSbGN5OW1kV3hzYzJOeVpXVnVKenRjY2x4dVFHbHRjRzl5ZENBbkxpNHZMaTR2TGk0dkxpNHZibTlrWlY5dGIyUjFiR1Z6TDNCc2VYSXZjM0pqTDNOaGMzTXZjR3gxWjJsdWN5OWhaSE1uTzF4eVhHNUFhVzF3YjNKMElDY3VMaTh1TGk4dUxpOHVMaTl1YjJSbFgyMXZaSFZzWlhNdmNHeDVjaTl6Y21NdmMyRnpjeTl3YkhWbmFXNXpMM0J5WlhacFpYY3RkR2gxYldKdVlXbHNjeWM3WEhKY2JrQnBiWEJ2Y25RZ0p5NHVMeTR1THk0dUx5NHVMMjV2WkdWZmJXOWtkV3hsY3k5d2JIbHlMM055WXk5ellYTnpMM1YwYVd4ekwyRnVhVzFoZEdsdmJpYzdYSEpjYmtCcGJYQnZjblFnSnk0dUx5NHVMeTR1THk0dUwyNXZaR1ZmYlc5a2RXeGxjeTl3YkhseUwzTnlZeTl6WVhOekwzVjBhV3h6TDJocFpHUmxiaWM3WEhKY2JseHlYRzR1Y0d4NWNsOWZjSEp2WjNKbGMzTmZYMk52Ym5SaGFXNWxjaXhjY2x4dUxuQnNlWEpmWDNadmJIVnRaU0JwYm5CMWRGdDBlWEJsUFNkeVlXNW5aU2RkSUh0Y2NseHVJQ0JtYkdWNE9pQXdJREVnWVhWMGJ6dGNjbHh1ZlZ4eVhHNHVjR3g1Y2kwdFlYVmthVzhnTG5Cc2VYSmZYMk52Ym5SeWIyeHpJSHRjY2x4dUlDQndZV1JrYVc1bk9pQXdPMXh5WEc1OVhISmNibHh5WEc0dWNHeDVjbDlmYldWdWRWOWZZMjl1ZEdGcGJtVnlJSHRjY2x4dUlDQkFhVzVqYkhWa1pTQmhjSEF0Y25Sc0lIdGNjbHh1SUNBZ0lHUnBjbVZqZEdsdmJqb2djblJzTzF4eVhHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ2NtbG5hSFE3WEhKY2JseHlYRzRnSUNBZ0xuQnNlWEpmWDJOdmJuUnliMnd0TFdadmNuZGhjbVFnZTF4eVhHNGdJQ0FnSUNBbU9qcGhablJsY2lCN1hISmNiaUFnSUNBZ0lDQWdiR1ZtZERvZ05YQjRPMXh5WEc0Z0lDQWdJQ0FnSUhKcFoyaDBPaUJoZFhSdk8xeHlYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMXlhV2RvZEMxamIyeHZjam9nY21kaVlTZ2tjR3g1Y2kxdFpXNTFMV052Ykc5eUxDQXdMamdwTzF4eVhHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxc1pXWjBMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjY2x4dUlDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdKaTV3YkhseVgxOTBZV0l0Wm05amRYTTZPbUZtZEdWeUxGeHlYRzRnSUNBZ0lDQW1PbWh2ZG1WeU9qcGhablJsY2lCN1hISmNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxYSnBaMmgwTFdOdmJHOXlPaUJqZFhKeVpXNTBRMjlzYjNJN1hISmNiaUFnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F1Y0d4NWNsOWZiV1Z1ZFY5ZmRtRnNkV1VnZTF4eVhHNGdJQ0FnSUNCd1lXUmthVzVuTFd4bFpuUTZJREZ5WlcwN1hISmNiaUFnSUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SUdOaGJHTW9ZMkZzWXloMllYSW9MUzF3YkhseUxXTnZiblJ5YjJ3dGMzQmhZMmx1Wnl3Z01UQndlQ2tnS2lBd0xqY3BJQ29nTVM0MUtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F1Y0d4NWNsOWZZMjl1ZEhKdmJGdHliMnhsUFNkdFpXNTFhWFJsYlhKaFpHbHZKMTBnZTF4eVhHNGdJQ0FnSUNBdWNHeDVjbDlmYldWdWRWOWZkbUZzZFdVZ2UxeHlYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMXlhV2RvZERvZ1lYVjBienRjY2x4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFd4bFpuUTZJREE3WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0pqbzZZbVZtYjNKbElIdGNjbHh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRiR1ZtZERvZ0pIQnNlWEl0WTI5dWRISnZiQzF6Y0dGamFXNW5PMXh5WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNRHRjY2x4dUlDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdKam82WVdaMFpYSWdlMXh5WEc0Z0lDQWdJQ0FnSUhKcFoyaDBPaUF4TlhCNE8xeHlYRzRnSUNBZ0lDQWdJR3hsWm5RNklHRjFkRzg3WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JuMWNjbHh1WEhKY2JrQnBaaUFrWlc1aFlteGxMV3hwWjJoMExYTjBlV3hsSUh0Y2NseHVJQ0F1YkdsbmFIUXRjM1I1YkdVZ2UxeHlYRzRnSUNBZ0xuQnNlWEpmWDNSdmIyeDBhWEFnZTF4eVhHNGdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2diR2xuYUhRdUpHeHBibVV0YUdWcFoyaDBMWE50TzF4eVhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklHeHBaMmgwTGlSbWIyNTBMWE5wZW1VdGMyMDdYSEpjYmlBZ0lDQjlYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JseHlYRzVBYVdZZ0pHVnVZV0pzWlMxa1lYSnJMWE4wZVd4bElIdGNjbHh1SUNBdVpHRnlheTF6ZEhsc1pTQjdYSEpjYmlBZ0lDQXVjR3g1Y2w5ZmRHOXZiSFJwY0NCN1hISmNiaUFnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUJrWVhKckxpUnNhVzVsTFdobGFXZG9kQzF6YlR0Y2NseHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQmtZWEpyTGlSbWIyNTBMWE5wZW1VdGMyMDdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnTG5Cc2VYSXRMV0YxWkdsdklDNXdiSGx5WDE5amIyNTBjbTlzY3lCN1hISmNiaUFnSUNBZ0lHTnZiRzl5T2lCa1lYSnJMaVJpYjJSNUxXTnZiRzl5TzF4eVhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCa1lYSnJMaVJqWVhKa0xXSm5PMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM1d2JIbHlMUzFtZFd4c0xYVnBMbkJzZVhJdExXRjFaR2x2SUdsdWNIVjBXM1I1Y0dVOUozSmhibWRsSjEwZ2UxeHlYRzRnSUNBZ0lDQW1Pam90ZDJWaWEybDBMWE5zYVdSbGNpMXlkVzV1WVdKc1pTMTBjbUZqYXlCN1hISmNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2daR0Z5YXk0a1ozSmhlUzB4TURBN1hISmNiaUFnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNZNk9pMXRiM290Y21GdVoyVXRkSEpoWTJzZ2UxeHlYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJR1JoY21zdUpHZHlZWGt0TVRBd08xeHlYRzRnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBbU9qb3RiWE10ZEhKaFkyc2dlMXh5WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUdSaGNtc3VKR2R5WVhrdE1UQXdPMXh5WEc0Z0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0xuQnNlWEl0TFdGMVpHbHZJQzV3YkhseVgxOXdjbTluY21WemMxOWZZblZtWm1WeUlIdGNjbHh1SUNBZ0lDQWdZMjlzYjNJNklHUmhjbXN1SkdkeVlYa3RNakF3TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dWZWeHlYRzRpTENJa1pXNWhZbXhsTFd4cFoyaDBMWE4wZVd4bE9pQjBjblZsTzF4eVhHNGtaVzVoWW14bExXUmhjbXN0YzNSNWJHVTZJSFJ5ZFdVN1hISmNiaVJsYm1GaWJHVXRjblJzTFhOMWNIQnZjblE2SUhSeWRXVTdYSEpjYmx4eVhHNUFiV2w0YVc0Z1lYQndMV3gwY2lna2FHRnpMV05vYVd4a09pQjBjblZsS1NCN1hISmNiaUFnUUdsbUlDUmxibUZpYkdVdGNuUnNMWE4xY0hCdmNuUWdlMXh5WEc0Z0lDQWdRR2xtSUNSb1lYTXRZMmhwYkdRZ2UxeHlYRzRnSUNBZ0lDQm9kRzFzT201dmRDaGJaR2x5UFNkeWRHd25YU2tnSmlCN1hISmNiaUFnSUNBZ0lDQWdRR052Ym5SbGJuUTdYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDBnUUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0JvZEcxc09tNXZkQ2hiWkdseVBTZHlkR3duWFNrZ2UxeHlYRzRnSUNBZ0lDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdmU0JBWld4elpTQjdYSEpjYmlBZ0lDQkFZMjl1ZEdWdWREdGNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNia0J0YVhocGJpQmhjSEF0YkhSeUxYTjBlV3hsS0NrZ2UxeHlYRzRnSUVCcFppQWtaVzVoWW14bExYSjBiQzF6ZFhCd2IzSjBJSHRjY2x4dUlDQWdJQ1k2Ym05MEtGdGthWEk5SjNKMGJDZGRLU0I3WEhKY2JpQWdJQ0FnSUVCamIyNTBaVzUwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDBnUUdWc2MyVWdlMXh5WEc0Z0lDQWdRR052Ym5SbGJuUTdYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JseHlYRzVBYldsNGFXNGdZWEJ3TFhKMGJDZ2thR0Z6TFdOb2FXeGtPaUIwY25WbEtTQjdYSEpjYmlBZ1FHbG1JQ1JsYm1GaWJHVXRjblJzTFhOMWNIQnZjblFnZTF4eVhHNGdJQ0FnUUdsbUlDUm9ZWE10WTJocGJHUWdlMXh5WEc0Z0lDQWdJQ0JiWkdseVBTZHlkR3duWFNBbUlIdGNjbHh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlNCQVpXeHpaU0I3WEhKY2JpQWdJQ0FnSUZ0a2FYSTlKM0owYkNkZElIdGNjbHh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUdGd2NDMXlkR3d0YzNSNWJHVW9LU0I3WEhKY2JpQWdRR2xtSUNSbGJtRmliR1V0Y25Sc0xYTjFjSEJ2Y25RZ2UxeHlYRzRnSUNBZ0psdGthWEk5SjNKMGJDZGRJSHRjY2x4dUlDQWdJQ0FnUUdOdmJuUmxiblE3WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc1OVhISmNiaUlzSWk4dklGWmhjbWxoWW14bGMxeHlYRzR2TDF4eVhHNHZMeUJXWVhKcFlXSnNaWE1nYzJodmRXeGtJR1p2Ykd4dmR5QjBhR1VnWUNSamIyMXdiMjVsYm5RdGMzUmhkR1V0Y0hKdmNHVnlkSGt0YzJsNlpXQWdabTl5YlhWc1lTQm1iM0pjY2x4dUx5OGdZMjl1YzJsemRHVnVkQ0J1WVcxcGJtY3VJRVY0T2lBa2JtRjJMV3hwYm1zdFpHbHpZV0pzWldRdFkyOXNiM0lnWVc1a0lDUnRiMlJoYkMxamIyNTBaVzUwTFdKdmVDMXphR0ZrYjNjdGVITXVYSEpjYmk4dlhISmNiaTh2SUQ4Z1ZHOGdZMmhoYm1kbElIUm9aU0JzWVhsdmRYUWdZMjlzYjNKeklIbHZkU0JxZFhOMElHNWxaV1FnZEc4Z1kyaGhibWRsSUhSb1pTQWtZbXhoWTJzZ1lXNWtJQ1JpYjJSNUxXSm5JR052Ykc5eWN5QmhibVFnY21WemRDQW9ZbTl5WkdWeUxDQmpZWEprTENCbWIyNTBJR052Ykc5eWN5QmhibVFnWlhSakxpNHVLU0IzYVd4c0lHSmxJR0ZrYW5WemRDQmhkWFJ2YldGMGFXTmhiR3g1TGx4eVhHNHZMeUEvSUZWelpTQm9kSFJ3Y3pvdkwyNXZaV3hrWld4bllXUnZMbWRwZEdoMVlpNXBieTl6YUdGa2IzZHNiM0prTHlCMGJ5QnpaV3hsWTNRZ2NISnZjR1Z5SVBDZmtvUWdRMjlzYjNJZ2RHbHVkSE1nWVc1a0lITm9ZV1JsSUdadmNpQWtZbXhoWTJzZ1lXNWtJQ1JpYjJSNUxXSm5JR052Ykc5eUxseHlYRzR2THlBL0lHTnZiRzl5TFhaaGNtbGhZbXhsY3lCaGJtUWdkR2hsYldVdFkyOXNiM0l0ZG1GeWFXRmliR1Z6SUNoaWNtRnVaR2x1WnlCamIyeHZjbk1wSUdOaGJpQmlaU0JqYUc5dmMyVWdZWE1nY0dWeUlIbHZkWElnY0hKbFptVnlaVzVqWlhNdUlGZGxJSE4xWjJkbGMzUWdlVzkxSUhSdklIVnpaU0JvZEhSd2N6b3ZMMk52Ykc5eWN5NWxkbUV1WkdWemFXZHVMMXh5WEc0dkx5QWhJRXhwWjJoMElITjBlV3hsSUhWelpTQWtZbXhoWTJzZ2RHOGdaMlZ1WlhKaGRHVWdkR2hsSUNSbmNtRjVJSE5vWVdSbGN5NWNjbHh1THk4Z0tFTXBJRU4xYzNSdmJTQjJZWEpwWVdKc1pYTWdabTl5SUdWNGRHVnVaR1ZrSUdOdmJYQnZibVZ1ZEhNZ2IyWWdZbTl2ZEhOMGNtRndJRzl1YkhsY2NseHVYSEpjYmk4dklDb2dRMjlzYjNJZ2MzbHpkR1Z0WEhKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNjbHh1WEhKY2JpOHZJSE5qYzNNdFpHOWpjeTF6ZEdGeWRDQm5jbUY1TFdOdmJHOXlMWFpoY21saFlteGxjMXh5WEc0a2QyaHBkR1U2SUNObVptWWdJV1JsWm1GMWJIUTdYSEpjYmlSaWJHRmphem9nSXpRek5UazNNU0FoWkdWbVlYVnNkRHRjY2x4dUpHZHlZWGt0TWpVNklISm5ZbUVvSkdKc1lXTnJMQ0F3TGpBeU5Ta2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzRrWjNKaGVTMDFNRG9nY21kaVlTZ2tZbXhoWTJzc0lEQXVNRFVwSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpHZHlZWGt0TVRBd09pQnlaMkpoS0NSaWJHRmpheXdnTUM0eEtTQWhaR1ZtWVhWc2REdGNjbHh1SkdkeVlYa3RNakF3T2lCeVoySmhLQ1JpYkdGamF5d2dNQzR5S1NBaFpHVm1ZWFZzZER0Y2NseHVKR2R5WVhrdE16QXdPaUJ5WjJKaEtDUmliR0ZqYXl3Z01DNHpLU0FoWkdWbVlYVnNkRHRjY2x4dUpHZHlZWGt0TkRBd09pQnlaMkpoS0NSaWJHRmpheXdnTUM0MEtTQWhaR1ZtWVhWc2REdGNjbHh1SkdkeVlYa3ROVEF3T2lCeVoySmhLQ1JpYkdGamF5d2dNQzQxS1NBaFpHVm1ZWFZzZER0Y2NseHVKR2R5WVhrdE5qQXdPaUJ5WjJKaEtDUmliR0ZqYXl3Z01DNDJLU0FoWkdWbVlYVnNkRHRjY2x4dUpHZHlZWGt0TnpBd09pQnlaMkpoS0NSaWJHRmpheXdnTUM0M0tTQWhaR1ZtWVhWc2REdGNjbHh1SkdkeVlYa3RPREF3T2lCeVoySmhLQ1JpYkdGamF5d2dNQzQ0S1NBaFpHVm1ZWFZzZER0Y2NseHVKR2R5WVhrdE9UQXdPaUJ5WjJKaEtDUmliR0ZqYXl3Z01DNDVLU0FoWkdWbVlYVnNkRHRjY2x4dUx5OGdjMk56Y3kxa2IyTnpMV1Z1WkNCbmNtRjVMV052Ykc5eUxYWmhjbWxoWW14bGMxeHlYRzVjY2x4dUx5OGdjMk56Y3kxa2IyTnpMWE4wWVhKMElHZHlZWGt0WTI5c2IzSnpMVzFoY0Z4eVhHNGtaM0poZVhNNklDaGNjbHh1SUNBbk1qVW5PaUFrWjNKaGVTMHlOU3hjY2x4dUlDQW5OVEFuT2lBa1ozSmhlUzAxTUZ4eVhHNHBJQ0ZrWldaaGRXeDBPMXh5WEc0dkx5QnpZM056TFdSdlkzTXRaVzVrSUdkeVlYa3RZMjlzYjNKekxXMWhjRnh5WEc1Y2NseHVMeThnYzJOemN5MWtiMk56TFhOMFlYSjBJR052Ykc5eUxYWmhjbWxoWW14bGMxeHlYRzRrWW14MVpUb2dJekF3TjJKbVppQWhaR1ZtWVhWc2REdGNjbHh1SkdsdVpHbG5iem9nSXpZMk1UQm1NaUFoWkdWbVlYVnNkRHRjY2x4dUpIQjFjbkJzWlRvZ0l6WTVObU5tWmlBaFpHVm1ZWFZzZER0Y2NseHVKSEJwYm1zNklDTmxPRE5sT0dNZ0lXUmxabUYxYkhRN1hISmNiaVJ5WldRNklDTm1aak5sTVdRZ0lXUmxabUYxYkhRN1hISmNiaVJ2Y21GdVoyVTZJQ05tWkRkbE1UUWdJV1JsWm1GMWJIUTdYSEpjYmlSNVpXeHNiM2M2SUNObVptRmlNREFnSVdSbFptRjFiSFE3WEhKY2JpUm5jbVZsYmpvZ0l6Y3haR1F6TnlBaFpHVm1ZWFZzZER0Y2NseHVKSFJsWVd3NklDTXlNR001T1RjZ0lXUmxabUYxYkhRN1hISmNiaVJqZVdGdU9pQWpNRE5qTTJWaklDRmtaV1poZFd4ME8xeHlYRzR2THlCelkzTnpMV1J2WTNNdFpXNWtJR052Ykc5eUxYWmhjbWxoWW14bGMxeHlYRzVjY2x4dUx5OGdjMk56Y3kxa2IyTnpMWE4wWVhKMElIUm9aVzFsTFdOdmJHOXlMWFpoY21saFlteGxjMXh5WEc0a2NISnBiV0Z5ZVRvZ0pIQjFjbkJzWlNBaFpHVm1ZWFZzZER0Y2NseHVKSE5sWTI5dVpHRnllVG9nSXpnMU9USmhNeUFoWkdWbVlYVnNkRHRjY2x4dUpITjFZMk5sYzNNNklDUm5jbVZsYmlBaFpHVm1ZWFZzZER0Y2NseHVKR2x1Wm04NklDUmplV0Z1SUNGa1pXWmhkV3gwTzF4eVhHNGtkMkZ5Ym1sdVp6b2dKSGxsYkd4dmR5QWhaR1ZtWVhWc2REdGNjbHh1SkdSaGJtZGxjam9nSkhKbFpDQWhaR1ZtWVhWc2REdGNjbHh1Skd4cFoyaDBPaUFqWm1ObVpHWmtJQ0ZrWldaaGRXeDBPMXh5WEc0a1pHRnlhem9nSXpJek16UTBOaUFoWkdWbVlYVnNkRHRjY2x4dUpHZHlZWGs2SUNSbmNtRjVMVEV3TUNBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JpOHZJSE5qYzNNdFpHOWpjeTFsYm1RZ2RHaGxiV1V0WTI5c2IzSXRkbUZ5YVdGaWJHVnpYSEpjYmx4eVhHNHZMeUJ6WTNOekxXUnZZM010YzNSaGNuUWdkR2hsYldVdFkyOXNiM0p6TFcxaGNGeHlYRzRrZEdobGJXVXRZMjlzYjNKek9pQW9YSEpjYmlBZ0ozQnlhVzFoY25rbk9pQWtjSEpwYldGeWVTeGNjbHh1SUNBbmMyVmpiMjVrWVhKNUp6b2dKSE5sWTI5dVpHRnllU3hjY2x4dUlDQW5jM1ZqWTJWemN5YzZJQ1J6ZFdOalpYTnpMRnh5WEc0Z0lDZHBibVp2SnpvZ0pHbHVabThzWEhKY2JpQWdKM2RoY201cGJtY25PaUFrZDJGeWJtbHVaeXhjY2x4dUlDQW5aR0Z1WjJWeUp6b2dKR1JoYm1kbGNpeGNjbHh1SUNBbmJHbG5hSFFuT2lBa2JHbG5hSFFzWEhKY2JpQWdKMlJoY21zbk9pQWtaR0Z5YXl4Y2NseHVJQ0FuWjNKaGVTYzZJQ1JuY21GNVhISmNiaWtnSVdSbFptRjFiSFE3WEhKY2JpOHZJSE5qYzNNdFpHOWpjeTFsYm1RZ2RHaGxiV1V0WTI5c2IzSnpMVzFoY0Z4eVhHNWNjbHh1SkdOdmJHOXlMWE5qYUdWdFpUb2dKMnhwWjJoMEp5QWhaR1ZtWVhWc2REc2dMeThnS0VNcFhISmNiaTh2SUZSb1pTQmpiMjUwY21GemRDQnlZWFJwYnlCMGJ5QnlaV0ZqYUNCaFoyRnBibk4wSUhkb2FYUmxMQ0IwYnlCa1pYUmxjbTFwYm1VZ2FXWWdZMjlzYjNJZ1kyaGhibWRsY3lCbWNtOXRJRndpYkdsbmFIUmNJaUIwYnlCY0ltUmhjbXRjSWk0Z1FXTmpaWEIwWVdKc1pTQjJZV3gxWlhNZ1ptOXlJRmREUVVjZ01pNHdJR0Z5WlNBekxDQTBMalVnWVc1a0lEY3VYSEpjYmk4dklGTmxaU0JvZEhSd2N6b3ZMM2QzZHk1M015NXZjbWN2VkZJdlYwTkJSekl3THlOMmFYTjFZV3d0WVhWa2FXOHRZMjl1ZEhKaGMzUXRZMjl1ZEhKaGMzUmNjbHh1SkcxcGJpMWpiMjUwY21GemRDMXlZWFJwYnpvZ01TNDNJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVMeThnS2lCUGNIUnBiMjV6WEhKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNjbHh1WEhKY2JpUmxibUZpYkdVdGJtVm5ZWFJwZG1VdGJXRnlaMmx1Y3pvZ2RISjFaU0FoWkdWbVlYVnNkRHRjY2x4dUpHVnVZV0pzWlMxMllXeHBaR0YwYVc5dUxXbGpiMjV6T2lCbVlXeHpaU0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaTh2SUZCeVpXWnBlQ0JtYjNJZ09uSnZiM1FnUTFOVElIWmhjbWxoWW14bGMxeHlYRzRrZG1GeWFXRmliR1V0Y0hKbFptbDRPaUJpY3kwZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0dkx5QXFJRk53WVdOcGJtZGNjbHh1THk4Z0tpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2x4eVhHNWNjbHh1SkhOd1lXTmxjam9nTVhKbGJTQWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpUnphWHBsY3kxd2VEb2dLRnh5WEc0Z0lIQjRMVEl3T2lBeU1IQjRMRnh5WEc0Z0lIQjRMVE13T2lBek1IQjRMRnh5WEc0Z0lIQjRMVFF3T2lBME1IQjRMRnh5WEc0Z0lIQjRMVFV3T2lBMU1IQjRMRnh5WEc0Z0lIQjRMVGMxT2lBM05YQjRMRnh5WEc0Z0lIQjRMVEV3TURvZ01UQXdjSGdzWEhKY2JpQWdjSGd0TVRVd09pQXhOVEJ3ZUN4Y2NseHVJQ0J3ZUMweU1EQTZJREl3TUhCNExGeHlYRzRnSUhCNExUSTFNRG9nTWpVd2NIZ3NYSEpjYmlBZ2NIZ3RNekF3T2lBek1EQndlQ3hjY2x4dUlDQndlQzB6TlRBNklETTFNSEI0TEZ4eVhHNGdJSEI0TFRRd01Eb2dOREF3Y0hnc1hISmNiaUFnY0hndE5UQXdPaUExTURCd2VDeGNjbHh1SUNCd2VDMDJNREE2SURZd01IQjRMRnh5WEc0Z0lIQjRMVGN3TURvZ056QXdjSGdzWEhKY2JpQWdjSGd0T0RBd09pQTRNREJ3ZUN4Y2NseHVJQ0JoZFhSdk9pQmhkWFJ2WEhKY2Jpa2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzVjY2x4dUpISm5ZbUV0ZEc4dGFHVjRMV0puT2lBalptWm1JQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1SkhKblltRXRkRzh0YUdWNExXSm5MV2x1ZG1WeWRHVmtPaUFqTURBd0lDRmtaV1poZFd4ME95QXZMeUFvUXlsY2NseHVYSEpjYmk4dklDb2dRbTlrZVZ4eVhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYSEpjYmx4eVhHNGtZbTlrZVMxaVp6b2dJMlkxWmpWbU9TQWhaR1ZtWVhWc2REdGNjbHh1SkdKdlpIa3RZMjlzYjNJNklISm5ZbUV0ZEc4dGFHVjRLQ1JuY21GNUxUZ3dNQ3dnSkhKblltRXRkRzh0YUdWNExXSm5LU0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaTh2SUNvZ1RHbHVhM05jY2x4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHlYRzVjY2x4dUpHeHBibXN0WTI5c2IzSTZJQ1J3Y21sdFlYSjVJQ0ZrWldaaGRXeDBPMXh5WEc0a2JHbHVheTFrWldOdmNtRjBhVzl1T2lCdWIyNWxJQ0ZrWldaaGRXeDBPMXh5WEc0a2JHbHVheTF6YUdGa1pTMXdaWEpqWlc1MFlXZGxPaUF4TUNVZ0lXUmxabUYxYkhRN1hISmNiaVJzYVc1ckxXaHZkbVZ5TFdOdmJHOXlPaUJ6YUdsbWRDMWpiMnh2Y2lna2JHbHVheTFqYjJ4dmNpd2dKR3hwYm1zdGMyaGhaR1V0Y0dWeVkyVnVkR0ZuWlNrZ0lXUmxabUYxYkhRN1hISmNiaVJzYVc1ckxXaHZkbVZ5TFdSbFkyOXlZWFJwYjI0NklHNTFiR3dnSVdSbFptRjFiSFE3WEhKY2JseHlYRzR2THlBcUlFZHlhV1JjY2x4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHlYRzVjY2x4dUx5OGdSM0pwWkNCamIyNTBZV2x1WlhKelhISmNibHh5WEc0dkx5QnpZM056TFdSdlkzTXRjM1JoY25RZ1kyOXVkR0ZwYm1WeUxXMWhlQzEzYVdSMGFITmNjbHh1SkdOdmJuUmhhVzVsY2kxdFlYZ3RkMmxrZEdoek9pQW9YSEpjYmlBZ2MyMDZJRFUwTUhCNExGeHlYRzRnSUcxa09pQTNNakJ3ZUN4Y2NseHVJQ0JzWnpvZ09UWXdjSGdzWEhKY2JpQWdlR3c2SURFeE5EQndlQ3hjY2x4dUlDQjRlR3c2SURFME5EQndlQ0F2THlCRGRYTjBiMjBnZUhoc0lITnBlbVZjY2x4dUtTQWhaR1ZtWVhWc2REdGNjbHh1THk4Z2MyTnpjeTFrYjJOekxXVnVaQ0JqYjI1MFlXbHVaWEl0YldGNExYZHBaSFJvYzF4eVhHNWNjbHh1SkdkeWFXUXRaM1YwZEdWeUxYZHBaSFJvT2lBeExqWXlOWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKR052Ym5SaGFXNWxjaTF3WVdSa2FXNW5MWGc2SURFdU5qSTFjbVZ0SUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpHTnZiblJoYVc1bGNpMXdZV1JrYVc1bkxYZ3RjMjA2SURGeVpXMGdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzRrWTI5dWRHRnBibVZ5TFhCaFpHUnBibWN0ZVRvZ01TNDJNalZ5WlcwZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNWNjbHh1THk4Z0tpQkRiMjF3YjI1bGJuUnpYSEpjYmk4dklDb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lwY2NseHVYSEpjYmk4dklITmpjM010Wkc5amN5MXpkR0Z5ZENCaWIzSmtaWEl0ZG1GeWFXRmliR1Z6WEhKY2JpUmliM0prWlhJdGQybGtkR2c2SURGd2VDQWhaR1ZtWVhWc2REdGNjbHh1SkdKdmNtUmxjaTFqYjJ4dmNqb2djbWRpWVMxMGJ5MW9aWGdvSkdkeVlYa3RNakF3TENBa2NtZGlZUzEwYnkxb1pYZ3RZbWNwSUNGa1pXWmhkV3gwTzF4eVhHNGtZbTl5WkdWeUxXbHVibVZ5TFdOdmJHOXlPaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzB5TURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNHZMeUJ6WTNOekxXUnZZM010Wlc1a0lHSnZjbVJsY2kxMllYSnBZV0pzWlhOY2NseHVYSEpjYmk4dklITmpjM010Wkc5amN5MXpkR0Z5ZENCaWIzSmtaWEl0Y21Ga2FYVnpMWFpoY21saFlteGxjMXh5WEc0a1ltOXlaR1Z5TFhKaFpHbDFjem9nTUM0ek56VnlaVzBnSVdSbFptRjFiSFE3WEhKY2JpUmliM0prWlhJdGNtRmthWFZ6TFhoc09pQXdMall5TlhKbGJTQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhISmNiaVJpYjNKa1pYSXRjbUZrYVhWekxXeG5PaUF3TGpWeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSaWIzSmtaWEl0Y21Ga2FYVnpMWE50T2lBd0xqSTFjbVZ0SUNGa1pXWmhkV3gwTzF4eVhHNGtZbTl5WkdWeUxYSmhaR2wxY3kxNGN6b2dNQzR4TWpWeVpXMGdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzVjY2x4dUpHSnZjbVJsY2kxemFHRmtaUzFoYlc5MWJuUTZJREkxSlNBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JpUmliM0prWlhJdGRHbHVkQzFoYlc5MWJuUTZJRFl3SlNBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JpOHZJSE5qYzNNdFpHOWpjeTFsYm1RZ1ltOXlaR1Z5TFhKaFpHbDFjeTEyWVhKcFlXSnNaWE5jY2x4dVhISmNiaTh2SUhOamMzTXRaRzlqY3kxemRHRnlkQ0JpYjNndGMyaGhaRzkzTFhaaGNtbGhZbXhsYzF4eVhHNGtZbTk0TFhOb1lXUnZkem9nTUNBd0xqSTFjbVZ0SURGeVpXMGdjbWRpWVNoeVoySmhMWFJ2TFdobGVDZ2taM0poZVMwMU1EQXNJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a3NJREF1TkRVcElDRmtaV1poZFd4ME8xeHlYRzRrWW05NExYTm9ZV1J2ZHkxemJUb2dNQ0F3TGpFeU5YSmxiU0F3TGpJMWNtVnRJSEpuWW1Fb2NtZGlZUzEwYnkxb1pYZ29KR2R5WVhrdE5UQXdMQ0FrY21kaVlTMTBieTFvWlhndFltY3BMQ0F3TGpRcElDRmtaV1poZFd4ME8xeHlYRzRrWW05NExYTm9ZV1J2ZHkxc1p6b2dNQ0F3TGpZeU5YSmxiU0F4TGpJMWNtVnRJSEpuWW1Fb2NtZGlZUzEwYnkxb1pYZ29KR2R5WVhrdE5UQXdMQ0FrY21kaVlTMTBieTFvWlhndFltY3BMQ0F3TGpVcElDRmtaV1poZFd4ME8xeHlYRzR2THlCelkzTnpMV1J2WTNNdFpXNWtJR0p2ZUMxemFHRmtiM2N0ZG1GeWFXRmliR1Z6WEhKY2JseHlYRzRrWTI5dGNHOXVaVzUwTFdGamRHbDJaUzFqYjJ4dmNqb2dKSGRvYVhSbElDRmtaV1poZFd4ME8xeHlYRzRrWTI5dGNHOXVaVzUwTFdGamRHbDJaUzFpWnpvZ2NtZGlZU2drY0hKcGJXRnllU3dnTUM0d09Da2dJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtZMjl0Y0c5dVpXNTBMV3hwYm1VdGFHVnBaMmgwT2lBeExqVTBJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1SkdOdmJYQnZibVZ1ZEMxbWIyTjFjeTF6YUdGa2IzY3RkMmxrZEdnNklESndlQ0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmx4eVhHNGtabXh2WVhScGJtY3RZMjl0Y0c5dVpXNTBMV0p2Y21SbGNpMWpiMnh2Y2pvZ2RISmhibk53WVhKbGJuUWdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzRrWm14dllYUnBibWN0WTI5dGNHOXVaVzUwTFhOb1lXUnZkem9nSkdKdmVDMXphR0ZrYjNjZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNWNjbHh1SkdoeUxXTnZiRzl5T2lBa1ltOXlaR1Z5TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh5WEc0a2FISXRiM0JoWTJsMGVUb2dNU0FoWkdWbVlYVnNkRHRjY2x4dUpHSnZjbVJsY21Wa0xYSnZkeTFpYjNKa1pYSXRZMjlzYjNJNklDUm9jaTFqYjJ4dmNpQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhISmNibHh5WEc0dkx5QnpZM056TFdSdlkzTXRjM1JoY25RZ1kyRnlaWFF0ZG1GeWFXRmliR1Z6WEhKY2JpUmpZWEpsZEMxM2FXUjBhRG9nTUM0ME1tVnRJQ0ZrWldaaGRXeDBPMXh5WEc0a1kyRnlaWFF0ZG1WeWRHbGpZV3d0WVd4cFoyNDZJRzFwWkdSc1pTQWhaR1ZtWVhWc2REdGNjbHh1SkdOaGNtVjBMWE53WVdOcGJtYzZJREF1TldWdElDRmtaV1poZFd4ME8xeHlYRzR2THlCelkzTnpMV1J2WTNNdFpXNWtJR05oY21WMExYWmhjbWxoWW14bGMxeHlYRzVjY2x4dUx5OGdLaUJVZVhCdlozSmhjR2g1WEhKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNjbHh1WEhKY2JpOHZJSE5qYzNNdFpHOWpjeTF6ZEdGeWRDQm1iMjUwTFhaaGNtbGhZbXhsYzF4eVhHNGtabTl1ZEMxbVlXMXBiSGt0YzJGdWN5MXpaWEpwWmpvZ0oxQjFZbXhwWXlCVFlXNXpKeXdnTFdGd2NHeGxMWE41YzNSbGJTd2dRbXhwYm10TllXTlRlWE4wWlcxR2IyNTBMQ0FuVTJWbmIyVWdWVWtuTENBblQzaDVaMlZ1Snl3Z0oxVmlkVzUwZFNjc0lDZERZVzUwWVhKbGJHd25MRnh5WEc0Z0lDZEdhWEpoSUZOaGJuTW5MQ0FuUkhKdmFXUWdVMkZ1Y3ljc0lDZElaV3gyWlhScFkyRWdUbVYxWlNjc0lITmhibk10YzJWeWFXWWdJV1JsWm1GMWJIUTdYSEpjYmlSbWIyNTBMV1poYldsc2VTMXpaWEpwWmpvZ1IyVnZjbWRwWVN3Z0oxUnBiV1Z6SUU1bGR5QlNiMjFoYmljc0lITmxjbWxtSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpHWnZiblF0Wm1GdGFXeDVMVzF2Ym05emNHRmpaVG9nSjFOR1RXOXVieTFTWldkMWJHRnlKeXdnVFdWdWJHOHNJRTF2Ym1GamJ5d2dRMjl1YzI5c1lYTXNJQ2RNYVdKbGNtRjBhVzl1SUUxdmJtOG5MQ0FuUTI5MWNtbGxjaUJPWlhjbkxDQnRiMjV2YzNCaFkyVWdJV1JsWm1GMWJIUTdYSEpjYmk4dklITjBlV3hsYkdsdWRDMWxibUZpYkdVZ2RtRnNkV1V0YTJWNWQyOXlaQzFqWVhObFhISmNiaVJtYjI1MExXWmhiV2xzZVMxaVlYTmxPaUIyWVhJb0xTMGpleVIyWVhKcFlXSnNaUzF3Y21WbWFYaDlabTl1ZEMxellXNXpMWE5sY21sbUtTQWhaR1ZtWVhWc2REdGNjbHh1SkdadmJuUXRabUZ0YVd4NUxXTnZaR1U2SUhaaGNpZ3RMU043SkhaaGNtbGhZbXhsTFhCeVpXWnBlSDFtYjI1MExXMXZibTl6Y0dGalpTa2dJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNHZMeUFrWm05dWRDMXphWHBsTFhKdmIzUWdaV1ptWldOMGN5QjBhR1VnZG1Gc2RXVWdiMllnWUhKbGJXQXNJSGRvYVdOb0lHbHpJSFZ6WldRZ1ptOXlJR0Z6SUhkbGJHd2dabTl1ZENCemFYcGxjeXdnY0dGa1pHbHVaM01nWVc1a0lHMWhjbWRwYm5OY2NseHVMeThnSkdadmJuUXRjMmw2WlMxaVlYTmxJR1ZtWm1WamRITWdkR2hsSUdadmJuUWdjMmw2WlNCdlppQjBhR1VnWW05a2VTQjBaWGgwWEhKY2JpUm1iMjUwTFhOcGVtVXRjbTl2ZERvZ01UWndlQ0FoWkdWbVlYVnNkRHRjY2x4dUpHWnZiblF0YzJsNlpTMWlZWE5sT2lBd0xqa3pOelZ5WlcwZ0lXUmxabUYxYkhRN0lDOHZJRUZ6YzNWdFpYTWdkR2hsSUdKeWIzZHpaWElnWkdWbVlYVnNkQ3dnZEhsd2FXTmhiR3g1SUdBeE5YQjRMekUyY0hoZ1hISmNiaVJtYjI1MExYTnBlbVV0ZUd3NklERXVNalZ5WlcwZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNGtabTl1ZEMxemFYcGxMV3huT2lBeGNtVnRJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXVkQzF6YVhwbExYTnRPaUF3TGpjMWNtVnRJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXVkQzF6YVhwbExYaHpPaUFrWm05dWRDMXphWHBsTFhOdElDRmtaV1poZFd4ME95QXZMeUFvUXlsY2NseHVYSEpjYmlSbWIyNTBMWGRsYVdkb2RDMXpaVzFwWW05c1pEb2dOakF3SUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpHWnZiblF0ZDJWcFoyaDBMV0p2YkdSbGNqb2dPVEF3SUNGa1pXWmhkV3gwTzF4eVhHNGtabTl1ZEMxM1pXbG5hSFF0YkdsbmFIUmxjam9nTVRBd0lDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpHeHBibVV0YUdWcFoyaDBMV0poYzJVNklERXVOVE1nSVdSbFptRjFiSFE3WEhKY2JpUnNhVzVsTFdobGFXZG9kQzE0YkRvZ01TNDFJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1Skd4cGJtVXRhR1ZwWjJoMExXeG5PaUF4TGpVZ0lXUmxabUYxYkhRN1hISmNiaVJzYVc1bExXaGxhV2RvZEMxemJUb2dNUzQxSUNGa1pXWmhkV3gwTzF4eVhHNGtiR2x1WlMxb1pXbG5hSFF0ZUhNNklERXVOU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmx4eVhHNGthREV0Wm05dWRDMXphWHBsT2lBeUxqTTNOWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKR2d5TFdadmJuUXRjMmw2WlRvZ01uSmxiU0FoWkdWbVlYVnNkRHRjY2x4dUpHZ3pMV1p2Ym5RdGMybDZaVG9nTVM0Mk1qVnlaVzBnSVdSbFptRjFiSFE3WEhKY2JpUm9OQzFtYjI1MExYTnBlbVU2SURFdU16YzFjbVZ0SUNGa1pXWmhkV3gwTzF4eVhHNGthRFV0Wm05dWRDMXphWHBsT2lBeExqRXlOWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKR2cyTFdadmJuUXRjMmw2WlRvZ0pHWnZiblF0YzJsNlpTMWlZWE5sSUNGa1pXWmhkV3gwTzF4eVhHNHZMeUJ6WTNOekxXUnZZM010Wlc1a0lHWnZiblF0ZG1GeWFXRmliR1Z6WEhKY2JseHlYRzR2THlCelkzTnpMV1J2WTNNdGMzUmhjblFnYUdWaFpHbHVaM010ZG1GeWFXRmliR1Z6WEhKY2JpUm9aV0ZrYVc1bmN5MXRZWEpuYVc0dFltOTBkRzl0T2lBa2MzQmhZMlZ5SUNGa1pXWmhkV3gwTzF4eVhHNGthR1ZoWkdsdVozTXRabTl1ZEMxM1pXbG5hSFE2SURVd01DQWhaR1ZtWVhWc2REdGNjbHh1SkdobFlXUnBibWR6TFd4cGJtVXRhR1ZwWjJoME9pQXhMakVnSVdSbFptRjFiSFE3WEhKY2JpUm9aV0ZrYVc1bmN5MWpiMnh2Y2pvZ2NtZGlZUzEwYnkxb1pYZ29KR2R5WVhrdE9UQXdMQ0FrY21kaVlTMTBieTFvWlhndFltY3BJQ0ZrWldaaGRXeDBPMXh5WEc0dkx5QnpZM056TFdSdlkzTXRaVzVrSUdobFlXUnBibWR6TFhaaGNtbGhZbXhsYzF4eVhHNWNjbHh1THk4Z2MyTnpjeTFrYjJOekxYTjBZWEowSUdScGMzQnNZWGt0YUdWaFpHbHVaM05jY2x4dUpHUnBjM0JzWVhrdFptOXVkQzF6YVhwbGN6b2dLRnh5WEc0Z0lERTZJRFJ5Wlcwc1hISmNiaUFnTWpvZ015NDFjbVZ0TEZ4eVhHNGdJRE02SUROeVpXMHNYSEpjYmlBZ05Eb2dNaTQxY21WdExGeHlYRzRnSURVNklESnlaVzBzWEhKY2JpQWdOam9nTVM0MWNtVnRYSEpjYmlrZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a1pHbHpjR3hoZVMxbWIyNTBMWGRsYVdkb2REb2dOVEF3SUNGa1pXWmhkV3gwTzF4eVhHNHZMeUJ6WTNOekxXUnZZM010Wlc1a0lHUnBjM0JzWVhrdGFHVmhaR2x1WjNOY2NseHVYSEpjYmk4dklITmpjM010Wkc5amN5MXpkR0Z5ZENCMGVYQmxMWFpoY21saFlteGxjMXh5WEc0a2JHVmhaQzFtYjI1MExYTnBlbVU2SUNSbWIyNTBMWE5wZW1VdFltRnpaU0FxSURFdU1USTFJQ0ZrWldaaGRXeDBPMXh5WEc0a1lteHZZMnR4ZFc5MFpTMW1iMjUwTFhOcGVtVTZJQ1JtYjI1MExYTnBlbVV0WW1GelpTQXFJREV1TVRJMUlDRmtaV1poZFd4ME8xeHlYRzRrYkdWaFpDMW1iMjUwTFhkbGFXZG9kRG9nTkRBd0lDRmtaV1poZFd4ME8xeHlYRzR2THlCelkzTnpMV1J2WTNNdFpXNWtJSFI1Y0dVdGRtRnlhV0ZpYkdWelhISmNibHh5WEc0dkx5QnpZM056TFdSdlkzTXRjM1JoY25RZ2RIbHdaUzEyWVhKcFlXSnNaWE5jY2x4dUpIUnBibmt0Wm05dWRDMXphWHBsT2lBM01DVWdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzRrYzIxaGJHd3RabTl1ZEMxemFYcGxPaUE0TlNVZ0lXUmxabUYxYkhRN1hISmNiaVJpYVdjdFptOXVkQzF6YVhwbE9pQXhNVElsSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpHeGhjbWRsTFdadmJuUXRjMmw2WlRvZ01UVXdKU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmlSNGJHRnlaMlV0Wm05dWRDMXphWHBsT2lBeE56QWxJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1WEhKY2JpUjBaWGgwTFcxMWRHVmtPaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzAxTURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN1hISmNiaVIwWlhoMExXMTFkR1ZrTFdodmRtVnlPaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzAyTURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNWNjbHh1SkhSbGVIUXRiR2xuYUhRNklISm5ZbUV0ZEc4dGFHVjRLQ1JuY21GNUxUUXdNQ3dnSkhKblltRXRkRzh0YUdWNExXSm5LU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmlSMFpYaDBMV3hwWjJoMFpYSTZJSEpuWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVE13TUN3Z0pISm5ZbUV0ZEc4dGFHVjRMV0puS1NBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JpUjBaWGgwTFd4cFoyaDBaWE4wT2lCeVoySmhMWFJ2TFdobGVDZ2taM0poZVMweU1EQXNJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzR2THlCelkzTnpMV1J2WTNNdFpXNWtJSFI1Y0dVdGRtRnlhV0ZpYkdWelhISmNibHh5WEc0dkx5QXFJRm90YVc1a1pYZ2diV0Z6ZEdWeUlHeHBjM1JjY2x4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHlYRzVjY2x4dUpIcHBibVJsZUMxdFpXNTFMV1pwZUdWa09pQXhNRGd3SUNGa1pXWmhkV3gwTzF4eVhHNGtlbWx1WkdWNExXMXZaR0ZzT2lBeE1Ea3dJQ0ZrWldaaGRXeDBPMXh5WEc0a2VtbHVaR1Y0TFcxdlpHRnNMV0poWTJ0a2NtOXdPaUFrZW1sdVpHVjRMVzF2WkdGc0lDMGdNU0FoWkdWbVlYVnNkRHRjY2x4dUx5OGdKSHBwYm1SbGVDMXRiMlJoYkMxMGIzQTZJREV3T1RBZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNGtlbWx1WkdWNExXOW1abU5oYm5aaGN6b2dNVEE1TUNBaFpHVm1ZWFZzZER0Y2NseHVKSHBwYm1SbGVDMXZabVpqWVc1MllYTXRZbUZqYTJSeWIzQTZJQ1I2YVc1a1pYZ3RiMlptWTJGdWRtRnpJQzBnTVNBaFpHVm1ZWFZzZER0Y2NseHVKSHBwYm1SbGVDMXNZWGx2ZFhRdGJXOWlhV3hsT2lBeE1UQXdJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1SkhwcGJtUmxlQzF3YjNCdmRtVnlPaUF4TURreElDRmtaV1poZFd4ME8xeHlYRzRrZW1sdVpHVjRMWFJ2WVhOME9pQXhNRGsxSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpIcHBibVJsZUMxMGIyOXNkR2x3T2lBeE1EazVJQ0ZrWldaaGRXeDBPMXh5WEc0a2VtbHVaR1Y0TFc1dmRHbG1hV05oZEdsdmJqb2dPVGs1T1RrNUlDRmtaV1poZFd4ME95QXZMeUFvUXlsY2NseHVYSEpjYmk4dklDb2dWR0ZpYkdWelhISmNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjY2x4dVhISmNiaTh2SUhOamMzTXRaRzlqY3kxemRHRnlkQ0IwWVdKc1pTMTJZWEpwWVdKc1pYTmNjbHh1SkhSaFlteGxMV05sYkd3dGNHRmtaR2x1WnkxNU9pQXdMall5TlhKbGJTQWhaR1ZtWVhWc2REdGNjbHh1SkhSaFlteGxMV05sYkd3dGNHRmtaR2x1WnkxNE9pQXhMakkxY21WdElDRmtaV1poZFd4ME8xeHlYRzRrZEdGaWJHVXRZMlZzYkMxd1lXUmthVzVuTFhrdGMyMDZJREF1TXpFeU5YSmxiU0FoWkdWbVlYVnNkRHRjY2x4dUpIUmhZbXhsTFdObGJHd3RjR0ZrWkdsdVp5MTRMWE50T2lBd0xqWXlOWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmlSMFlXSnNaUzFqWld4c0xYWmxjblJwWTJGc0xXRnNhV2R1T2lCdGFXUmtiR1VnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrZEdGaWJHVXRkR2d0Wm05dWRDMTNaV2xuYUhRNklDUm1iMjUwTFhkbGFXZG9kQzF6WlcxcFltOXNaQ0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVIwWVdKc1pTMXpkSEpwY0dWa0xXSm5MV1poWTNSdmNqb2dNQzR3TXlBaFpHVm1ZWFZzZER0Y2NseHVKSFJoWW14bExYTjBjbWx3WldRdFltYzZJSEpuWW1FdGRHOHRhR1Y0S0hKblltRW9KR0pzWVdOckxDQWtkR0ZpYkdVdGMzUnlhWEJsWkMxaVp5MW1ZV04wYjNJcExDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpIUmhZbXhsTFdodmRtVnlMV0puTFdaaFkzUnZjam9nTUM0d05pQWhaR1ZtWVhWc2REdGNjbHh1SkhSaFlteGxMV2h2ZG1WeUxXSm5PaUJ5WjJKaEtDUmliR0ZqYXl3Z0pIUmhZbXhsTFdodmRtVnlMV0puTFdaaFkzUnZjaWtnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrZEdGaWJHVXRZbTl5WkdWeUxXTnZiRzl5T2lBa1ltOXlaR1Z5TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVKSFJoWW14bExXZHliM1Z3TFhObGNHRnlZWFJ2Y2kxamIyeHZjam9nSkhSaFlteGxMV0p2Y21SbGNpMWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmk4dklDb2dRblYwZEc5dWN5QXJJRVp2Y20xelhISmNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjY2x4dVhISmNiaVJwYm5CMWRDMWlkRzR0Y0dGa1pHbHVaeTE1T2lBd0xqUXpOelZ5WlcwZ0lXUmxabUYxYkhRN1hISmNiaVJwYm5CMWRDMWlkRzR0Y0dGa1pHbHVaeTE0T2lBeExqSTFjbVZ0SUNGa1pXWmhkV3gwTzF4eVhHNGthVzV3ZFhRdFluUnVMV1p2Ym5RdGMybDZaVG9nSkdadmJuUXRjMmw2WlMxaVlYTmxJQ0ZrWldaaGRXeDBPMXh5WEc0a2FXNXdkWFF0WW5SdUxXeHBibVV0YUdWcFoyaDBPaUFrYkdsdVpTMW9aV2xuYUhRdFltRnpaU0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVJwYm5CMWRDMWlkRzR0Wm05amRYTXRkMmxrZEdnNklEQXVNRFZ5WlcwZ0lXUmxabUYxYkhRN1hISmNiaVJwYm5CMWRDMWlkRzR0Wm05amRYTXRZMjlzYjNJdGIzQmhZMmwwZVRvZ01DNHhJQ0ZrWldaaGRXeDBPMXh5WEc0a2FXNXdkWFF0WW5SdUxXWnZZM1Z6TFdOdmJHOXlPaUJ5WjJKaEtDUmpiMjF3YjI1bGJuUXRZV04wYVhabExXSm5MQ0FrYVc1d2RYUXRZblJ1TFdadlkzVnpMV052Ykc5eUxXOXdZV05wZEhrcElDRmtaV1poZFd4ME8xeHlYRzRrYVc1d2RYUXRZblJ1TFdadlkzVnpMV0pzZFhJNklEQXVNalZ5WlcwZ0lXUmxabUYxYkhRN1hISmNiaVJwYm5CMWRDMWlkRzR0Wm05amRYTXRZbTk0TFhOb1lXUnZkem9nTUNBd0lDUnBibkIxZEMxaWRHNHRabTlqZFhNdFlteDFjaUFrYVc1d2RYUXRZblJ1TFdadlkzVnpMWGRwWkhSb0lDUnBibkIxZEMxaWRHNHRabTlqZFhNdFkyOXNiM0lnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrYVc1d2RYUXRZblJ1TFhCaFpHUnBibWN0ZVMxNGN6b2dNQ0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmlScGJuQjFkQzFpZEc0dGNHRmtaR2x1WnkxNExYaHpPaUF3TGpWeVpXMGdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzRrYVc1d2RYUXRZblJ1TFdadmJuUXRjMmw2WlMxNGN6b2dKR1p2Ym5RdGMybDZaUzE0Y3lBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JpUnBibkIxZEMxaWRHNHRiR2x1WlMxb1pXbG5hSFF0ZUhNNklDUnNhVzVsTFdobGFXZG9kQzE0Y3lBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JseHlYRzRrYVc1d2RYUXRZblJ1TFhCaFpHUnBibWN0ZVMxemJUb2dNQzR5TlhKbGJTQWhaR1ZtWVhWc2REdGNjbHh1SkdsdWNIVjBMV0owYmkxd1lXUmthVzVuTFhndGMyMDZJREF1TmpnM05YSmxiU0FoWkdWbVlYVnNkRHRjY2x4dUpHbHVjSFYwTFdKMGJpMW1iMjUwTFhOcGVtVXRjMjA2SUNSbWIyNTBMWE5wZW1VdGMyMGdJV1JsWm1GMWJIUTdYSEpjYmlScGJuQjFkQzFpZEc0dGJHbHVaUzFvWldsbmFIUXRjMjA2SUNSc2FXNWxMV2hsYVdkb2RDMXpiU0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVJwYm5CMWRDMWlkRzR0Y0dGa1pHbHVaeTE1TFd4bk9pQXdMamMxY21WdElDRmtaV1poZFd4ME8xeHlYRzRrYVc1d2RYUXRZblJ1TFhCaFpHUnBibWN0ZUMxc1p6b2dNUzQxY21WdElDRmtaV1poZFd4ME8xeHlYRzRrYVc1d2RYUXRZblJ1TFdadmJuUXRjMmw2WlMxc1p6b2dKR1p2Ym5RdGMybDZaUzFzWnlBaFpHVm1ZWFZzZER0Y2NseHVKR2x1Y0hWMExXSjBiaTFzYVc1bExXaGxhV2RvZEMxc1p6b2dKR3hwYm1VdGFHVnBaMmgwTFd4bklDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpHbHVjSFYwTFdKMGJpMXdZV1JrYVc1bkxYa3RlR3c2SURBdU9EYzFjbVZ0SUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpHbHVjSFYwTFdKMGJpMXdZV1JrYVc1bkxYZ3RlR3c2SURJdU1USTFjbVZ0SUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpHbHVjSFYwTFdKMGJpMW1iMjUwTFhOcGVtVXRlR3c2SUNSbWIyNTBMWE5wZW1VdGVHd2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzRrYVc1d2RYUXRZblJ1TFd4cGJtVXRhR1ZwWjJoMExYaHNPaUFrYkdsdVpTMW9aV2xuYUhRdGVHd2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzVjY2x4dUx5OGdLaUJDZFhSMGIyNXpYSEpjYmk4dklDb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lwY2NseHVYSEpjYmlSaWRHNHRjR0ZrWkdsdVp5MTVMWGh6T2lBa2FXNXdkWFF0WW5SdUxYQmhaR1JwYm1jdGVTMTRjeUFoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmlSaWRHNHRjR0ZrWkdsdVp5MTRMWGh6T2lBa2FXNXdkWFF0WW5SdUxYQmhaR1JwYm1jdGVDMTRjeUFoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmlSaWRHNHRabTl1ZEMxemFYcGxMWGh6T2lBa2FXNXdkWFF0WW5SdUxXWnZiblF0YzJsNlpTMTRjeUFoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmx4eVhHNGtZblJ1TFhCaFpHUnBibWN0ZVMxNGJEb2dKR2x1Y0hWMExXSjBiaTF3WVdSa2FXNW5MWGt0ZUd3Z0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNGtZblJ1TFhCaFpHUnBibWN0ZUMxNGJEb2dKR2x1Y0hWMExXSjBiaTF3WVdSa2FXNW5MWGd0ZUd3Z0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNGtZblJ1TFdadmJuUXRjMmw2WlMxNGJEb2dKR2x1Y0hWMExXSjBiaTFtYjI1MExYTnBlbVV0ZUd3Z0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNWNjbHh1SkdKMGJpMXNhVzVsTFdobGFXZG9kQzE0Y3pvZ0pHbHVjSFYwTFdKMGJpMXNhVzVsTFdobGFXZG9kQzE0Y3lBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JpUmlkRzR0YkdsdVpTMW9aV2xuYUhRdGMyMDZJQ1JzYVc1bExXaGxhV2RvZEMxemJUc2dMeThvUXlsY2NseHVKR0owYmkxc2FXNWxMV2hsYVdkb2RDMXNaem9nSkd4cGJtVXRhR1ZwWjJoMExXeG5PeUF2THloREtWeHlYRzRrWW5SdUxXeHBibVV0YUdWcFoyaDBMWGhzT2lBa2FXNXdkWFF0WW5SdUxXeHBibVV0YUdWcFoyaDBMWGhzSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dVhISmNiaVJpZEc0dFltOTRMWE5vWVdSdmR6b2dibTl1WlNBaFpHVm1ZWFZzZER0Y2NseHVKR0owYmkxbWIyTjFjeTFpYjNndGMyaGhaRzkzT2lCdWIyNWxJQ0ZrWldaaGRXeDBPMXh5WEc0a1luUnVMV0ZqZEdsMlpTMWliM2d0YzJoaFpHOTNPaUJ1YjI1bElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpHSjBiaTFpYjNKa1pYSXRjbUZrYVhWekxYaHpPaUFrWW05eVpHVnlMWEpoWkdsMWN5MTRjeUFoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmlSaWRHNHRZbTl5WkdWeUxYSmhaR2wxY3kxNGJEb2dKR0p2Y21SbGNpMXlZV1JwZFhNdGVHd2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzVjY2x4dUpHSjBiaTEwY21GdWMybDBhVzl1T2lCaGJHd2dNQzR5Y3lCbFlYTmxMV2x1TFc5MWRDQWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpUmlkRzR0YkdGaVpXd3RZbWN0YzJoaFpHVXRZVzF2ZFc1ME9pQTROQ1VnSVdSbFptRjFiSFE3SUM4dklDaERLVnh5WEc0a1luUnVMV3hoWW1Wc0xXSm5MWFJwYm5RdFlXMXZkVzUwT2lBNE5DVWdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzVjY2x4dUpHSjBiaTFzWVdKbGJDMWthWE5oWW14bFpDMWlaeTF6YUdGa1pTMWhiVzkxYm5RNklEZzBKU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmlSaWRHNHRiR0ZpWld3dFpHbHpZV0pzWldRdFltY3RkR2x1ZEMxaGJXOTFiblE2SURnMEpTQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhISmNibHh5WEc0a1luUnVMV2h2ZG1WeUxXSm5MWE5vWVdSbExXRnRiM1Z1ZERvZ01UQWxJQ0ZrWldaaGRXeDBPMXh5WEc0a1luUnVMV2h2ZG1WeUxXSm5MWFJwYm5RdFlXMXZkVzUwT2lBeE1DVWdJV1JsWm1GMWJIUTdYSEpjYmlSaWRHNHRhRzkyWlhJdFltOXlaR1Z5TFhOb1lXUmxMV0Z0YjNWdWREb2dNVEFsSUNGa1pXWmhkV3gwTzF4eVhHNGtZblJ1TFdodmRtVnlMV0p2Y21SbGNpMTBhVzUwTFdGdGIzVnVkRG9nTVRBbElDRmtaV1poZFd4ME8xeHlYRzRrWW5SdUxXaHZkbVZ5TFhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdTZ3RNWEI0S1NBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JseHlYRzRrWW5SdUxXWnZZM1Z6TFhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdTZ3dLU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmx4eVhHNGtZblJ1TFdScGMyRmliR1ZrTFc5d1lXTnBkSGs2SURBdU5qVWdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtZblJ1TFdGamRHbDJaUzFpWnkxemFHRmtaUzFoYlc5MWJuUTZJREUxSlNBaFpHVm1ZWFZzZER0Y2NseHVKR0owYmkxaFkzUnBkbVV0WW1jdGRHbHVkQzFoYlc5MWJuUTZJREUxSlNBaFpHVm1ZWFZzZER0Y2NseHVKR0owYmkxaFkzUnBkbVV0WW05eVpHVnlMWE5vWVdSbExXRnRiM1Z1ZERvZ01UVWxJQ0ZrWldaaGRXeDBPMXh5WEc0a1luUnVMV0ZqZEdsMlpTMWliM0prWlhJdGRHbHVkQzFoYlc5MWJuUTZJREUxSlNBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmk4dklDb2dSbTl5YlhOY2NseHVMeThnS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLbHh5WEc1Y2NseHVMeThnYzJOemN5MWtiMk56TFhOMFlYSjBJR1p2Y20wdGRHVjRkQzEyWVhKcFlXSnNaWE5jY2x4dUpHWnZjbTB0ZEdWNGRDMXRZWEpuYVc0dGRHOXdPaUF3TGpOeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSbWIzSnRMWFJsZUhRdFptOXVkQzF6YVhwbE9pQWtjMjFoYkd3dFptOXVkQzF6YVhwbElDRmtaV1poZFd4ME8xeHlYRzRrWm05eWJTMTBaWGgwTFdOdmJHOXlPaUFrZEdWNGRDMXNhV2RvZENBaFpHVm1ZWFZzZER0Y2NseHVMeThnYzJOemN5MWtiMk56TFdWdVpDQm1iM0p0TFhSbGVIUXRkbUZ5YVdGaWJHVnpYSEpjYmx4eVhHNHZMeUJ6WTNOekxXUnZZM010YzNSaGNuUWdabTl5YlMxc1lXSmxiQzEyWVhKcFlXSnNaWE5jY2x4dUpHWnZjbTB0YkdGaVpXd3RabTl1ZEMxemFYcGxPaUF3TGpjMWNtVnRJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXliUzFzWVdKbGJDMW1iMjUwTFhkbGFXZG9kRG9nTlRBd0lDRmtaV1poZFd4ME8xeHlYRzRrWm05eWJTMXNZV0psYkMxamIyeHZjam9nSkdobFlXUnBibWR6TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXliUzFzWVdKbGJDMXNaWFIwWlhJdGMzQmhZMmx1WnpvZ2FXNW9aWEpwZENBaFpHVm1ZWFZzZERzZ0x5OG9ReWxjY2x4dUpHWnZjbTB0YkdGaVpXd3RkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpTQWhaR1ZtWVhWc2REc2dMeThvUXlsY2NseHVMeThnYzJOemN5MWtiMk56TFdWdVpDQm1iM0p0TFd4aFltVnNMWFpoY21saFlteGxjMXh5WEc1Y2NseHVMeThnYzJOemN5MWtiMk56TFhOMFlYSjBJR1p2Y20wdGFXNXdkWFF0ZG1GeWFXRmliR1Z6WEhKY2JpUnBibkIxZEMxd1lXUmthVzVuTFhnNklEQXVPRGMxY21WdElDRmtaV1poZFd4ME8xeHlYRzRrYVc1d2RYUXRiR2x1WlMxb1pXbG5hSFE2SUNScGJuQjFkQzFpZEc0dGJHbHVaUzFvWldsbmFIUWdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGthVzV3ZFhRdGNHRmtaR2x1WnkxNExYTnRPaUF3TGpZeU5YSmxiU0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVJwYm5CMWRDMXdZV1JrYVc1bkxYZ3RiR2M2SURFdU1qVnlaVzBnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrYVc1d2RYUXRZbWM2SUNSM2FHbDBaU0FoWkdWbVlYVnNkRHRjY2x4dUpHbHVjSFYwTFdScGMyRmliR1ZrTFdKbk9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMHhNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrYVc1d2RYUXRZMjlzYjNJNklDUmliMlI1TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh5WEc0a2FXNXdkWFF0WW05eVpHVnlMV052Ykc5eU9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMHlNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrYVc1d2RYUXRhRzkyWlhJdFltOXlaR1Z5TFdOdmJHOXlPaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzB5TURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNWNjbHh1SkdsdWNIVjBMV1p2WTNWekxXSnZjbVJsY2kxamIyeHZjaTF6WTJGc1pUb2dOVEFsSUNGa1pXWmhkV3gwT3lBdkx5aERLVnh5WEc0a2FXNXdkWFF0Wm05amRYTXRZbTl5WkdWeUxXTnZiRzl5T2lCMGFXNTBMV052Ykc5eUtDUmpiMjF3YjI1bGJuUXRZV04wYVhabExXSm5MQ0FrYVc1d2RYUXRabTlqZFhNdFltOXlaR1Z5TFdOdmJHOXlMWE5qWVd4bEtTQWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpUnBibkIxZEMxd2JHRmpaV2h2YkdSbGNpMTBjbUZ1YzJsMGFXOXVPaUJoYkd3Z01DNHlOWE1nWldGelpUdGNjbHh1SkdsdWNIVjBMWEJzWVdObGFHOXNaR1Z5TFdOdmJHOXlPaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzAwTURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a2FXNXdkWFF0YUdWcFoyaDBMV2x1Ym1WeU9pQndlQzEwYnkxeVpXMG9YSEpjYmlBZ1pteHZiM0lvY21WdExYUnZMWEI0S0Nna2FXNXdkWFF0WW5SdUxXWnZiblF0YzJsNlpTQXFJQ1JwYm5CMWRDMWlkRzR0YkdsdVpTMW9aV2xuYUhRcElDc2dLQ1JwYm5CMWRDMWlkRzR0Y0dGa1pHbHVaeTE1SUNvZ01pa3BLVnh5WEc0cElDRmtaV1poZFd4ME8xeHlYRzRrYVc1d2RYUXRhR1ZwWjJoMExXbHVibVZ5TFhOdE9pQndlQzEwYnkxeVpXMG9YSEpjYmlBZ1pteHZiM0lvY21WdExYUnZMWEI0S0Nna2FXNXdkWFF0WW5SdUxXWnZiblF0YzJsNlpTMXpiU0FxSUNScGJuQjFkQzFpZEc0dGJHbHVaUzFvWldsbmFIUXRjMjBwSUNzZ0tDUnBibkIxZEMxaWRHNHRjR0ZrWkdsdVp5MTVMWE50SUNvZ01pa3BLVnh5WEc0cElDRmtaV1poZFd4ME95QXZMeUFvUXlsY2NseHVKR2x1Y0hWMExXaGxhV2RvZEMxcGJtNWxjaTFzWnpvZ2NIZ3RkRzh0Y21WdEtGeHlYRzRnSUdac2IyOXlLSEpsYlMxMGJ5MXdlQ2dvSkdadmJuUXRjMmw2WlMxc1p5QXFJQ1JzYVc1bExXaGxhV2RvZEMxc1p5a2dLeUFvSkdsdWNIVjBMV0owYmkxd1lXUmthVzVuTFhrdGJHY2dLaUF5S1NrcFhISmNiaWtnSVdSbFptRjFiSFE3SUM4dklDaERLVnh5WEc0dkx5QnpZM056TFdSdlkzTXRaVzVrSUdadmNtMHRhVzV3ZFhRdGRtRnlhV0ZpYkdWelhISmNibHh5WEc0dkx5QnpZM056TFdSdlkzTXRjM1JoY25RZ1ptOXliUzFqYUdWamF5MTJZWEpwWVdKc1pYTmNjbHh1SkdadmNtMHRZMmhsWTJzdGFXNXdkWFF0ZDJsa2RHZzZJREV1TW1WdElDRmtaV1poZFd4ME8xeHlYRzRrWm05eWJTMWtZWFJoZEdGaWJHVnpMV05vWldOckxXbHVjSFYwTFhOcGVtVTZJREU0Y0hnZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1NCR2IzSWdaR0YwWVhSaFlteGxjeUIzYVhSb0lHTm9aV05yWW05NExTQjFjR1JoZEdVZ1lXTmpiM0prYVc1bklIUnZJQ1JtYjNKdExXTm9aV05yTFdsdWNIVjBMWGRwWkhSb1hISmNibHh5WEc0a1ptOXliUzFqYUdWamF5MXBibkIxZEMxaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBa2FXNXdkWFF0WW05eVpHVnlMV052Ykc5eUlDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpHWnZjbTB0WTJobFkyc3RiR0ZpWld3dFkzVnljMjl5T2lCd2IybHVkR1Z5SUNGa1pXWmhkV3gwTzF4eVhHNGtabTl5YlMxamFHVmpheTFzWVdKbGJDMWthWE5oWW14bFpDMWpiMnh2Y2pvZ0pIUmxlSFF0YlhWMFpXUWdJV1JsWm1GMWJIUTdJQzh2SUNoREtWSmNjbHh1WEhKY2JpUm1iM0p0TFdOb1pXTnJMV2x1Y0hWMExXTm9aV05yWldRdFkyOXNiM0k2SUNSamIyMXdiMjVsYm5RdFlXTjBhWFpsTFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXliUzFqYUdWamF5MXBibkIxZEMxamFHVmphMlZrTFdKbkxXbHRZV2RsT2lCMWNtd29YQ0prWVhSaE9tbHRZV2RsTDNOMlp5dDRiV3dzUEhOMlp5QjRiV3h1Y3owbmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jbklIWnBaWGRDYjNnOUp6QWdNQ0F5TUNBeU1DYytQSEJoZEdnZ1ptbHNiRDBuYm05dVpTY2djM1J5YjJ0bFBTY2pleVJtYjNKdExXTm9aV05yTFdsdWNIVjBMV05vWldOclpXUXRZMjlzYjNKOUp5QnpkSEp2YTJVdGJHbHVaV05oY0QwbmNtOTFibVFuSUhOMGNtOXJaUzFzYVc1bGFtOXBiajBuY205MWJtUW5JSE4wY205clpTMTNhV1IwYUQwbk1pY2daRDBuVFRZZ01UQnNNeUF6YkRZdE5pY3ZQand2YzNablBsd2lLU0FoWkdWbVlYVnNkRHRjY2x4dUpHWnZjbTB0WTJobFkyc3RjbUZrYVc4dFkyaGxZMnRsWkMxaVp5MXBiV0ZuWlRvZ2RYSnNLRndpWkdGMFlUcHBiV0ZuWlM5emRtY3JlRzFzTER4emRtY2dlRzFzYm5NOUoyaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabkp5QjJhV1YzUW05NFBTY3ROQ0F0TkNBNElEZ25QanhqYVhKamJHVWdjajBuTVM0MUp5Qm1hV3hzUFNjamV5Um1iM0p0TFdOb1pXTnJMV2x1Y0hWMExXTm9aV05yWldRdFkyOXNiM0o5Snk4K1BDOXpkbWMrWENJcElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpHWnZjbTB0WTJobFkyc3RhVzV3ZFhRdGFXNWtaWFJsY20xcGJtRjBaUzFqYjJ4dmNqb2dKR052YlhCdmJtVnVkQzFoWTNScGRtVXRZMjlzYjNJZ0lXUmxabUYxYkhRN1hISmNiaVJtYjNKdExXTm9aV05yTFdsdWNIVjBMV2x1WkdWMFpYSnRhVzVoZEdVdFltY3RhVzFoWjJVNklIVnliQ2hjSW1SaGRHRTZhVzFoWjJVdmMzWm5LM2h0YkN3OGMzWm5JSGh0Ykc1elBTZG9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5Y2dkbWxsZDBKdmVEMG5NQ0F3SURJd0lESXdKejQ4Y0dGMGFDQm1hV3hzUFNkdWIyNWxKeUJ6ZEhKdmEyVTlKeU43SkdadmNtMHRZMmhsWTJzdGFXNXdkWFF0YVc1a1pYUmxjbTFwYm1GMFpTMWpiMnh2Y24wbklITjBjbTlyWlMxc2FXNWxZMkZ3UFNkeWIzVnVaQ2NnYzNSeWIydGxMV3hwYm1WcWIybHVQU2R5YjNWdVpDY2djM1J5YjJ0bExYZHBaSFJvUFNjeUp5QmtQU2ROTmlBeE1HZzRKeTgrUEM5emRtYytYQ0lwSUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkdadmNtMHRZMmhsWTJzdGFXNXdkWFF0WkdsellXSnNaV1F0WW1jNklDUnBibkIxZEMxa2FYTmhZbXhsWkMxaVp5QWhaR1ZtWVhWc2REc2dMeThvUXlsY2NseHVMeThnYzJOemN5MWtiMk56TFdWdVpDQm1iM0p0TFdOb1pXTnJMWFpoY21saFlteGxjMXh5WEc1Y2NseHVMeThnYzJOemN5MWtiMk56TFhOMFlYSjBJR1p2Y20wdGMzZHBkR05vTFhaaGNtbGhZbXhsYzF4eVhHNGtabTl5YlMxemQybDBZMmd0WTI5c2IzSTZJQ1JuY21GNUxUTXdNQ0FoWkdWbVlYVnNkRHRjY2x4dUpHWnZjbTB0YzNkcGRHTm9MWGRwWkhSb09pQXlaVzBnSVdSbFptRjFiSFE3WEhKY2JpUm1iM0p0TFhOM2FYUmphQzF3WVdSa2FXNW5MWE4wWVhKME9pQWtabTl5YlMxemQybDBZMmd0ZDJsa2RHZ2dLeUF3TGpWbGJTQWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpUm1iM0p0TFhOM2FYUmphQzFqYUdWamEyVmtMV0puTFhCdmMybDBhVzl1TFhKMGJEb2diR1ZtZENCalpXNTBaWElnSVdSbFptRjFiSFE3SUM4dktFTXBYSEpjYmk4dklITmpjM010Wkc5amN5MWxibVFnWm05eWJTMXpkMmwwWTJndGRtRnlhV0ZpYkdWelhISmNibHh5WEc0dkwybHVjSFYwTFdkeWIzVndMWFpoY21saFlteGxjMXh5WEc0a2FXNXdkWFF0WjNKdmRYQXRZV1JrYjI0dFkyOXNiM0k2SUNScGJuQjFkQzFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNjbHh1SkdsdWNIVjBMV2R5YjNWd0xXRmtaRzl1TFdKbk9pQWthVzV3ZFhRdFltY2dJV1JsWm1GMWJIUTdYSEpjYmlScGJuQjFkQzFuY205MWNDMWhaR1J2YmkxaWIzSmtaWEl0WTI5c2IzSTZJQ1JwYm5CMWRDMWliM0prWlhJdFkyOXNiM0lnSVdSbFptRjFiSFE3WEhKY2JpOHZJSE5qYzNNdFpHOWpjeTFsYm1RZ2FXNXdkWFF0WjNKdmRYQXRkbUZ5YVdGaWJHVnpYSEpjYmx4eVhHNHZMeUJ6WTNOekxXUnZZM010YzNSaGNuUWdabTl5YlMxelpXeGxZM1F0ZG1GeWFXRmliR1Z6WEhKY2JpUm1iM0p0TFhObGJHVmpkQzF3WVdSa2FXNW5MWGs2SUNScGJuQjFkQzFpZEc0dGNHRmtaR2x1WnkxNUlDRmtaV1poZFd4ME8xeHlYRzRrWm05eWJTMXpaV3hsWTNRdGNHRmtaR2x1WnkxNE9pQWthVzV3ZFhRdGNHRmtaR2x1WnkxNElDRmtaV1poZFd4ME8xeHlYRzRrWm05eWJTMXpaV3hsWTNRdGFXNWthV05oZEc5eUxYQmhaR1JwYm1jNklDUm1iM0p0TFhObGJHVmpkQzF3WVdSa2FXNW5MWGdnS3lBeGNtVnRJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXliUzF6Wld4bFkzUXRaR2x6WVdKc1pXUXRZMjlzYjNJNklDUmliMlI1TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXliUzF6Wld4bFkzUXRaR2x6WVdKc1pXUXRZbWM2SUNScGJuQjFkQzFrYVhOaFlteGxaQzFpWnlBaFpHVm1ZWFZzZER0Y2NseHVKR1p2Y20wdGMyVnNaV04wTFdKbkxYTnBlbVU2SURFM2NIZ2dNVEp3ZUNBaFpHVm1ZWFZzZER0Y2NseHVKR1p2Y20wdGMyVnNaV04wTFdsdVpHbGpZWFJ2Y2kxamIyeHZjam9nSkdkeVlYa3ROakF3SUNGa1pXWmhkV3gwTzF4eVhHNGtabTl5YlMxelpXeGxZM1F0YVc1a2FXTmhkRzl5T2lCMWNtd29YQ0prWVhSaE9tbHRZV2RsTDNOMlp5dDRiV3dzUEhOMlp5QjRiV3h1Y3owbmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jbklIWnBaWGRDYjNnOUp6QWdNQ0F4TmlBeE5pYytQSEJoZEdnZ1ptbHNiRDBuYm05dVpTY2djM1J5YjJ0bFBTY2pleVJtYjNKdExYTmxiR1ZqZEMxcGJtUnBZMkYwYjNJdFkyOXNiM0o5SnlCemRISnZhMlV0YkdsdVpXTmhjRDBuY205MWJtUW5JSE4wY205clpTMXNhVzVsYW05cGJqMG5jbTkxYm1RbklITjBjbTlyWlMxM2FXUjBhRDBuTWljZ1pEMG5UVElnTld3MklEWWdOaTAySnk4K1BDOXpkbWMrWENJcElDRmtaV1poZFd4ME8xeHlYRzRrWm05eWJTMXpaV3hsWTNRdGFXNWthV05oZEc5eUxYSjBiRG9nZFhKc0tGd2laR0YwWVRwcGJXRm5aUzl6ZG1jcmVHMXNMRHh6ZG1jZ2VHMXNibk05SjJoMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSnlCMmFXVjNRbTk0UFNjd0lEQWdNVFlnTVRZblBqeHdZWFJvSUdacGJHdzlKMjV2Ym1VbklITjBjbTlyWlQwbkkzc2tabTl5YlMxelpXeGxZM1F0YVc1a2FXTmhkRzl5TFdOdmJHOXlmU2NnYzNSeWIydGxMV3hwYm1WallYQTlKM0p2ZFc1a0p5QnpkSEp2YTJVdGJHbHVaV3B2YVc0OUozSnZkVzVrSnlCemRISnZhMlV0ZDJsa2RHZzlKekluSUdROUowMHlJRFZzTmlBMklEWXROaWN2UGp3dmMzWm5QbHdpS1NBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JseHlYRzRrWm05eWJTMXpaV3hsWTNRdFptOWpkWE10WW05NExYTm9ZV1J2ZHpvZ0pHbHVjSFYwTFdKMGJpMW1iMk4xY3kxaWIzZ3RjMmhoWkc5M0lDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpHWnZjbTB0YzJWc1pXTjBMWEJoWkdScGJtY3RlUzF6YlRvZ0pHbHVjSFYwTFdKMGJpMXdZV1JrYVc1bkxYa3RjMjBnSVdSbFptRjFiSFE3WEhKY2JpUm1iM0p0TFhObGJHVmpkQzF3WVdSa2FXNW5MWGd0YzIwNklDUnBibkIxZEMxd1lXUmthVzVuTFhndGMyMGdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtabTl5YlMxelpXeGxZM1F0Y0dGa1pHbHVaeTE1TFd4bk9pQWthVzV3ZFhRdFluUnVMWEJoWkdScGJtY3RlUzFzWnlBaFpHVm1ZWFZzZER0Y2NseHVKR1p2Y20wdGMyVnNaV04wTFhCaFpHUnBibWN0ZUMxc1p6b2dKR2x1Y0hWMExYQmhaR1JwYm1jdGVDMXNaeUFoWkdWbVlYVnNkRHRjY2x4dUx5OGdjMk56Y3kxa2IyTnpMV1Z1WkNCbWIzSnRMWE5sYkdWamRDMTJZWEpwWVdKc1pYTmNjbHh1WEhKY2JpOHZJSE5qYzNNdFpHOWpjeTF6ZEdGeWRDQm1iM0p0TFhKaGJtZGxMWFpoY21saFlteGxjMXh5WEc0a1ptOXliUzF5WVc1blpTMTBjbUZqYXkxb1pXbG5hSFE2SURBdU16YzFjbVZ0SUNGa1pXWmhkV3gwTzF4eVhHNGtabTl5YlMxeVlXNW5aUzEwY21GamF5MWlaem9nY21kaVlTMTBieTFvWlhnb0pHZHlZWGt0TVRBd0xDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcElDRmtaV1poZFd4ME8xeHlYRzRrWm05eWJTMXlZVzVuWlMxMGNtRmpheTFpYjNndGMyaGhaRzkzT2lCdWIyNWxJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXliUzF5WVc1blpTMTBjbUZqYXkxa2FYTmhZbXhsWkMxaVp6b2dKR2R5WVhrdE5UQWdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzVjY2x4dUpHWnZjbTB0Y21GdVoyVXRkR2gxYldJdGQybGtkR2c2SURBdU9EYzFjbVZ0SUNGa1pXWmhkV3gwTzF4eVhHNGtabTl5YlMxeVlXNW5aUzEwYUhWdFlpMW9aV2xuYUhRNklDUm1iM0p0TFhKaGJtZGxMWFJvZFcxaUxYZHBaSFJvSUNGa1pXWmhkV3gwTzF4eVhHNGtabTl5YlMxeVlXNW5aUzEwYUhWdFlpMWlaem9nSkhkb2FYUmxJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXliUzF5WVc1blpTMTBhSFZ0WWkxaWIzZ3RjMmhoWkc5M09pQXdJREFnTm5CNElEQWdKR2R5WVhrdE5EQXdJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXliUzF5WVc1blpTMTBhSFZ0WWkxbWIyTjFjeTFpYjNndGMyaGhaRzkzT2lBd0lEQWdPSEI0SURCd2VDQWtaM0poZVMwME1EQWdJV1JsWm1GMWJIUTdYSEpjYmlSbWIzSnRMWEpoYm1kbExYUm9kVzFpTFdGamRHbDJaUzFpWnpvZ0pHWnZjbTB0Y21GdVoyVXRkR2gxYldJdFltY2dJV1JsWm1GMWJIUTdYSEpjYmlSbWIzSnRMWEpoYm1kbExYUm9kVzFpTFdScGMyRmliR1ZrTFdKbk9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMHlNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEhKY2JpOHZJSE5qYzNNdFpHOWpjeTFsYm1RZ1ptOXliUzF5WVc1blpTMTJZWEpwWVdKc1pYTmNjbHh1WEhKY2JpOHZJSE5qYzNNdFpHOWpjeTF6ZEdGeWRDQm1iM0p0TFdac2IyRjBhVzVuTFhaaGNtbGhZbXhsYzF4eVhHNGtabTl5YlMxbWJHOWhkR2x1Wnkxc1lXSmxiQzF2Y0dGamFYUjVPaUF3TGpjMUlDRmtaV1poZFd4ME8xeHlYRzRrWm05eWJTMW1iRzloZEdsdVp5MTBjbUZ1YzJsMGFXOXVPaUJ2Y0dGamFYUjVJREF1TW5NZ1pXRnpaUzFwYmkxdmRYUXNJSFJ5WVc1elptOXliU0F3TGpKeklHVmhjMlV0YVc0dGIzVjBJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXliUzFtYkc5aGRHbHVaeTFzWVdKbGJDMTBjbUZ1YzJadmNtMHRjblJzT2lCelkyRnNaU2d3TGpnMUtTQjBjbUZ1YzJ4aGRHVlpLQzB3TGpWeVpXMHBJSFJ5WVc1emJHRjBaVmdvTFRBdU1UVnlaVzBwSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUx5OGdjMk56Y3kxa2IyTnpMV1Z1WkNCbWIzSnRMV1pzYjJGMGFXNW5MWFpoY21saFlteGxjMXh5WEc1Y2NseHVMeThnUm05eWJTQjJZV3hwWkdGMGFXOXVYSEpjYmx4eVhHNHZMeUJ6WTNOekxXUnZZM010YzNSaGNuUWdabTl5YlMxbVpXVmtZbUZqYXkxMllYSnBZV0pzWlhOY2NseHVKR1p2Y20wdFptVmxaR0poWTJzdGRtRnNhV1F0WTI5c2IzSTZJQ1J6ZFdOalpYTnpJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXliUzFtWldWa1ltRmpheTFwYm5aaGJHbGtMV052Ykc5eU9pQWtaR0Z1WjJWeUlDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpHWnZjbTB0YzJWc1pXTjBMV1psWldSaVlXTnJMV2xqYjI0dGNHRmtaR2x1WnpvZ0pHWnZjbTB0YzJWc1pXTjBMV2x1WkdsallYUnZjaTF3WVdSa2FXNW5JQ3NnSkdsdWNIVjBMV2hsYVdkb2RDMXBibTVsY2lBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JpUm1iM0p0TFhObGJHVmpkQzFtWldWa1ltRmpheTFwWTI5dUxYQmhaR1JwYm1jdGMyMDZJQ1JtYjNKdExYTmxiR1ZqZEMxcGJtUnBZMkYwYjNJdGNHRmtaR2x1WnlBcklDUnBibkIxZEMxb1pXbG5hSFF0YVc1dVpYSXRjMjBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh5WEc0a1ptOXliUzF6Wld4bFkzUXRabVZsWkdKaFkyc3RhV052Ymkxd1lXUmthVzVuTFd4bk9pQWtabTl5YlMxelpXeGxZM1F0YVc1a2FXTmhkRzl5TFhCaFpHUnBibWNnS3lBa2FXNXdkWFF0YUdWcFoyaDBMV2x1Ym1WeUxXeG5JQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1THk4Z2MyTnpjeTFrYjJOekxXVnVaQ0JtYjNKdExXWmxaV1JpWVdOckxYWmhjbWxoWW14bGMxeHlYRzVjY2x4dUx5OGdLaUJPWVhaelhISmNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjY2x4dVhISmNiaVJ1WVhZdGMzQmhZMlZ5T2lBd0xqRXlOWEpsYlNBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JseHlYRzRrYm1GMkxXeHBibXN0Y0dGa1pHbHVaeTE1T2lBd0xqVnlaVzBnSVdSbFptRjFiSFE3WEhKY2JpUnVZWFl0YkdsdWF5MXdZV1JrYVc1bkxYZzZJREV1TWpWeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSdVlYWXRiR2x1YXkxamIyeHZjam9nSkhSbGVIUXRiWFYwWldRdGFHOTJaWElnSVdSbFptRjFiSFE3WEhKY2JpUnVZWFl0YkdsdWF5MWthWE5oWW14bFpDMWpiMnh2Y2pvZ0pIUmxlSFF0YkdsbmFIUmxjaUFoWkdWbVlYVnNkRHRjY2x4dUpHNWhkaTFzYVc1ckxXeHBibVV0YUdWcFoyaDBPaUFrWTI5dGNHOXVaVzUwTFd4cGJtVXRhR1ZwWjJoMElDRmtaV1poZFd4ME95QXZMeUFvUXlsY2NseHVYSEpjYmlSdVlYWXRiR2x1YXkxd1lXUmthVzVuTFhrdGJHYzZJREF1T0RjMWNtVnRJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1Skc1aGRpMXNhVzVyTFhCaFpHUnBibWN0ZUMxc1p6b2dNUzR6TVRJMWNtVnRJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1Skc1aGRpMXNhVzVyTFd4cGJtVXRhR1ZwWjJoMExXeG5PaUFrYkdsdVpTMW9aV2xuYUhRdGJHY2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzVjY2x4dUpHNWhkaTFzYVc1ckxYQmhaR1JwYm1jdGVTMXpiVG9nTUM0ek1USTFjbVZ0SUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpHNWhkaTFzYVc1ckxYQmhaR1JwYm1jdGVDMXpiVG9nTUM0NE56VnlaVzBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh5WEc0a2JtRjJMV3hwYm1zdGJHbHVaUzFvWldsbmFIUXRjMjA2SUNSc2FXNWxMV2hsYVdkb2RDMXpiU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmx4eVhHNGtibUYyTFhSaFluTXRiR2x1YXkxb2IzWmxjaTFpYjNKa1pYSXRZMjlzYjNJNklDUm5jbUY1TFRFd01DQWhaR1ZtWVhWc2REdGNjbHh1Skc1aGRpMTBZV0p6TFd4cGJtc3RZV04wYVhabExXTnZiRzl5T2lBa1ltOWtlUzFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNjbHh1Skc1aGRpMTBZV0p6TFd4cGJtc3RZV04wYVhabExXSm5PaUFrZDJocGRHVWdJV1JsWm1GMWJIUTdYSEpjYmlSdVlYWXRkR0ZpY3kxaWIzSmtaWEl0WTI5c2IzSTZJQ1J1WVhZdGRHRmljeTFzYVc1ckxXRmpkR2wyWlMxaVp5QWhaR1ZtWVhWc2REdGNjbHh1Skc1aGRpMTBZV0p6TFd4cGJtc3RZV04wYVhabExXSnZjbVJsY2kxamIyeHZjam9nSkc1aGRpMTBZV0p6TFdKdmNtUmxjaTFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNjbHh1Skc1aGRpMTBZV0p6TFdKMGJpMWlaeTFtWVdOMGIzSTZJREF1TVRZZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNGtibUYyTFhSaFluTXRZblJ1TFdOdmJHOXlPaUFrYUdWaFpHbHVaM010WTI5c2IzSWdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzRrYm1GMkxYUmhZbk10WW5SdUxXSm5PaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzB4TURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNWNjbHh1Skc1aGRpMXdhV3hzY3kxc2FXNXJMV0ZqZEdsMlpTMWpiMnh2Y2pvZ0pIZG9hWFJsSUNGa1pXWmhkV3gwTzF4eVhHNGtibUYyTFhCcGJHeHpMV3hwYm1zdFlXTjBhWFpsTFdKbk9pQjBjbUZ1YzNCaGNtVnVkQ0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaTh2SUNvZ1RtRjJZbUZ5WEhKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNjbHh1WEhKY2JpUnVZWFppWVhJdGRHOW5aMnhsY2kxd1lXUmthVzVuTFhrNklEQWdJV1JsWm1GMWJIUTdYSEpjYmlSdVlYWmlZWEl0ZEc5bloyeGxjaTF3WVdSa2FXNW5MWGc2SURBZ0lXUmxabUYxYkhRN1hISmNiaVJ1WVhaaVlYSXRkRzluWjJ4bGNpMW1iMjUwTFhOcGVtVTZJREF1TnpWeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtibUYyWW1GeUxXUmhjbXN0WTI5c2IzSTZJSEpuWW1Fb0pIZG9hWFJsTENBd0xqZ3BJQ0ZrWldaaGRXeDBPMXh5WEc0a2JtRjJZbUZ5TFdSaGNtc3RhRzkyWlhJdFkyOXNiM0k2SUNSM2FHbDBaU0FoWkdWbVlYVnNkRHRjY2x4dUpHNWhkbUpoY2kxa1lYSnJMV0ZqZEdsMlpTMWpiMnh2Y2pvZ0pIZG9hWFJsSUNGa1pXWmhkV3gwTzF4eVhHNGtibUYyWW1GeUxXUmhjbXN0WkdsellXSnNaV1F0WTI5c2IzSTZJSEpuWW1Fb0pIZG9hWFJsTENBd0xqUXBJQ0ZrWldaaGRXeDBPMXh5WEc0a2JtRjJZbUZ5TFdSaGNtc3RkRzluWjJ4bGNpMXBZMjl1TFdKbk9pQjFjbXdvWENKa1lYUmhPbWx0WVdkbEwzTjJaeXQ0Yld3c0pUTkRjM1puSUhkcFpIUm9QU2N4TkhCNEp5Qm9aV2xuYUhROUp6RXhjSGduSUhacFpYZENiM2c5SnpBZ01DQXhOQ0F4TVNjZ2RtVnljMmx2Ymowbk1TNHhKeUI0Yld4dWN6MG5hSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY25JSGh0Ykc1ek9uaHNhVzVyUFNkb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eE9UazVMM2hzYVc1ckp5VXpSU1V6UTJSbFpuTWxNMFVsTTBOd1lYUm9JR1E5SjAwd0xEQWdUREUwTERBZ1RERTBMREV1TnpVZ1REQXNNUzQzTlNCTU1Dd3dJRm9nVFRBc05DNHpOelVnVERFMExEUXVNemMxSUV3eE5DdzJMakV5TlNCTU1DdzJMakV5TlNCTU1DdzBMak0zTlNCYUlFMHdMRGd1TnpVZ1RERTBMRGd1TnpVZ1RERTBMREV3TGpVZ1REQXNNVEF1TlNCTU1DdzRMamMxSUZvbklHbGtQU2R3WVhSb0xURW5KVE5GSlROREwzQmhkR2dsTTBVbE0wTXZaR1ZtY3lVelJTVXpRMmNnYVdROUovQ2ZrbzR0VlVrdFJXeGxiV1Z1ZEhNbklITjBjbTlyWlQwbmJtOXVaU2NnYzNSeWIydGxMWGRwWkhSb1BTY3hKeUJtYVd4c1BTZHViMjVsSnlCbWFXeHNMWEoxYkdVOUoyVjJaVzV2WkdRbkpUTkZKVE5EWnlCcFpEMG5NVElwTFU1aGRtSmhjaWNnZEhKaGJuTm1iM0p0UFNkMGNtRnVjMnhoZEdVb0xURXhOelF1TURBd01EQXdMQ0F0TVRJNU1DNHdNREF3TURBcEp5VXpSU1V6UTJjZ2FXUTlKMGR5YjNWd0p5QjBjbUZ1YzJadmNtMDlKM1J5WVc1emJHRjBaU2d4TVRjMExqQXdNREF3TUN3Z01USTRPQzR3TURBd01EQXBKeVV6UlNVelEyY2dhV1E5SjBsamIyNHRRMjlzYjNJbklIUnlZVzV6Wm05eWJUMG5kSEpoYm5Oc1lYUmxLREF1TURBd01EQXdMQ0F5TGpBd01EQXdNQ2tuSlRORkpUTkRkWE5sSUdacGJHdzlKeU43Skc1aGRtSmhjaTFrWVhKckxXTnZiRzl5ZlNjZ2VHeHBibXM2YUhKbFpqMG5KVEl6Y0dGMGFDMHhKeVV6UlNVelF5OTFjMlVsTTBVbE0wTjFjMlVnWm1sc2JDMXZjR0ZqYVhSNVBTY3dMakVuSUdacGJHdzlKeU43Skc1aGRtSmhjaTFrWVhKckxXTnZiRzl5ZlNjZ2VHeHBibXM2YUhKbFpqMG5KVEl6Y0dGMGFDMHhKeVV6UlNVelF5OTFjMlVsTTBVbE0wTXZaeVV6UlNVelF5OW5KVE5GSlROREwyY2xNMFVsTTBNdlp5VXpSU1V6UXk5emRtY2xNMFZjSWlrZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a2JtRjJZbUZ5TFd4cFoyaDBMV052Ykc5eU9pQWtaM0poZVMwMU1EQWdJV1JsWm1GMWJIUTdYSEpjYmlSdVlYWmlZWEl0YkdsbmFIUXRhRzkyWlhJdFkyOXNiM0k2SUNSaWIyUjVMV052Ykc5eUlDRmtaV1poZFd4ME8xeHlYRzRrYm1GMlltRnlMV3hwWjJoMExXRmpkR2wyWlMxamIyeHZjam9nSkdKdlpIa3RZMjlzYjNJZ0lXUmxabUYxYkhRN1hISmNiaVJ1WVhaaVlYSXRiR2xuYUhRdFpHbHpZV0pzWldRdFkyOXNiM0k2SUNSbmNtRjVMVE13TUNBaFpHVm1ZWFZzZER0Y2NseHVKRzVoZG1KaGNpMXNhV2RvZEMxMGIyZG5iR1Z5TFdsamIyNHRZbWM2SUhWeWJDaGNJbVJoZEdFNmFXMWhaMlV2YzNabkszaHRiQ3dsTTBOemRtY2dkMmxrZEdnOUp6RTBjSGduSUdobGFXZG9kRDBuTVRGd2VDY2dkbWxsZDBKdmVEMG5NQ0F3SURFMElERXhKeUIyWlhKemFXOXVQU2N4TGpFbklIaHRiRzV6UFNkb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnljZ2VHMXNibk02ZUd4cGJtczlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MekU1T1RrdmVHeHBibXNuSlRORkpUTkRaR1ZtY3lVelJTVXpRM0JoZEdnZ1pEMG5UVEFzTUNCTU1UUXNNQ0JNTVRRc01TNDNOU0JNTUN3eExqYzFJRXd3TERBZ1dpQk5NQ3cwTGpNM05TQk1NVFFzTkM0ek56VWdUREUwTERZdU1USTFJRXd3TERZdU1USTFJRXd3TERRdU16YzFJRm9nVFRBc09DNDNOU0JNTVRRc09DNDNOU0JNTVRRc01UQXVOU0JNTUN3eE1DNDFJRXd3TERndU56VWdXaWNnYVdROUozQmhkR2d0TVNjbE0wVWxNME12Y0dGMGFDVXpSU1V6UXk5a1pXWnpKVE5GSlRORFp5QnBaRDBuOEorU2ppMVZTUzFGYkdWdFpXNTBjeWNnYzNSeWIydGxQU2R1YjI1bEp5QnpkSEp2YTJVdGQybGtkR2c5SnpFbklHWnBiR3c5SjI1dmJtVW5JR1pwYkd3dGNuVnNaVDBuWlhabGJtOWtaQ2NsTTBVbE0wTm5JR2xrUFNjeE1pa3RUbUYyWW1GeUp5QjBjbUZ1YzJadmNtMDlKM1J5WVc1emJHRjBaU2d0TVRFM05DNHdNREF3TURBc0lDMHhNamt3TGpBd01EQXdNQ2tuSlRORkpUTkRaeUJwWkQwblIzSnZkWEFuSUhSeVlXNXpabTl5YlQwbmRISmhibk5zWVhSbEtERXhOelF1TURBd01EQXdMQ0F4TWpnNExqQXdNREF3TUNrbkpUTkZKVE5EWnlCcFpEMG5TV052YmkxRGIyeHZjaWNnZEhKaGJuTm1iM0p0UFNkMGNtRnVjMnhoZEdVb01DNHdNREF3TURBc0lESXVNREF3TURBd0tTY2xNMFVsTTBOMWMyVWdabWxzYkQwbkkzc2tibUYyWW1GeUxXeHBaMmgwTFdOdmJHOXlmU2NnZUd4cGJtczZhSEpsWmowbkpUSXpjR0YwYUMweEp5VXpSU1V6UXk5MWMyVWxNMFVsTTBOMWMyVWdabWxzYkMxdmNHRmphWFI1UFNjd0xqRW5JR1pwYkd3OUp5TjdKRzVoZG1KaGNpMXNhV2RvZEMxamIyeHZjbjBuSUhoc2FXNXJPbWh5WldZOUp5VXlNM0JoZEdndE1TY2xNMFVsTTBNdmRYTmxKVE5GSlROREwyY2xNMFVsTTBNdlp5VXpSU1V6UXk5bkpUTkZKVE5ETDJjbE0wVWxNME12YzNabkpUTkZYQ0lwSUNGa1pXWmhkV3gwTzF4eVhHNGtibUYyWW1GeUxXeHBaMmgwTFhSdloyZHNaWEl0WW05eVpHVnlMV052Ykc5eU9pQnlaMkpoS0NSaWJHRmpheXdnTUM0d05pa2dJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNHZMeUFxSUVSeWIzQmtiM2R1YzF4eVhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYSEpjYmlSa2NtOXdaRzkzYmkxdGFXNHRkMmxrZEdnNklERXljbVZ0SUNGa1pXWmhkV3gwTzF4eVhHNGtaSEp2Y0dSdmQyNHRjR0ZrWkdsdVp5MTVPaUF3TGpNeE1qVnlaVzBnSVdSbFptRjFiSFE3WEhKY2JpUmtjbTl3Wkc5M2JpMW1iMjUwTFhOcGVtVTZJQ1JtYjI1MExYTnBlbVV0WW1GelpTQWhaR1ZtWVhWc2REdGNjbHh1SkdSeWIzQmtiM2R1TFdKdmNtUmxjaTFqYjJ4dmNqb2dKR1pzYjJGMGFXNW5MV052YlhCdmJtVnVkQzFpYjNKa1pYSXRZMjlzYjNJZ0lXUmxabUYxYkhRN1hISmNiaVJrY205d1pHOTNiaTFrYVhacFpHVnlMV0puT2lBa1ltOXlaR1Z5TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh5WEc0a1pISnZjR1J2ZDI0dFltOTRMWE5vWVdSdmR6b2dKR1pzYjJGMGFXNW5MV052YlhCdmJtVnVkQzF6YUdGa2IzY2dJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtaSEp2Y0dSdmQyNHRhVzV1WlhJdFltOXlaR1Z5TFhKaFpHbDFjem9nTUNBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmlSa2NtOXdaRzkzYmkxc2FXNXJMV052Ykc5eU9pQWtZbTlrZVMxamIyeHZjaUFoWkdWbVlYVnNkRHRjY2x4dUpHUnliM0JrYjNkdUxXeHBibXN0YUc5MlpYSXRZbWM2SUhKblltRW9KR0pzWVdOckxDQXdMakEwS1NBaFpHVm1ZWFZzZER0Y2NseHVKR1J5YjNCa2IzZHVMV3hwYm1zdGJHbHVaUzFvWldsbmFIUTZJQ1JqYjIxd2IyNWxiblF0YkdsdVpTMW9aV2xuYUhRZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNWNjbHh1SkdSeWIzQmtiM2R1TFd4cGJtc3RaR2x6WVdKc1pXUXRZMjlzYjNJNklDUjBaWGgwTFd4cFoyaDBaWElnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrWkhKdmNHUnZkMjR0YVhSbGJTMXdZV1JrYVc1bkxYazZJREF1TlRNeWNtVnRJQ0ZrWldaaGRXeDBPMXh5WEc0a1pISnZjR1J2ZDI0dGFYUmxiUzF3WVdSa2FXNW5MWGc2SURFdU1qVnlaVzBnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrWkhKdmNHUnZkMjR0YUdWaFpHVnlMV052Ykc5eU9pQWtkR1Y0ZEMxdGRYUmxaQ0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVJrY205d1pHOTNiaTFvWldGa1pYSXRjR0ZrWkdsdVp6b2dKR1J5YjNCa2IzZHVMV2wwWlcwdGNHRmtaR2x1WnkxNUlDUmtjbTl3Wkc5M2JpMXBkR1Z0TFhCaFpHUnBibWN0ZUNBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmk4dklDb2dVR0ZuYVc1aGRHbHZibHh5WEc0dkx5QXFLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcVhISmNibHh5WEc0a2NHRm5hVzVoZEdsdmJpMXdZV1JrYVc1bkxYazZJREF1TmpJMWNtVnRJQ0ZrWldaaGRXeDBPMXh5WEc0a2NHRm5hVzVoZEdsdmJpMXdZV1JrYVc1bkxYZzZJREF1TlRFeU5YSmxiU0FoWkdWbVlYVnNkRHRjY2x4dUpIQmhaMmx1WVhScGIyNHRjR0ZrWkdsdVp5MTVMWE50T2lBd0xqTTNOWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKSEJoWjJsdVlYUnBiMjR0Y0dGa1pHbHVaeTE0TFhOdE9pQXdMakkxY21WdElDRmtaV1poZFd4ME8xeHlYRzRrY0dGbmFXNWhkR2x2Ymkxd1lXUmthVzVuTFhrdGJHYzZJREF1T1RNM05YSmxiU0FoWkdWbVlYVnNkRHRjY2x4dUpIQmhaMmx1WVhScGIyNHRjR0ZrWkdsdVp5MTRMV3huT2lBd0xqVnlaVzBnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrY0dGbmFXNWhkR2x2Ymkxc2FXNWxMV2hsYVdkb2REb2dNU0FoWkdWbVlYVnNkRHNnTHk4Z0tHTXBYSEpjYmx4eVhHNGtjR0ZuYVc1aGRHbHZiaTFqYjJ4dmNqb2dKR0p2WkhrdFkyOXNiM0lnSVdSbFptRjFiSFE3WEhKY2JpUndZV2RwYm1GMGFXOXVMV0puT2lCeVoySmhMWFJ2TFdobGVDaHlaMkpoS0NSaWJHRmpheXdnTUM0d09Da3NJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a2dJV1JsWm1GMWJIUTdYSEpjYmlSd1lXZHBibUYwYVc5dUxXSnZjbVJsY2kxM2FXUjBhRG9nTUhCNElDRmtaV1poZFd4ME8xeHlYRzRrY0dGbmFXNWhkR2x2YmkxaWIzSmtaWEl0Y21Ga2FYVnpPaUFrWW05eVpHVnlMWEpoWkdsMWN5MXpiU0FoWkdWbVlYVnNkRHRjY2x4dUpIQmhaMmx1WVhScGIyNHRiV0Z5WjJsdUxYTjBZWEowT2lBd0xqRTROelZ5WlcwZ0lXUmxabUYxYkhRN1hISmNiaVJ3WVdkcGJtRjBhVzl1TFdKdmNtUmxjaTFqYjJ4dmNqb2dKR0p2Y21SbGNpMXBibTVsY2kxamIyeHZjaUFoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVJ3WVdkcGJtRjBhVzl1TFdadlkzVnpMV0p2ZUMxemFHRmtiM2M2SUc1dmJtVWdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtjR0ZuYVc1aGRHbHZiaTFtYjJOMWN5MWpiMnh2Y2pvZ0pIQmhaMmx1WVhScGIyNHRZMjlzYjNJZ0lXUmxabUYxYkhRN1hISmNiaVJ3WVdkcGJtRjBhVzl1TFdadlkzVnpMV0puT2lCeVoySmhMWFJ2TFdobGVDaHlaMkpoS0NSaWJHRmpheXdnTUM0eE5pa3NJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a2dJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtjR0ZuYVc1aGRHbHZiaTFvYjNabGNpMWpiMnh2Y2pvZ0pIQmhaMmx1WVhScGIyNHRZMjlzYjNJZ0lXUmxabUYxYkhRN1hISmNiaVJ3WVdkcGJtRjBhVzl1TFdodmRtVnlMV0puT2lCeVoySmhMWFJ2TFdobGVDaHlaMkpoS0NSaWJHRmpheXdnTUM0eE5pa3NJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a2dJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtjR0ZuYVc1aGRHbHZiaTFrYVhOaFlteGxaQzFqYjJ4dmNqb2dKSFJsZUhRdGJYVjBaV1FnSVdSbFptRjFiSFE3WEhKY2JpUndZV2RwYm1GMGFXOXVMV1JwYzJGaWJHVmtMV0puT2lCeVoySmhMWFJ2TFdobGVDaHlaMkpoS0NSaWJHRmpheXdnTUM0d05Da3NJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a2dJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNHZMeUFxSUVOaGNtUnpYSEpjYmk4dklDb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lwY2NseHVYSEpjYmlSallYSmtMWE53WVdObGNpMTVPaUFrYzNCaFkyVnlJQ29nTVM0MUlDRmtaV1poZFd4ME8xeHlYRzRrWTJGeVpDMXpjR0ZqWlhJdGVEb2dKSE53WVdObGNpQXFJREV1TlNBaFpHVm1ZWFZzZER0Y2NseHVKR05oY21RdGRHbDBiR1V0Wm05dWRDMXphWHBsT2lBa2FEVXRabTl1ZEMxemFYcGxJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1SkdOaGNtUXRkR2wwYkdVdGMzQmhZMlZ5TFhrNklDUnpjR0ZqWlhJZ0tpQXdMamczTlNBaFpHVm1ZWFZzZER0Y2NseHVKR05oY21RdGMzQmhZMlZ5TFhndGMyMDZJREZ5WlcwZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNGtZMkZ5WkMxaWIzSmtaWEl0ZDJsa2RHZzZJREE3WEhKY2JpUmpZWEprTFdKdmNtUmxjaTFqYjJ4dmNqb2dKR0p2Y21SbGNpMWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2NseHVKR05oY21RdFltOXlaR1Z5TFhKaFpHbDFjem9nSkdKdmNtUmxjaTF5WVdScGRYTXRiR2NnSVdSbFptRjFiSFE3WEhKY2JpUmpZWEprTFdKdmVDMXphR0ZrYjNjNklEQWdNbkI0SURad2VDQXdJSEpuWW1Fb0pHSnNZV05yTENBd0xqRXlLU0FoWkdWbVlYVnNkRHRjY2x4dUpHTmhjbVF0YVc1dVpYSXRZbTl5WkdWeUxXTnZiRzl5T2lBa1ltOXlaR1Z5TFdsdWJtVnlMV052Ykc5eUlDRmtaV1poZFd4ME95QXZMeUFvUXlsY2NseHVKR05oY21RdFkyRndMWEJoWkdScGJtY3RlVG9nSkhOd1lXTmxjaUFxSURFdU5TQWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpUmpZWEprTFdOaGNDMWlaem9nZEhKaGJuTndZWEpsYm5RZ0lXUmxabUYxYkhRN1hISmNiaVJqWVhKa0xXbHRaeTF2ZG1WeWJHRjVMWEJoWkdScGJtYzZJREV1TlhKbGJTQWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpOHZJQ29nUVdOamIzSmthVzl1WEhKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNjbHh1WEhKY2JpUmhZMk52Y21ScGIyNHRjR0ZrWkdsdVp5MTVPaUF3TGpjNWNtVnRJQ0ZrWldaaGRXeDBPMXh5WEc0a1lXTmpiM0prYVc5dUxYQmhaR1JwYm1jdGVEb2dNUzR4TWpWeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSaFkyTnZjbVJwYjI0dFkyOXNiM0k2SUNSaWIyUjVMV052Ykc5eUlDRmtaV1poZFd4ME8xeHlYRzRrWVdOamIzSmthVzl1TFdKbk9pQWtkMmhwZEdVZ0lXUmxabUYxYkhRN1hISmNiaVJoWTJOdmNtUnBiMjR0WW5WMGRHOXVMV052Ykc5eU9pQWthR1ZoWkdsdVozTXRZMjlzYjNJZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a1lXTmpiM0prYVc5dUxXSnZjbVJsY2kxM2FXUjBhRG9nTUNBaFpHVm1ZWFZzZER0Y2NseHVKR0ZqWTI5eVpHbHZiaTFpYjNKa1pYSXRZMjlzYjNJNklDUmliM0prWlhJdFkyOXNiM0lnSVdSbFptRjFiSFE3WEhKY2JpUmhZMk52Y21ScGIyNHRZblYwZEc5dUxXRmpkR2wyWlMxaVp6b2dKR0ZqWTI5eVpHbHZiaTFpWnlBaFpHVm1ZWFZzZER0Y2NseHVKR0ZqWTI5eVpHbHZiaTFpZFhSMGIyNHRZV04wYVhabExXTnZiRzl5T2lBa1lXTmpiM0prYVc5dUxXSjFkSFJ2YmkxamIyeHZjaUFoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVJoWTJOdmNtUnBiMjR0YVdOdmJpMTNhV1IwYURvZ01DNDNOWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKR0ZqWTI5eVpHbHZiaTFwWTI5dUxXTnZiRzl5T2lBa1lXTmpiM0prYVc5dUxXSjFkSFJ2YmkxamIyeHZjaUFoWkdWbVlYVnNkRHRjY2x4dUpHRmpZMjl5WkdsdmJpMXBZMjl1TFdGamRHbDJaUzFqYjJ4dmNqb2dKR0ZqWTI5eVpHbHZiaTFpZFhSMGIyNHRZV04wYVhabExXTnZiRzl5SUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkdGalkyOXlaR2x2YmkxcFkyOXVMWFJ5WVc1elptOXliVG9nY205MFlYUmxLRGt3WkdWbktTQWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpUmhZMk52Y21ScGIyNHRZblYwZEc5dUxXbGpiMjQ2SUhWeWJDaGNJbVJoZEdFNmFXMWhaMlV2YzNabkszaHRiQ3dsTTBOemRtY2dkMmxrZEdnOUp6RXlKeUJvWldsbmFIUTlKekV5SnlCMmFXVjNRbTk0UFNjd0lEQWdNVElnTVRJbklIaHRiRzV6UFNkb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnljZ2VHMXNibk02ZUd4cGJtczlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MekU1T1RrdmVHeHBibXNuSlRORkpUTkRaR1ZtY3lVelJTVXpRM0JoZEdnZ2FXUTlKMkVuSUdROUoyMHhMalV6TWlBeE1pQTJMakU0TWkwMkxUWXVNVGd5TFRaTU1DQXhMalE0TnlBMExqWTFJRFlnTUNBeE1DNDFNVE42Snk4bE0wVWxNME12WkdWbWN5VXpSU1V6UTJjZ2RISmhibk5tYjNKdFBTZDBjbUZ1YzJ4aGRHVW9NaTQxTnpFcEp5Qm1hV3hzUFNkdWIyNWxKeUJtYVd4c0xYSjFiR1U5SjJWMlpXNXZaR1FuSlRORkpUTkRkWE5sSUdacGJHdzlKeVV5TXpRek5UazNNU2NnZUd4cGJtczZhSEpsWmowbkpUSXpZU2N2SlRORkpUTkRkWE5sSUdacGJHd3RiM0JoWTJsMGVUMG5MakVuSUdacGJHdzlKeU43SkdGalkyOXlaR2x2YmkxcFkyOXVMV052Ykc5eWZTY2dlR3hwYm1zNmFISmxaajBuSlRJellTY3ZKVE5GSlROREwyY2xNMFVsTTBNdmMzWm5KVE5GSlRCQlhDSXBJQ0ZrWldaaGRXeDBPMXh5WEc0a1lXTmpiM0prYVc5dUxXSjFkSFJ2YmkxaFkzUnBkbVV0YVdOdmJqb2dkWEpzS0Z3aVpHRjBZVHBwYldGblpTOXpkbWNyZUcxc0xDVXpRM04yWnlCM2FXUjBhRDBuTVRJbklHaGxhV2RvZEQwbk1USW5JSFpwWlhkQ2IzZzlKekFnTUNBeE1pQXhNaWNnZUcxc2JuTTlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5KeUI0Yld4dWN6cDRiR2x1YXowbmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1UazVPUzk0YkdsdWF5Y2xNMFVsTTBOa1pXWnpKVE5GSlRORGNHRjBhQ0JwWkQwbllTY2daRDBuYlRFdU5UTXlJREV5SURZdU1UZ3lMVFl0Tmk0eE9ESXROa3d3SURFdU5EZzNJRFF1TmpVZ05pQXdJREV3TGpVeE0zb25MeVV6UlNVelF5OWtaV1p6SlRORkpUTkRaeUIwY21GdWMyWnZjbTA5SjNSeVlXNXpiR0YwWlNneUxqVTNNU2tuSUdacGJHdzlKMjV2Ym1VbklHWnBiR3d0Y25Wc1pUMG5aWFpsYm05a1pDY2xNMFVsTTBOMWMyVWdabWxzYkQwbkpUSXpORE0xT1RjeEp5QjRiR2x1YXpwb2NtVm1QU2NsTWpOaEp5OGxNMFVsTTBOMWMyVWdabWxzYkMxdmNHRmphWFI1UFNjdU1TY2dabWxzYkQwbkkzc2tZV05qYjNKa2FXOXVMV2xqYjI0dFlXTjBhWFpsTFdOdmJHOXlmU2NnZUd4cGJtczZhSEpsWmowbkpUSXpZU2N2SlRORkpUTkRMMmNsTTBVbE0wTXZjM1puSlRORkpUQkJYQ0lwSUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1THk4Z0tpQlViMjlzZEdsd2MxeHlYRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEhKY2JseHlYRzRrZEc5dmJIUnBjQzFpWnpvZ0pHUmhjbXNnSVdSbFptRjFiSFE3WEhKY2JpUjBiMjlzZEdsd0xXOXdZV05wZEhrNklERWdJV1JsWm1GMWJIUTdYSEpjYmlSMGIyOXNkR2x3TFdKdmVDMXphR0ZrYjNjNklDUmliM2d0YzJoaFpHOTNMWE50SUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpIUnZiMngwYVhBdGNHRmtaR2x1WnkxNU9pQXdMakkxY21WdElDRmtaV1poZFd4ME8xeHlYRzRrZEc5dmJIUnBjQzF3WVdSa2FXNW5MWGc2SURBdU4zSmxiU0FoWkdWbVlYVnNkRHRjY2x4dUpIUnZiMngwYVhBdFptOXVkQzF6YVhwbE9pQWtabTl1ZEMxemFYcGxMV0poYzJVZ0lXUmxabUYxYkhRN1hISmNiaVIwYjI5c2RHbHdMV0p2Y21SbGNpMXlZV1JwZFhNNklDUmliM0prWlhJdGNtRmthWFZ6TFhOdElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OGdLaUJRYjNCdmRtVnljMXh5WEc0dkx5QXFLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcVhISmNibHh5WEc0a2NHOXdiM1psY2kxaVp6b2dKSGRvYVhSbElDRmtaV1poZFd4ME8xeHlYRzRrY0c5d2IzWmxjaTFtYjI1MExYTnBlbVU2SUNSbWIyNTBMWE5wZW1VdFltRnpaU0FoWkdWbVlYVnNkRHRjY2x4dUpIQnZjRzkyWlhJdFltOTRMWE5vWVdSdmR6b2dKR1pzYjJGMGFXNW5MV052YlhCdmJtVnVkQzF6YUdGa2IzY2dJV1JsWm1GMWJIUTdYSEpjYmlSd2IzQnZkbVZ5TFdKdmNtUmxjaTEzYVdSMGFEb2dNSEI0SUNGa1pXWmhkV3gwTzF4eVhHNGtjRzl3YjNabGNpMW9aV0ZrWlhJdFltYzZJSFJ5WVc1emNHRnlaVzUwSUNGa1pXWmhkV3gwTzF4eVhHNGtjRzl3YjNabGNpMW9aV0ZrWlhJdGNHRmtaR2x1WnkxNU9pQXdJQ0ZrWldaaGRXeDBPMXh5WEc0a2NHOXdiM1psY2kxb1pXRmtaWEl0Y0dGa1pHbHVaeTE0T2lBeExqRXlOWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKSEJ2Y0c5MlpYSXRhR1ZoWkdWeUxXWnZiblF0YzJsNlpUb2dKR2cxTFdadmJuUXRjMmw2WlNBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JseHlYRzRrY0c5d2IzWmxjaTFpYjJSNUxYQmhaR1JwYm1jdGVUb2dNUzR4TWpWeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSd2IzQnZkbVZ5TFdKdlpIa3RjR0ZrWkdsdVp5MTRPaUFrY0c5d2IzWmxjaTFpYjJSNUxYQmhaR1JwYm1jdGVTQWhaR1ZtWVhWc2REdGNjbHh1SkhCdmNHOTJaWEl0WVhKeWIzY3RiM1YwWlhJdFkyOXNiM0k2SUNSd2IzQnZkbVZ5TFdKbklDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OGdLaUJVYjJGemRITmNjbHh1THk4Z0tpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2x4eVhHNWNjbHh1SkhSdllYTjBMWEJoWkdScGJtY3RlRG9nTVM0eU5YSmxiU0FoWkdWbVlYVnNkRHRjY2x4dUpIUnZZWE4wTFhCaFpHUnBibWN0ZVRvZ0pIUnZZWE4wTFhCaFpHUnBibWN0ZUNBaFpHVm1ZWFZzZER0Y2NseHVKSFJ2WVhOMExXWnZiblF0YzJsNlpUb2dKR1p2Ym5RdGMybDZaUzFpWVhObElDRmtaV1poZFd4ME8xeHlYRzRrZEc5aGMzUXRZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKSGRvYVhSbElDRmtaV1poZFd4ME8xeHlYRzRrZEc5aGMzUXRZbWN0Wm1GamRHOXlPaUF3TGpnMUlDRmtaV1poZFd4ME95QXZMeUFvUXlsY2NseHVKSFJ2WVhOMExXSnZjbVJsY2kxM2FXUjBhRG9nTUNBaFpHVm1ZWFZzZER0Y2NseHVKSFJ2WVhOMExXSnZjbVJsY2kxamIyeHZjam9nSkdkeVlYa3RNVEF3SUNGa1pXWmhkV3gwTzF4eVhHNGtkRzloYzNRdFltOXlaR1Z5TFhKaFpHbDFjem9nSkdKdmNtUmxjaTF5WVdScGRYTXRiR2NnSVdSbFptRjFiSFE3WEhKY2JpUjBiMkZ6ZEMxaWIzZ3RjMmhoWkc5M09pQWtabXh2WVhScGJtY3RZMjl0Y0c5dVpXNTBMWE5vWVdSdmR5QWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpUjBiMkZ6ZEMxb1pXRmtaWEl0WTI5c2IzSTZJQ1JpYjJSNUxXTnZiRzl5SUNGa1pXWmhkV3gwTzF4eVhHNGtkRzloYzNRdGFHVmhaR1Z5TFdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1MElDRmtaV1poZFd4ME8xeHlYRzRrZEc5aGMzUXRhR1ZoWkdWeUxXSnZjbVJsY2kxamIyeHZjam9nZEhKaGJuTndZWEpsYm5RZ0lXUmxabUYxYkhRN1hISmNiaVIwYjJGemRDMXpjR0ZqYVc1bk9pQXhMakkxY21WdElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpIUnZZWE4wTFdKMGJpMWpiRzl6WlMxemFYcGxPaUF3TGpZeU5XVnRJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1WEhKY2JpOHZJQ29nUW1Ga1oyVnpYSEpjYmk4dklDb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lwY2NseHVYSEpjYmlSaVlXUm5aUzFtYjI1MExYTnBlbVU2SURBdU9ERXlOV1Z0SUNGa1pXWmhkV3gwTzF4eVhHNGtZbUZrWjJVdFptOXVkQzEzWldsbmFIUTZJRFV3TUNBaFpHVm1ZWFZzZER0Y2NseHVKR0poWkdkbExYQmhaR1JwYm1jdGVUb2dNQzQxTW1WdElDRmtaV1poZFd4ME8xeHlYRzRrWW1Ga1oyVXRjR0ZrWkdsdVp5MTRPaUF3TGpVNU0yVnRJQ0ZrWldaaGRXeDBPMXh5WEc0a1ltRmtaMlV0WW05eVpHVnlMWEpoWkdsMWN6b2dKR0p2Y21SbGNpMXlZV1JwZFhNdGMyMGdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtZbUZrWjJVdGFHVnBaMmgwT2lBeExqVnlaVzBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh5WEc0a1ltRmtaMlV0ZDJsa2RHZzZJREV1TlhKbGJTQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhISmNiaVJpWVdSblpTMXNhVzVsTFdobGFXZG9kRG9nTUM0M05TQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhISmNibHh5WEc0dkx5QXFJRTF2WkdGc2MxeHlYRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEhKY2JpUnRiMlJoYkMxcGJtNWxjaTF3WVdSa2FXNW5PaUFrYzNCaFkyVnlJQ29nTVM0MUlDRmtaV1poZFd4ME8xeHlYRzRrYlc5a1lXd3RaR2xoYkc5bkxXMWhjbWRwYmpvZ01TNDFjbVZ0SUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkcxdlpHRnNMV052Ym5SbGJuUXRZbTl5WkdWeUxYZHBaSFJvT2lBd2NIZ2dJV1JsWm1GMWJIUTdYSEpjYmlSdGIyUmhiQzFqYjI1MFpXNTBMV0p2ZUMxemFHRmtiM2N0ZUhNNklEQWdNbkI0SURFMmNIZ2dNQ0J5WjJKaEtDUmliR0ZqYXl3Z01DNDBOU2tnSVdSbFptRjFiSFE3WEhKY2JpUnRiMlJoYkMxamIyNTBaVzUwTFdKdmVDMXphR0ZrYjNjdGMyMHRkWEE2SURBZ01uQjRJREl3Y0hnZ01DQnlaMkpoS0NSaWJHRmpheXdnTUM0ME5Ta2dJV1JsWm1GMWJIUTdYSEpjYmlSdGIyUmhiQzFvWldGa1pYSXRZbTl5WkdWeUxYZHBaSFJvT2lBd2NIZ2dJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtiVzlrWVd3dGFHVmhaR1Z5TFhCaFpHUnBibWN0ZVRvZ01DNHlOWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKRzF2WkdGc0xXaGxZV1JsY2kxd1lXUmthVzVuTFhnNklDUnRiMlJoYkMxcGJtNWxjaTF3WVdSa2FXNW5JQ0ZrWldaaGRXeDBPMXh5WEc0a2JXOWtZV3d0YUdWaFpHVnlMWEJoWkdScGJtYzZJQ1J0YjJSaGJDMW9aV0ZrWlhJdGNHRmtaR2x1WnkxNElDUnRiMlJoYkMxb1pXRmtaWEl0Y0dGa1pHbHVaeTE0SUNSdGIyUmhiQzFvWldGa1pYSXRjR0ZrWkdsdVp5MTVJQ0ZrWldaaGRXeDBPeUF2THlCTFpXVndJSFJvYVhNZ1ptOXlJR0poWTJ0M1lYSmtjeUJqYjIxd1lYUnBZbWxzYVhSNVhISmNiaVJ0YjJSaGJDMW1iMjkwWlhJdGNHRmtaR2x1WnpvZ0pHMXZaR0ZzTFdobFlXUmxjaTF3WVdSa2FXNW5MWGtnSkcxdlpHRnNMV2hsWVdSbGNpMXdZV1JrYVc1bkxYZ2dKRzF2WkdGc0xXaGxZV1JsY2kxd1lXUmthVzVuTFhnZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNWNjbHh1SkcxdlpHRnNMV3huT2lBMU1ISmxiU0FoWkdWbVlYVnNkRHRjY2x4dUpHMXZaR0ZzTFcxa09pQXpOWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKRzF2WkdGc0xYTnRPaUF5TWk0MWNtVnRJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVKRzF2WkdGc0xXWmhaR1V0ZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMHhNREJ3ZUNrZ2MyTmhiR1VvTUM0NEtTQWhaR1ZtWVhWc2REdGNjbHh1SkcxdlpHRnNMWE5vYjNjdGRISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLREFwSUhOallXeGxLREVwSUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkcxdlpHRnNMWFJ5WVc1emFYUnBiMjR0WkhWeVlYUnBiMjQ2SURBdU1UVnpJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1SkcxdlpHRnNMWFJ5WVc1emFYUnBiMjQ2SUhSeVlXNXpabTl5YlNBa2JXOWtZV3d0ZEhKaGJuTnBkR2x2Ymkxa2RYSmhkR2x2YmlCbFlYTmxMVzkxZENBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmlSdGIyUmhiQzF6YVcxd2JHVXRjR0ZrWkdsdVp6b2dNM0psYlNBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JpUnRiMlJoYkMxemFXMXdiR1V0WTJ4dmMyVXRjRzl6YVhScGIyNDZJREZ5WlcwZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNWNjbHh1THk4Z0tpQkJiR1Z5ZEhOY2NseHVMeThnS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLbHh5WEc1Y2NseHVKR0ZzWlhKMExYQmhaR1JwYm1jdGVUb2dKSE53WVdObGNpQXFJREF1T1RNM05TQWhaR1ZtWVhWc2REdGNjbHh1SkdGc1pYSjBMWEJoWkdScGJtY3RlRG9nSkhOd1lXTmxjaUFxSURBdU9UTTNOU0FoWkdWbVlYVnNkRHRjY2x4dUpHRnNaWEowTFdKdmNtUmxjaTEzYVdSMGFEb2dNQ0FoWkdWbVlYVnNkRHRjY2x4dUpHRnNaWEowTFdKbkxYTmpZV3hsT2lBdE9EUWxJQ0ZrWldaaGRXeDBPMXh5WEc0a1lXeGxjblF0WW05eVpHVnlMWE5qWVd4bE9pQXROekFsSUNGa1pXWmhkV3gwTzF4eVhHNGtZV3hsY25RdFkyOXNiM0l0YzJOaGJHVTZJREFsSUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1THk4Z0tpQlFjbTluY21WemN5QmlZWEp6WEhKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNjbHh1WEhKY2JpUndjbTluY21WemN5MW9aV2xuYUhRNklEQXVOelZ5WlcwZ0lXUmxabUYxYkhRN1hISmNiaVJ3Y205bmNtVnpjeTFtYjI1MExYTnBlbVU2SURBdU5qSTFjbVZ0SUNGa1pXWmhkV3gwTzF4eVhHNGtjSEp2WjNKbGMzTXRZbWM2SUNSbmNtRjVMVEV3TUNBaFpHVm1ZWFZzZER0Y2NseHVKSEJ5YjJkeVpYTnpMV0p2Y21SbGNpMXlZV1JwZFhNNklERXdjbVZ0SUNGa1pXWmhkV3gwTzF4eVhHNGtjSEp2WjNKbGMzTXRZbUZ5TFdOdmJHOXlPaUFrZDJocGRHVWdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNHZMeUJNYVhOMElHZHliM1Z3WEhKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNjbHh1WEhKY2JpOHZJSE5qYzNNdFpHOWpjeTF6ZEdGeWRDQnNhWE4wTFdkeWIzVndMWFpoY21saFlteGxjMXh5WEc0a2JHbHpkQzFuY205MWNDMWpiMnh2Y2pvZ0pHSnZaSGt0WTI5c2IzSWdJV1JsWm1GMWJIUTdYSEpjYmlSc2FYTjBMV2R5YjNWd0xXSm5PaUIwY21GdWMzQmhjbVZ1ZENBaFpHVm1ZWFZzZER0Y2NseHVKR3hwYzNRdFozSnZkWEF0WW05eVpHVnlMV052Ykc5eU9pQWtZbTl5WkdWeUxXTnZiRzl5SUNGa1pXWmhkV3gwTzF4eVhHNGtiR2x6ZEMxbmNtOTFjQzFwZEdWdExYQmhaR1JwYm1jdGVUb2dNQzQxT0hKbGJTQWhaR1ZtWVhWc2REdGNjbHh1Skd4cGMzUXRaM0p2ZFhBdGFYUmxiUzF3WVdSa2FXNW5MWGc2SURBdU9UTTNOWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKR3hwYzNRdFozSnZkWEF0YVhSbGJTMWpiMnh2Y2kxelkyRnNaVG9nTUNVZ0lXUmxabUYxYkhRN1hISmNiaVJzYVhOMExXZHliM1Z3TFdKdmNtUmxjaTF5WVdScGRYTTZJQ1JpYjNKa1pYSXRjbUZrYVhWekxXeG5JQ0ZrWldaaGRXeDBPMXh5WEc0a2JHbHpkQzFuY205MWNDMXBkR1Z0TFdKbkxXaHZkbVZ5TFhOallXeGxPaUExSlNBaFpHVm1ZWFZzZERzZ0x5OGdJQ2hqS1Z4eVhHNWNjbHh1Skd4cGMzUXRaM0p2ZFhBdGFHOTJaWEl0WW1jNklISm5ZbUVvSkdKc1lXTnJMQ0F3TGpBMktTQWhaR1ZtWVhWc2REdGNjbHh1Skd4cGMzUXRaM0p2ZFhBdFlXTjBhWFpsTFdOdmJHOXlPaUFrZDJocGRHVWdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtiR2x6ZEMxbmNtOTFjQzFrYVhOaFlteGxaQzFqYjJ4dmNqb2dKSFJsZUhRdGJHbG5hSFJsY2lBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmlSc2FYTjBMV2R5YjNWd0xXRmpkR2x2YmkxamIyeHZjam9nSkhSbGVIUXRiWFYwWldRdGFHOTJaWElnSVdSbFptRjFiSFE3WEhKY2JpUnNhWE4wTFdkeWIzVndMV0ZqZEdsdmJpMW9iM1psY2kxamIyeHZjam9nSkdKdlpIa3RZMjlzYjNJZ0lXUmxabUYxYkhRN1hISmNiaVJzYVhOMExXZHliM1Z3TFdGamRHbHZiaTFoWTNScGRtVXRZbWM2SUNSbmNtRjVMVFV3SUNGa1pXWmhkV3gwTzF4eVhHNHZMeUJ6WTNOekxXUnZZM010Wlc1a0lHeHBjM1F0WjNKdmRYQXRkbUZ5YVdGaWJHVnpYSEpjYmx4eVhHNHZMeUFxSUVsdFlXZGxJSFJvZFcxaWJtRnBiSE5jY2x4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHlYRzVjY2x4dUpIUm9kVzFpYm1GcGJDMXdZV1JrYVc1bk9pQXdJQ0ZrWldaaGRXeDBPMXh5WEc0a2RHaDFiV0p1WVdsc0xXSm5PaUIwY21GdWMzQmhjbVZ1ZENBaFpHVm1ZWFZzZER0Y2NseHVKSFJvZFcxaWJtRnBiQzFpYjNKa1pYSXRkMmxrZEdnNklEQndlQ0FoWkdWbVlYVnNkRHRjY2x4dUpIUm9kVzFpYm1GcGJDMWliM0prWlhJdGNtRmthWFZ6T2lBd2NIZ2dJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNHZMeUFxSUVacFozVnlaWE5jY2x4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHlYRzVjY2x4dUpHWnBaM1Z5WlMxallYQjBhVzl1TFdOdmJHOXlPaUFrZEdWNGRDMXRkWFJsWkNBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmk4dklDb2dRbkpsWVdSamNuVnRZbk5jY2x4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHlYRzVjY2x4dUpHSnlaV0ZrWTNKMWJXSXRjR0ZrWkdsdVp5MTVPaUF3SUNGa1pXWmhkV3gwTzF4eVhHNGtZbkpsWVdSamNuVnRZaTF3WVdSa2FXNW5MWGc2SURBZ0lXUmxabUYxYkhRN1hISmNiaVJpY21WaFpHTnlkVzFpTFdsMFpXMHRjR0ZrWkdsdVp5MTRPaUF3TGpWeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSaWNtVmhaR055ZFcxaUxXMWhjbWRwYmkxaWIzUjBiMjA2SURGeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSaWNtVmhaR055ZFcxaUxXSm5PaUIwY21GdWMzQmhjbVZ1ZENBaFpHVm1ZWFZzZER0Y2NseHVKR0p5WldGa1kzSjFiV0l0WkdsMmFXUmxjaTFqYjJ4dmNqb2dKSFJsZUhRdGJYVjBaV1FnSVdSbFptRjFiSFE3WEhKY2JpUmljbVZoWkdOeWRXMWlMV0ZqZEdsMlpTMWpiMnh2Y2pvZ0pHSnZaSGt0WTI5c2IzSWdJV1JsWm1GMWJIUTdYSEpjYmlSaWNtVmhaR055ZFcxaUxXUnBkbWxrWlhJNklDY3ZKeUFoWkdWbVlYVnNkRHRjY2x4dUpHSnlaV0ZrWTNKMWJXSXRaR2wyYVdSbGNpMW1iR2x3Y0dWa09pQW5YRnhjWENjZ0lXUmxabUYxYkhRN1hISmNiaVJpY21WaFpHTnlkVzFpTFdOdmJHOXlPaUFrWW05a2VTMWpiMnh2Y2lBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JseHlYRzR2THlBcUlFTmhjbTkxYzJWc1hISmNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjY2x4dUpHTmhjbTkxYzJWc0xXTnZiblJ5YjJ3dFkyOXNiM0k2SUNSM2FHbDBaU0FoWkdWbVlYVnNkRHRjY2x4dUpHTmhjbTkxYzJWc0xXTnZiblJ5YjJ3dGQybGtkR2c2SURFMEpTQWhaR1ZtWVhWc2REdGNjbHh1SkdOaGNtOTFjMlZzTFdOdmJuUnliMnd0YVdOdmJpMTNhV1IwYURvZ01pNDFOWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKR05oY205MWMyVnNMV052Ym5SeWIyd3RiM0JoWTJsMGVUb2dNU0FoWkdWbVlYVnNkRHRjY2x4dUpHTmhjbTkxYzJWc0xXTnZiblJ5YjJ3dGFHOTJaWEl0YjNCaFkybDBlVG9nTVNBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmlSallYSnZkWE5sYkMxamIyNTBjbTlzTFhCeVpYWXRhV052YmkxaVp6b2dkWEpzS0Z3aVpHRjBZVHBwYldGblpTOXpkbWNyZUcxc0xDVXpRM04yWnlCNGJXeHVjejBuYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNuSUhkcFpIUm9QU2N5TkNjZ2FHVnBaMmgwUFNjeU5DY2dkbWxsZDBKdmVEMG5NQ0F3SURJMElESTBKeUJ6ZEhsc1pUMG5abWxzYkRvZ0kzc2tZMkZ5YjNWelpXd3RZMjl1ZEhKdmJDMWpiMnh2Y24wN2RISmhibk5tYjNKdE9pQTdiWE5HYVd4MFpYSTZPeWNsTTBVbE0wTndZWFJvSUdROUowMHhNeTR5T1RNZ05pNHlPVE1nTnk0MU9EWWdNVEpzTlM0M01EY2dOUzQzTURjZ01TNDBNVFF0TVM0ME1UUk1NVEF1TkRFMElERXliRFF1TWprekxUUXVNamt6ZWljbE0wVWxNME12Y0dGMGFDVXpSU1V6UXk5emRtY2xNMFZjSWlrZ0lXUmxabUYxYkhRN1hISmNiaVJqWVhKdmRYTmxiQzFqYjI1MGNtOXNMVzVsZUhRdGFXTnZiaTFpWnpvZ2RYSnNLRndpWkdGMFlUcHBiV0ZuWlM5emRtY3JlRzFzTENVelEzTjJaeUI0Yld4dWN6MG5hSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY25JSGRwWkhSb1BTY3lOQ2NnYUdWcFoyaDBQU2N5TkNjZ2RtbGxkMEp2ZUQwbk1DQXdJREkwSURJMEp5QnpkSGxzWlQwblptbHNiRG9nSTNza1kyRnliM1Z6Wld3dFkyOXVkSEp2YkMxamIyeHZjbjA3ZEhKaGJuTm1iM0p0T2lBN2JYTkdhV3gwWlhJNk95Y2xNMFVsTTBOd1lYUm9JR1E5SjAweE1DNDNNRGNnTVRjdU56QTNJREUyTGpReE5DQXhNbXd0TlM0M01EY3ROUzQzTURjdE1TNDBNVFFnTVM0ME1UUk1NVE11TlRnMklERXliQzAwTGpJNU15QTBMakk1TTNvbkpUTkZKVE5ETDNCaGRHZ2xNMFVsTTBNdmMzWm5KVE5GWENJcElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OGdVM0JwYm01bGNuTmNjbHh1THk4Z0tpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2x4eVhHNWNjbHh1SkhOd2FXNXVaWEl0ZDJsa2RHZ3RiR2M2SUROeVpXMGdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzRrYzNCcGJtNWxjaTFvWldsbmFIUXRiR2M2SUNSemNHbHVibVZ5TFhkcFpIUm9MV3huSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpITndhVzV1WlhJdFltOXlaR1Z5TFhkcFpIUm9MV3huT2lBd0xqTmxiU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmx4eVhHNHZMeUFxSUVOc2IzTmxYSEpjYmk4dklDb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lwY2NseHVYSEpjYmlSaWRHNHRZMnh2YzJVdGQybGtkR2c2SURBdU9HVnRJQ0ZrWldaaGRXeDBPMXh5WEc0a1luUnVMV05zYjNObExXaGxhV2RvZERvZ0pHSjBiaTFqYkc5elpTMTNhV1IwYUNBaFpHVm1ZWFZzZER0Y2NseHVKR0owYmkxamJHOXpaUzFqYjJ4dmNqb2dKSFJsZUhRdGJYVjBaV1FnSVdSbFptRjFiSFE3WEhKY2JpUmlkRzR0WTJ4dmMyVXRZbWM2SUhWeWJDaGNJbVJoZEdFNmFXMWhaMlV2YzNabkszaHRiQ3dsTTBOemRtY2dkMmxrZEdnOUp6RTFNSEI0SnlCb1pXbG5hSFE5SnpFMU1YQjRKeUIyYVdWM1FtOTRQU2N3SURBZ01UVXdJREUxTVNjZ2RtVnljMmx2Ymowbk1TNHhKeUI0Yld4dWN6MG5hSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY25JSGh0Ykc1ek9uaHNhVzVyUFNkb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eE9UazVMM2hzYVc1ckp5VXpSU1V6UTJSbFpuTWxNMFVsTTBOd2IyeDVaMjl1SUdsa1BTZHdZWFJvTFRFbklIQnZhVzUwY3owbk1UTXhMakkxTVRZMU55QXdJRGMwTGprNU16TTNNRFVnTlRZdU1qVWdNVGd1TnpRNE16UXlOaUF3SURBZ01UZ3VOelVnTlRZdU1qUTFNREkzT0NBM05TQXdJREV6TVM0eU5TQXhPQzQzTkRnek5ESTJJREUxTUNBM05DNDVPVE16TnpBMUlEa3pMamMxSURFek1TNHlOVEUyTlRjZ01UVXdJREUxTUNBeE16RXVNalVnT1RNdU56VTBPVGN5TWlBM05TQXhOVEFnTVRndU56VW5KVE5GSlROREwzQnZiSGxuYjI0bE0wVWxNME12WkdWbWN5VXpSU1V6UTJjZ2FXUTlKL0NmanFndEpUVkNVMlYwZFhBbE5VUTZMVU52Ykc5eWN5MG1ZVzF3T3kxVGFHRmtiM2R6SnlCemRISnZhMlU5SjI1dmJtVW5JSE4wY205clpTMTNhV1IwYUQwbk1TY2dabWxzYkQwbmJtOXVaU2NnWm1sc2JDMXlkV3hsUFNkbGRtVnViMlJrSnlVelJTVXpRMmNnYVdROUowRnlkR0p2WVhKa0p5QjBjbUZ1YzJadmNtMDlKM1J5WVc1emJHRjBaU2d0TWpJMUxqQXdNREF3TUN3Z0xUSTFNQzR3TURBd01EQXBKeVV6UlNVelEyY2dhV1E5SjBsamIyNHRRMjlzYjNJbklIUnlZVzV6Wm05eWJUMG5kSEpoYm5Oc1lYUmxLREl5TlM0d01EQXdNREFzSURJMU1DNDFNREF3TURBcEp5VXpSU1V6UTNWelpTQm1hV3hzUFNjamV5UmlkRzR0WTJ4dmMyVXRZMjlzYjNKOUp5QjRiR2x1YXpwb2NtVm1QU2NsTWpOd1lYUm9MVEVuSlRORkpUTkRMM1Z6WlNVelJTVXpRM1Z6WlNCbWFXeHNMVzl3WVdOcGRIazlKekF1TlNjZ1ptbHNiRDBuSTNza1luUnVMV05zYjNObExXTnZiRzl5ZlNjZ2VHeHBibXM2YUhKbFpqMG5KVEl6Y0dGMGFDMHhKeVV6UlNVelF5OTFjMlVsTTBVbE0wTXZaeVV6UlNVelF5OW5KVE5GSlROREwyY2xNMFVsTTBNdmMzWm5KVE5GWENJcElDRmtaV1poZFd4ME8xeHlYRzRrWW5SdUxXTnNiM05sTFdadlkzVnpMWE5vWVdSdmR6b2dibTl1WlNBaFpHVm1ZWFZzZER0Y2NseHVKR0owYmkxamJHOXpaUzF2Y0dGamFYUjVPaUF3TGprMUlDRmtaV1poZFd4ME8xeHlYRzRrWW5SdUxXTnNiM05sTFdodmRtVnlMVzl3WVdOcGRIazZJREF1T1RVZ0lXUmxabUYxYkhRN1hISmNiaVJpZEc0dFkyeHZjMlV0Wm05amRYTXRiM0JoWTJsMGVUb2dNQzQ1TlNBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmlSamJHOXpaUzFtYjI1MExYZGxhV2RvZERvZ016QXdJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1WEhKY2JpOHZJQ29nVDJabVkyRnVkbUZ6WEhKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNjbHh1WEhKY2JpOHZJSE5qYzNNdFpHOWpjeTF6ZEdGeWRDQnZabVpqWVc1MllYTXRkbUZ5YVdGaWJHVnpYSEpjYmlSdlptWmpZVzUyWVhNdGRISmhibk5wZEdsdmJpMWtkWEpoZEdsdmJqb2dNQzR5TlhNZ0lXUmxabUYxYkhRN1hISmNiaTh2SUhOamMzTXRaRzlqY3kxbGJtUWdiMlptWTJGdWRtRnpMWFpoY21saFlteGxjMXh5WEc1Y2NseHVMeThnVlhScGJHbDBhV1Z6WEhKY2JpUnZkbVZ5Wm14dmQzTTZJR0YxZEc4c0lHaHBaR1JsYml3Z2MyTnliMnhzTENCMmFYTnBZbXhsSUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1THk4Z1EyOXVabWxuWEhKY2JpUnlkR3d0YzNWd2NHOXlkRG9nWm1Gc2MyVWdJV1JsWm1GMWJIUTdYSEpjYmlSa1lYSnJMWE4wZVd4bE9pQm1ZV3h6WlNBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmk4dklDb2dRMmhsZG5KdmJpQkpZMjl1YzF4eVhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLbHh5WEc1Y2NseHVKR05vWlhaeWIyNHRkWEE2SUZ3aVpHRjBZVHBwYldGblpTOXpkbWNyZUcxc0xDVXpRM04yWnlCM2FXUjBhRDBuTVRCd2VDY2dhR1ZwWjJoMFBTYzJjSGduSUhacFpYZENiM2c5SnpBZ01DQXhNQ0EySnlCMlpYSnphVzl1UFNjeExqRW5JSGh0Ykc1elBTZG9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5Y2dlRzFzYm5NNmVHeHBibXM5SjJoMGRIQTZMeTkzZDNjdWR6TXViM0puTHpFNU9Ua3ZlR3hwYm1zbkpUTkZKVE5EWkdWbWN5VXpSU1V6UTNCdmJIbG5iMjRnYVdROUozQmhkR2d0TVNjZ2NHOXBiblJ6UFNjd0lEUXVOVGM1TmpFek5qSWdNUzR5TXpnNE1qazFNU0ExTGpjeE5ESTROVGN4SURVZ01pNHlOamt6TkRReE9TQTRMamMyTVRFM01EUTVJRFV1TnpFME1qZzFOekVnTVRBZ05DNDFOemsyTVRNMk1pQTFJREFuSlRORkpUTkRMM0J2YkhsbmIyNGxNMFVsTTBNdlpHVm1jeVV6UlNVelEyY2dhV1E5SitLYW1lKzRqeTFUZVcxaWIyeHpKeUJ6ZEhKdmEyVTlKMjV2Ym1VbklITjBjbTlyWlMxM2FXUjBhRDBuTVNjZ1ptbHNiRDBuYm05dVpTY2dabWxzYkMxeWRXeGxQU2RsZG1WdWIyUmtKeVV6UlNVelEyY2dhV1E5SnpNeEtTMUVZWFJoVkdGaWJHVnpKeUIwY21GdWMyWnZjbTA5SjNSeVlXNXpiR0YwWlNndE1qZzVMakF3TURBd01Dd2dMVFkwTGpBd01EQXdNQ2tuSlRORkpUTkRaeUJwWkQwblZHRmliR1V0UW1GemFXTW5JSFJ5WVc1elptOXliVDBuZEhKaGJuTnNZWFJsS0RBdU1EQXdNREF3TENBMU1pNHdNREF3TURBcEp5VXpSU1V6UTJjZ2FXUTlKMVJoWW14bExVaGxZV1JsY2ljZ2RISmhibk5tYjNKdFBTZDBjbUZ1YzJ4aGRHVW9NVGt1TURBd01EQXdMQ0F4TUM0d01EQXdNREFwSnlVelJTVXpRMmNnYVdROUowZHliM1Z3SnlCMGNtRnVjMlp2Y20wOUozUnlZVzV6YkdGMFpTZ3lOekF1TURBd01EQXdMQ0F3TGpBd01EQXdNQ2tuSlRORkpUTkRaeUJwWkQwblNXTnZiaTFEYjJ4dmNpY2dkSEpoYm5ObWIzSnRQU2QwY21GdWMyeGhkR1VvTUM0d01EQXdNREFzSURJdU1UUXlPRFUzS1NjbE0wVWxNME4xYzJVZ1ptbHNiRDBuSTN0emRISXRjbVZ3YkdGalpTZ2plM0puWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVFV3TUN3a2NtZGlZUzEwYnkxb1pYZ3RZbWNwZlN3bkl5Y3NJQ2NsTWpNbktYMG5JSGhzYVc1ck9taHlaV1k5SnlVeU0zQmhkR2d0TVNjbE0wVWxNME12ZFhObEpUTkZKVE5EZFhObElHWnBiR3d0YjNCaFkybDBlVDBuTUM0MUp5Qm1hV3hzUFNjamUzTjBjaTF5WlhCc1lXTmxLQ043Y21kaVlTMTBieTFvWlhnb0pHZHlZWGt0TlRBd0xDUnlaMkpoTFhSdkxXaGxlQzFpWnlsOUxDY2pKeXdnSnlVeU15Y3BmU2NnZUd4cGJtczZhSEpsWmowbkpUSXpjR0YwYUMweEp5VXpSU1V6UXk5MWMyVWxNMFVsTTBNdlp5VXpSU1V6UXk5bkpUTkZKVE5ETDJjbE0wVWxNME12WnlVelJTVXpReTluSlRORkpUTkRMMmNsTTBVbE0wTXZjM1puSlRORlhDSTdYSEpjYmlSamFHVjJjbTl1TFdSdmQyNDZJRndpWkdGMFlUcHBiV0ZuWlM5emRtY3JlRzFzTENVelEzTjJaeUIzYVdSMGFEMG5NVEJ3ZUNjZ2FHVnBaMmgwUFNjMmNIZ25JSFpwWlhkQ2IzZzlKekFnTUNBeE1DQTJKeUIyWlhKemFXOXVQU2N4TGpFbklIaHRiRzV6UFNkb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnljZ2VHMXNibk02ZUd4cGJtczlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MekU1T1RrdmVHeHBibXNuSlRORkpUTkRaR1ZtY3lVelJTVXpRM0J2YkhsbmIyNGdhV1E5SjNCaGRHZ3RNU2NnY0c5cGJuUnpQU2M0TGpjMk1URTNNRFE1SURBZ05TQXpMalEwTkRrME1UVXlJREV1TWpNNE9ESTVOVEVnTUNBd0lERXVNVE0wTmpjeU1TQTFJRFV1TnpFME1qZzFOekVnTVRBZ01TNHhNelEyTnpJeEp5VXpSU1V6UXk5d2IyeDVaMjl1SlRORkpUTkRMMlJsWm5NbE0wVWxNME5uSUdsa1BTZmltcG52dUk4dFUzbHRZbTlzY3ljZ2MzUnliMnRsUFNkdWIyNWxKeUJ6ZEhKdmEyVXRkMmxrZEdnOUp6RW5JR1pwYkd3OUoyNXZibVVuSUdacGJHd3RjblZzWlQwblpYWmxibTlrWkNjbE0wVWxNME5uSUdsa1BTY3pNU2t0UkdGMFlWUmhZbXhsY3ljZ2RISmhibk5tYjNKdFBTZDBjbUZ1YzJ4aGRHVW9MVEk0T1M0d01EQXdNREFzSUMwM05pNHdNREF3TURBcEp5VXpSU1V6UTJjZ2FXUTlKMVJoWW14bExVSmhjMmxqSnlCMGNtRnVjMlp2Y20wOUozUnlZVzV6YkdGMFpTZ3dMakF3TURBd01Dd2dOVEl1TURBd01EQXdLU2NsTTBVbE0wTm5JR2xrUFNkVVlXSnNaUzFJWldGa1pYSW5JSFJ5WVc1elptOXliVDBuZEhKaGJuTnNZWFJsS0RFNUxqQXdNREF3TUN3Z01UQXVNREF3TURBd0tTY2xNMFVsTTBObklHbGtQU2RIY205MWNDY2dkSEpoYm5ObWIzSnRQU2QwY21GdWMyeGhkR1VvTWpjd0xqQXdNREF3TUN3Z01USXVNREF3TURBd0tTY2xNMFVsTTBObklHbGtQU2RKWTI5dUxVTnZiRzl5SnlCMGNtRnVjMlp2Y20wOUozUnlZVzV6YkdGMFpTZ3dMakF3TURBd01Dd2dNaTR4TkRJNE5UY3BKeVV6UlNVelEzVnpaU0JtYVd4c1BTY2plM04wY2kxeVpYQnNZV05sS0NON2NtZGlZUzEwYnkxb1pYZ29KR2R5WVhrdE5UQXdMQ1J5WjJKaExYUnZMV2hsZUMxaVp5bDlMQ2NqSnl3Z0p5VXlNeWNwZlNjZ2VHeHBibXM2YUhKbFpqMG5KVEl6Y0dGMGFDMHhKeVV6UlNVelF5OTFjMlVsTTBVbE0wTjFjMlVnWm1sc2JDMXZjR0ZqYVhSNVBTY3dMamduSUdacGJHdzlKeU43YzNSeUxYSmxjR3hoWTJVb0kzdHlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMDFNREFzSkhKblltRXRkRzh0YUdWNExXSm5LWDBzSnlNbkxDQW5KVEl6SnlsOUp5QjRiR2x1YXpwb2NtVm1QU2NsTWpOd1lYUm9MVEVuSlRORkpUTkRMM1Z6WlNVelJTVXpReTluSlRORkpUTkRMMmNsTTBVbE0wTXZaeVV6UlNVelF5OW5KVE5GSlROREwyY2xNMFVsTTBNdlp5VXpSU1V6UXk5emRtY2xNMFZjSWp0Y2NseHVJaXdpTHk4Z1ZtRnlhV0ZpYkdWelhISmNiaTh2WEhKY2JpOHZJRlpoY21saFlteGxjeUJ6YUc5MWJHUWdabTlzYkc5M0lIUm9aU0JnSkdOdmJYQnZibVZ1ZEMxemRHRjBaUzF3Y205d1pYSjBlUzF6YVhwbFlDQm1iM0p0ZFd4aElHWnZjaUFnWTI5dWMybHpkR1Z1ZENCdVlXMXBibWN1SUVWNE9pQWtibUYyTFd4cGJtc3RaR2x6WVdKc1pXUXRZMjlzYjNJZ1lXNWtJQ1J0YjJSaGJDMWpiMjUwWlc1MExXSnZlQzF6YUdGa2IzY3RlSE11WEhKY2JpOHZJQ2hES1NCRGRYTjBiMjBnZG1GeWFXRmliR1Z6SUdadmNpQmxlSFJsYm1SbFpDQmpiMjF3YjI1bGJuUnpJRzltSUdKdmIzUnpkSEpoY0NCdmJteDVYSEpjYmk4dlhISmNiaTh2SUQ4Z1ZHOGdZMmhoYm1kbElIUm9aU0JzWVhsdmRYUWdZMjlzYjNKeklIbHZkU0JxZFhOMElHNWxaV1FnZEc4Z1kyaGhibWRsSUhSb1pTQWtZbUZ6WlNCaGJtUWdKR0p2WkhrdFltY2dZMjlzYjNKeklHRnVaQ0J5WlhOMElDaGliM0prWlhJc0lHTmhjbVFzSUdadmJuUWdZMjlzYjNKeklHRnVaQ0JsZEdNdUxpNHBJSGRwYkd3Z1ltVWdZV1JxZFhOMElHRjFkRzl0WVhScFkyRnNiSGt1WEhKY2JpOHZJRDhnVlhObElHaDBkSEJ6T2k4dmJtOWxiR1JsYkdkaFpHOHVaMmwwYUhWaUxtbHZMM05vWVdSdmQyeHZjbVF2SUhSdklITmxiR1ZqZENCd2NtOXdaWElnOEorU2hDQkRiMnh2Y2lCMGFXNTBjeUJoYm1RZ2MyaGhaR1VnWm05eUlDUmliR0ZqYXlCaGJtUWdKR0p2WkhrdFltY2dZMjlzYjNJdVhISmNiaTh2SUQ4Z1kyOXNiM0l0ZG1GeWFXRmliR1Z6SUdGdVpDQjBhR1Z0WlMxamIyeHZjaTEyWVhKcFlXSnNaWE1nS0dKeVlXNWthVzVuSUdOdmJHOXljeWtnWTJGdUlHSmxJR05vYjI5elpTQmhjeUJ3WlhJZ2VXOTFjaUJ3Y21WbVpYSmxibU5sY3k0Z1YyVWdjM1ZuWjJWemRDQjViM1VnZEc4Z2RYTmxJR2gwZEhCek9pOHZZMjlzYjNKekxtVjJZUzVrWlhOcFoyNHZYSEpjYmk4dklDRWdUR2xuYUhRZ2MzUjViR1VnZFhObElDUmlZWE5sSUhSdklHZGxibVZ5WVhSbElIUm9aU0FrWjNKaGVTQnphR0ZrWlhNdVhISmNiaTh2SUNFZ1gzWmhjbWxoWW14bExXUmhjbXN1YzJOemN5Qm1hV3hsSUc5MlpYSnlhV1JsY3lCZmRtRnlhV0ZpYkdVdWMyTnpjeUJtYVd4bExseHlYRzVjY2x4dUx5OGdLaUJEYjJ4dmNuTmNjbHh1THk4Z0tpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2x4eVhHNWNjbHh1THk4Z2MyTnpjeTFrYjJOekxYTjBZWEowSUdkeVlYa3RZMjlzYjNJdGRtRnlhV0ZpYkdWelhISmNiaVIzYUdsMFpUb2dJMlptWmlBaFpHVm1ZWFZzZER0Y2NseHVKR0pzWVdOck9pQWpNREF3SUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkdKaGMyVTZJQ00zWXpka1lqWWdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzRrWjNKaGVTMHlOVG9nY21kaVlTZ2tkMmhwZEdVc0lEQXVNREUxS1NBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JpUm5jbUY1TFRVd09pQnlaMkpoS0NSM2FHbDBaU3dnTUM0d015a2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzRrWjNKaGVTMHhNREE2SUhKblltRW9KSGRvYVhSbExDQXdMamdwSUNGa1pXWmhkV3gwTzF4eVhHNGtaM0poZVMweU1EQTZJSEpuWW1Fb0pIZG9hWFJsTENBd0xqWXBJQ0ZrWldaaGRXeDBPMXh5WEc0a1ozSmhlUzB6TURBNklISm5ZbUVvSkhkb2FYUmxMQ0F3TGpRcElDRmtaV1poZFd4ME8xeHlYRzRrWjNKaGVTMDBNREE2SUhKblltRW9KSGRvYVhSbExDQXdMak1wSUNGa1pXWmhkV3gwTzF4eVhHNGtaM0poZVMwMU1EQTZJQ1JpWVhObElDRmtaV1poZFd4ME8xeHlYRzRrWjNKaGVTMDJNREE2SUhKblltRW9KR0pzWVdOckxDQXdMakVwSUNGa1pXWmhkV3gwTzF4eVhHNGtaM0poZVMwM01EQTZJSEpuWW1Fb0pHSnNZV05yTENBd0xqRTFLU0FoWkdWbVlYVnNkRHRjY2x4dUpHZHlZWGt0T0RBd09pQnlaMkpoS0NSaWJHRmpheXdnTUM0ME5Ta2dJV1JsWm1GMWJIUTdYSEpjYmlSbmNtRjVMVGt3TURvZ2NtZGlZU2drWW14aFkyc3NJREF1TmpVcElDRmtaV1poZFd4ME8xeHlYRzR2THlCelkzTnpMV1J2WTNNdFpXNWtJR2R5WVhrdFkyOXNiM0l0ZG1GeWFXRmliR1Z6WEhKY2JseHlYRzR2THlCelkzTnpMV1J2WTNNdGMzUmhjblFnWjNKaGVTMWpiMnh2Y25NdGJXRndYSEpjYmlSbmNtRjVjem9nS0Z4eVhHNGdJQ2N5TlNjNklDUm5jbUY1TFRJMUxGeHlYRzRnSUNjMU1DYzZJQ1JuY21GNUxUVXdYSEpjYmlrZ0lXUmxabUYxYkhRN1hISmNiaTh2SUhOamMzTXRaRzlqY3kxbGJtUWdaM0poZVMxamIyeHZjbk10YldGd1hISmNibHh5WEc0dkx5QnpZM056TFdSdlkzTXRjM1JoY25RZ1kyOXNiM0l0ZG1GeWFXRmliR1Z6WEhKY2JpUmliSFZsT2lBak1EQTNZbVptSUNGa1pXWmhkV3gwTzF4eVhHNGthVzVrYVdkdk9pQWpOall4TUdZeUlDRmtaV1poZFd4ME8xeHlYRzRrY0hWeWNHeGxPaUFqTmprMlkyWm1JQ0ZrWldaaGRXeDBPMXh5WEc0a2NHbHVhem9nSTJVNE0yVTRZeUFoWkdWbVlYVnNkRHRjY2x4dUpISmxaRG9nSTJabU0yVXhaQ0FoWkdWbVlYVnNkRHRjY2x4dUpHOXlZVzVuWlRvZ0kyWmtOMlV4TkNBaFpHVm1ZWFZzZER0Y2NseHVKSGxsYkd4dmR6b2dJMlptWVdJd01DQWhaR1ZtWVhWc2REdGNjbHh1SkdkeVpXVnVPaUFqTnpGa1pETTNJQ0ZrWldaaGRXeDBPMXh5WEc0a2RHVmhiRG9nSXpJd1l6azVOeUFoWkdWbVlYVnNkRHRjY2x4dUpHTjVZVzQ2SUNNd00yTXpaV01nSVdSbFptRjFiSFE3WEhKY2JpOHZJSE5qYzNNdFpHOWpjeTFsYm1RZ1kyOXNiM0l0ZG1GeWFXRmliR1Z6WEhKY2JseHlYRzR2THlCelkzTnpMV1J2WTNNdGMzUmhjblFnZEdobGJXVXRZMjlzYjNJdGRtRnlhV0ZpYkdWelhISmNiaVJ3Y21sdFlYSjVPaUFrY0hWeWNHeGxJQ0ZrWldaaGRXeDBPMXh5WEc0a2MyVmpiMjVrWVhKNU9pQWpPRFU1TW1FeklDRmtaV1poZFd4ME8xeHlYRzRrYzNWalkyVnpjem9nSkdkeVpXVnVJQ0ZrWldaaGRXeDBPMXh5WEc0a2FXNW1iem9nSkdONVlXNGdJV1JsWm1GMWJIUTdYSEpjYmlSM1lYSnVhVzVuT2lBa2VXVnNiRzkzSUNGa1pXWmhkV3gwTzF4eVhHNGtaR0Z1WjJWeU9pQWtjbVZrSUNGa1pXWmhkV3gwTzF4eVhHNGtiR2xuYUhRNklDTTBaalV3TldNZ0lXUmxabUYxYkhRN1hISmNiaVJrWVhKck9pQWpObUkyWXpsa0lDRmtaV1poZFd4ME8xeHlYRzRrWjNKaGVUb2dKR2R5WVhrdE1UQXdJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1THk4Z2MyTnpjeTFrYjJOekxXVnVaQ0IwYUdWdFpTMWpiMnh2Y2kxMllYSnBZV0pzWlhOY2NseHVYSEpjYmk4dklITmpjM010Wkc5amN5MXpkR0Z5ZENCMGFHVnRaUzFqYjJ4dmNuTXRiV0Z3WEhKY2JpUjBhR1Z0WlMxamIyeHZjbk02SUNoY2NseHVJQ0FuY0hKcGJXRnllU2M2SUNSd2NtbHRZWEo1TEZ4eVhHNGdJQ2R6WldOdmJtUmhjbmtuT2lBa2MyVmpiMjVrWVhKNUxGeHlYRzRnSUNkemRXTmpaWE56SnpvZ0pITjFZMk5sYzNNc1hISmNiaUFnSjJsdVptOG5PaUFrYVc1bWJ5eGNjbHh1SUNBbmQyRnlibWx1WnljNklDUjNZWEp1YVc1bkxGeHlYRzRnSUNka1lXNW5aWEluT2lBa1pHRnVaMlZ5TEZ4eVhHNGdJQ2RzYVdkb2RDYzZJQ1JzYVdkb2RDeGNjbHh1SUNBblpHRnlheWM2SUNSa1lYSnJMRnh5WEc0Z0lDZG5jbUY1SnpvZ0pHZHlZWGxjY2x4dUtTQWhaR1ZtWVhWc2REdGNjbHh1THk4Z2MyTnpjeTFrYjJOekxXVnVaQ0IwYUdWdFpTMWpiMnh2Y25NdGJXRndYSEpjYmx4eVhHNGtZMjlzYjNJdGMyTm9aVzFsT2lBblpHRnlheWNnSVdSbFptRjFiSFE3SUM4dklDaERLVnh5WEc1Y2NseHVMeThnS2lCQ2IyUjVYSEpjYmk4dklDb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lwY2NseHVYSEpjYmlSaWIyUjVMV0puT2lBak1qTXlNek16SUNGa1pXWmhkV3gwTzF4eVhHNGtjbWRpWVMxMGJ5MW9aWGd0WW1jNklDUmlZWE5sSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpHSnZaSGt0WTI5c2IzSTZJSEpuWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVFF3TUN3Z0pISm5ZbUV0ZEc4dGFHVjRMV0puS1NBaFpHVm1ZWFZzZER0Y2NseHVKSEpuWW1FdGRHOHRhR1Y0TFdKbkxXbHVkbVZ5ZEdWa09pQnlaMklvTVRZd0xDQXhORGtzSURFME9Ta2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzVjY2x4dUx5OGdLaUJEYjIxd2IyNWxiblJ6WEhKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNjbHh1WEhKY2JpOHZJSE5qYzNNdFpHOWpjeTF6ZEdGeWRDQmliM2d0YzJoaFpHOTNMWFpoY21saFlteGxjMXh5WEc0a1ltOTRMWE5vWVdSdmR6b2dNQ0F3TGpJMWNtVnRJREZ5WlcwZ2NtZGlZU2drWW14aFkyc3NJREF1TWlrZ0lXUmxabUYxYkhRN1hISmNiaVJpYjNndGMyaGhaRzkzTFhOdE9pQXdJREF1TVRJMWNtVnRJREF1TWpWeVpXMGdjbWRpWVNna1lteGhZMnNzSURBdU1qVXBJQ0ZrWldaaGRXeDBPMXh5WEc0a1ltOTRMWE5vWVdSdmR5MXNaem9nTUNBd0xqWXlOWEpsYlNBeExqSTFjbVZ0SUhKblltRW9KR0pzWVdOckxDQXdMak1wSUNGa1pXWmhkV3gwTzF4eVhHNHZMeUJ6WTNOekxXUnZZM010Wlc1a0lHSnZlQzF6YUdGa2IzY3RkbUZ5YVdGaWJHVnpYSEpjYmx4eVhHNHZMeUFrWVd4bGNuUXRZbWN0YzJOaGJHVTZJQzA0TkNVZ0lXUmxabUYxYkhRN1hISmNiaTh2SUNSaGJHVnlkQzFpYjNKa1pYSXRjMk5oYkdVNklDMDBNQ1VnSVdSbFptRjFiSFE3WEhKY2JpOHZJQ1JoYkdWeWRDMWpiMnh2Y2kxelkyRnNaVG9nTUNVZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a1ltOXlaR1Z5TFdOdmJHOXlPaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzA0TURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN1hISmNiaVJpYjNKa1pYSXRhVzV1WlhJdFkyOXNiM0k2SUhKblltRW9KSGRvYVhSbExDQXdMakE1S1NBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JseHlYRzRrWm14dllYUnBibWN0WTI5dGNHOXVaVzUwTFdKdmNtUmxjaTFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblFnSVdSbFptRjFiSFE3SUM4dklDaERLVnh5WEc0a1pteHZZWFJwYm1jdFkyOXRjRzl1Wlc1MExYTm9ZV1J2ZHpvZ0pHSnZlQzF6YUdGa2IzY2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzVjY2x4dUx5OGdLaUJVZVhCdlozSmhjR2g1WEhKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNjbHh1SkdobFlXUnBibWR6TFdOdmJHOXlPaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzB5TURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN1hISmNiaVIwWlhoMExXMTFkR1ZrT2lCeVoySmhMWFJ2TFdobGVDZ2taM0poZVMwMk1EQXNJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a2dJV1JsWm1GMWJIUTdYSEpjYmlSMFpYaDBMVzExZEdWa0xXaHZkbVZ5T2lCeVoySmhMWFJ2TFdobGVDZ2tkMmhwZEdVc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4eVhHNWNjbHh1SkhSbGVIUXRiR2xuYUhRNklISm5ZbUV0ZEc4dGFHVjRLQ1JuY21GNUxUVXdNQ3dnSkhKblltRXRkRzh0YUdWNExXSm5LU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmlSMFpYaDBMV3hwWjJoMFpYSTZJSEpuWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVFF3TUN3Z0pISm5ZbUV0ZEc4dGFHVjRMV0puS1NBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEhKY2JpUjBaWGgwTFd4cFoyaDBaWE4wT2lCeVoySmhMWFJ2TFdobGVDZ2taM0poZVMwek1EQXNJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHlYRzVjY2x4dUx5OGdLaUJVWVdKc1pYTmNjbHh1THk4Z0tpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2x4eVhHNWNjbHh1SkhSaFlteGxMWE4wY21sd1pXUXRZbWN0Wm1GamRHOXlPaUF3TGpBNElDRmtaV1poZFd4ME8xeHlYRzRrZEdGaWJHVXRjM1J5YVhCbFpDMWlaem9nY21kaVlTZ2taM0poZVMwMU1EQXNJQ1IwWVdKc1pTMXpkSEpwY0dWa0xXSm5MV1poWTNSdmNpa2dJV1JsWm1GMWJIUTdYSEpjYmk4dklDUjBZV0pzWlMxemRISnBjR1ZrTFdKbk9pQnlaMkpoTFhSdkxXaGxlQ2h5WjJKaEtDUm5jbUY1TFRVd01Dd2dKSFJoWW14bExYTjBjbWx3WldRdFltY3RabUZqZEc5eUtTd2dKSEpuWW1FdGRHOHRhR1Y0TFdKbktTQWhaR1ZtWVhWc2REdGNjbHh1THk4Z0pIUmhZbXhsTFhOMGNtbHdaV1F0WW1jNklISm5ZbUV0ZEc4dGFHVjRLSEpuWW1Fb0pHSnNZV05yTENBa2RHRmliR1V0YzNSeWFYQmxaQzFpWnkxbVlXTjBiM0lwTENBa2NtZGlZUzEwYnkxb1pYZ3RZbWNwSUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkhSaFlteGxMV2h2ZG1WeUxXSm5MV1poWTNSdmNqb2dNQzR4SUNGa1pXWmhkV3gwTzF4eVhHNGtkR0ZpYkdVdGFHOTJaWEl0WW1jNklISm5ZbUVvSkdkeVlYa3ROVEF3TENBa2RHRmliR1V0YUc5MlpYSXRZbWN0Wm1GamRHOXlLU0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVIwWVdKc1pTMWliM0prWlhJdFptRmpkRzl5T2lBd0xqUWdJV1JsWm1GMWJIUTdYSEpjYmlSMFlXSnNaUzFpYjNKa1pYSXRZMjlzYjNJNklISm5ZbUV0ZEc4dGFHVjRLQ1JuY21GNUxUZ3dNQ3dnSkhKblltRXRkRzh0YUdWNExXSm5LU0FoWkdWbVlYVnNkRHRjY2x4dUpIUmhZbXhsTFdkeWIzVndMWE5sY0dGeVlYUnZjaTFqYjJ4dmNqb2dKSFJoWW14bExXSnZjbVJsY2kxamIyeHZjaUFoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVIwWVdKc1pTMWlaeTF6WTJGc1pUb2dMVGd3SlNBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmk4dklITmpjM010Wkc5amN5MXpkR0Z5ZENCMFlXSnNaUzFzYjI5d1hISmNiaVIwWVdKc1pTMTJZWEpwWVc1MGN6b2dLRnh5WEc0Z0lDZHdjbWx0WVhKNUp6b2djMmhwWm5RdFkyOXNiM0lvSkhCeWFXMWhjbmtzSUNSMFlXSnNaUzFpWnkxelkyRnNaU2tzWEhKY2JpQWdKM05sWTI5dVpHRnllU2M2SUhOb2FXWjBMV052Ykc5eUtDUnpaV052Ym1SaGNua3NJQ1IwWVdKc1pTMWlaeTF6WTJGc1pTa3NYSEpjYmlBZ0ozTjFZMk5sYzNNbk9pQnphR2xtZEMxamIyeHZjaWdrYzNWalkyVnpjeXdnSkhSaFlteGxMV0puTFhOallXeGxLU3hjY2x4dUlDQW5hVzVtYnljNklITm9hV1owTFdOdmJHOXlLQ1JwYm1adkxDQWtkR0ZpYkdVdFltY3RjMk5oYkdVcExGeHlYRzRnSUNkM1lYSnVhVzVuSnpvZ2MyaHBablF0WTI5c2IzSW9KSGRoY201cGJtY3NJQ1IwWVdKc1pTMWlaeTF6WTJGc1pTa3NYSEpjYmlBZ0oyUmhibWRsY2ljNklITm9hV1owTFdOdmJHOXlLQ1JrWVc1blpYSXNJQ1IwWVdKc1pTMWlaeTF6WTJGc1pTa3NYSEpjYmlBZ0oyeHBaMmgwSnpvZ0pHUmhjbXNzWEhKY2JpQWdKMlJoY21zbk9pQWtkMmhwZEdWY2NseHVLU0FoWkdWbVlYVnNkRHRjY2x4dUx5OGdjMk56Y3kxa2IyTnpMV1Z1WkNCMFlXSnNaUzFzYjI5d1hISmNibHh5WEc0a1kyOXRjRzl1Wlc1MExXRmpkR2wyWlMxaVp6b2dKSGRvYVhSbElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OGdLaUJRY205bmNtVnpjeUJpWVhKelhISmNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjY2x4dUpIQnliMmR5WlhOekxXSm5PaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzA0TURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0dkx5QXFJRkJoWjJsdVlYUnBiMjVjY2x4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHlYRzVjY2x4dUpIQmhaMmx1WVhScGIyNHRZMjlzYjNJNklDUmliMlI1TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh5WEc0a2NHRm5hVzVoZEdsdmJpMWlaem9nY21kaVlTZ2taM0poZVMwMU1EQXNJREF1TURncElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpIQmhaMmx1WVhScGIyNHRabTlqZFhNdFkyOXNiM0k2SUNSd1lXZHBibUYwYVc5dUxXTnZiRzl5SUNGa1pXWmhkV3gwTzF4eVhHNGtjR0ZuYVc1aGRHbHZiaTFtYjJOMWN5MWlaem9nY21kaVlTZ2taM0poZVMwMU1EQXNJREF1TVRZcElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpIQmhaMmx1WVhScGIyNHRhRzkyWlhJdFkyOXNiM0k2SUNSd1lXZHBibUYwYVc5dUxXTnZiRzl5SUNGa1pXWmhkV3gwTzF4eVhHNGtjR0ZuYVc1aGRHbHZiaTFvYjNabGNpMWlaem9nY21kaVlTZ2taM0poZVMwMU1EQXNJREF1TVRZcElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpIQmhaMmx1WVhScGIyNHRaR2x6WVdKc1pXUXRZMjlzYjNJNklDUjBaWGgwTFcxMWRHVmtJQ0ZrWldaaGRXeDBPMXh5WEc0a2NHRm5hVzVoZEdsdmJpMWthWE5oWW14bFpDMWlaem9nY21kaVlTZ2taM0poZVMwMU1EQXNJREF1TURRcElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OGdLaUJEWVhKa2MxeHlYRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEhKY2JseHlYRzRrWTJGeVpDMWlaem9nY21kaVlTMTBieTFvWlhnb0pHZHlZWGt0T1RBd0xDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcElDRmtaV1poZFd4ME8xeHlYRzRrWTJGeVpDMWliM0prWlhJdFkyOXNiM0k2SUNSaWIzSmtaWEl0WTI5c2IzSWdJV1JsWm1GMWJIUTdYSEpjYmlSallYSmtMV0p2ZUMxemFHRmtiM2M2SURBZ01DNHhNalZ5WlcwZ01DNDFjbVZ0SURBZ2NtZGlZU2drWW14aFkyc3NJREF1TVRZcElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OGdLaUJCWTJOdmNtUnBiMjVjY2x4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHlYRzVjY2x4dUpHRmpZMjl5WkdsdmJpMWlaem9nSkdOaGNtUXRZbWNnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrWVdOamIzSmthVzl1TFdOdmJHOXlPaUFrYUdWaFpHbHVaM010WTI5c2IzSWdJV1JsWm1GMWJIUTdYSEpjYmlSaFkyTnZjbVJwYjI0dFluVjBkRzl1TFdOdmJHOXlPaUFrWVdOamIzSmthVzl1TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh5WEc0a1lXTmpiM0prYVc5dUxXSjFkSFJ2YmkxaFkzUnBkbVV0WTI5c2IzSTZJQ1JoWTJOdmNtUnBiMjR0WTI5c2IzSWdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtZV05qYjNKa2FXOXVMV2xqYjI0dFkyOXNiM0k2SUNSaFkyTnZjbVJwYjI0dFluVjBkRzl1TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh5WEc0a1lXTmpiM0prYVc5dUxXbGpiMjR0WVdOMGFYWmxMV052Ykc5eU9pQWtZV05qYjNKa2FXOXVMV0oxZEhSdmJpMWhZM1JwZG1VdFkyOXNiM0lnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrWVdOamIzSmthVzl1TFdKMWRIUnZiaTFwWTI5dU9pQjFjbXdvWENKa1lYUmhPbWx0WVdkbEwzTjJaeXQ0Yld3c0pUTkRjM1puSUhkcFpIUm9QU2N4TWljZ2FHVnBaMmgwUFNjeE1pY2dkbWxsZDBKdmVEMG5NQ0F3SURFeUlERXlKeUI0Yld4dWN6MG5hSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY25JSGh0Ykc1ek9uaHNhVzVyUFNkb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eE9UazVMM2hzYVc1ckp5VXpSU1V6UTJSbFpuTWxNMFVsTTBOd1lYUm9JR2xrUFNkaEp5QmtQU2R0TVM0MU16SWdNVElnTmk0eE9ESXROaTAyTGpFNE1pMDJUREFnTVM0ME9EY2dOQzQyTlNBMklEQWdNVEF1TlRFemVpY3ZKVE5GSlROREwyUmxabk1sTTBVbE0wTm5JSFJ5WVc1elptOXliVDBuZEhKaGJuTnNZWFJsS0RJdU5UY3hLU2NnWm1sc2JEMG5ibTl1WlNjZ1ptbHNiQzF5ZFd4bFBTZGxkbVZ1YjJSa0p5VXpSU1V6UTNWelpTQm1hV3hzUFNjbE1qTTBNelU1TnpFbklIaHNhVzVyT21oeVpXWTlKeVV5TTJFbkx5VXpSU1V6UTNWelpTQm1hV3hzTFc5d1lXTnBkSGs5Snk0eEp5Qm1hV3hzUFNjamV5UmhZMk52Y21ScGIyNHRhV052YmkxamIyeHZjbjBuSUhoc2FXNXJPbWh5WldZOUp5VXlNMkVuTHlVelJTVXpReTluSlRORkpUTkRMM04yWnlVelJTVXdRVndpS1NBaFpHVm1ZWFZzZER0Y2NseHVKR0ZqWTI5eVpHbHZiaTFpZFhSMGIyNHRZV04wYVhabExXbGpiMjQ2SUhWeWJDaGNJbVJoZEdFNmFXMWhaMlV2YzNabkszaHRiQ3dsTTBOemRtY2dkMmxrZEdnOUp6RXlKeUJvWldsbmFIUTlKekV5SnlCMmFXVjNRbTk0UFNjd0lEQWdNVElnTVRJbklIaHRiRzV6UFNkb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnljZ2VHMXNibk02ZUd4cGJtczlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MekU1T1RrdmVHeHBibXNuSlRORkpUTkRaR1ZtY3lVelJTVXpRM0JoZEdnZ2FXUTlKMkVuSUdROUoyMHhMalV6TWlBeE1pQTJMakU0TWkwMkxUWXVNVGd5TFRaTU1DQXhMalE0TnlBMExqWTFJRFlnTUNBeE1DNDFNVE42Snk4bE0wVWxNME12WkdWbWN5VXpSU1V6UTJjZ2RISmhibk5tYjNKdFBTZDBjbUZ1YzJ4aGRHVW9NaTQxTnpFcEp5Qm1hV3hzUFNkdWIyNWxKeUJtYVd4c0xYSjFiR1U5SjJWMlpXNXZaR1FuSlRORkpUTkRkWE5sSUdacGJHdzlKeVV5TXpRek5UazNNU2NnZUd4cGJtczZhSEpsWmowbkpUSXpZU2N2SlRORkpUTkRkWE5sSUdacGJHd3RiM0JoWTJsMGVUMG5MakVuSUdacGJHdzlKeU43SkdGalkyOXlaR2x2YmkxcFkyOXVMV0ZqZEdsMlpTMWpiMnh2Y24wbklIaHNhVzVyT21oeVpXWTlKeVV5TTJFbkx5VXpSU1V6UXk5bkpUTkZKVE5ETDNOMlp5VXpSU1V3UVZ3aUtTQWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpOHZJQ29nUm05eWJYTmNjbHh1THk4Z0tpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2x4eVhHNWNjbHh1SkdsdWNIVjBMV0puT2lBa1kyRnlaQzFpWnlBaFpHVm1ZWFZzZER0Y2NseHVKR2x1Y0hWMExXUnBjMkZpYkdWa0xXSm5PaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzA0TURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a2FXNXdkWFF0WW05eVpHVnlMV052Ykc5eU9pQWtZbTl5WkdWeUxXTnZiRzl5SUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkdsdWNIVjBMWEJzWVdObGFHOXNaR1Z5TFdOdmJHOXlPaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzAxTURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a1ptOXliUzF6ZDJsMFkyZ3RZMjlzYjNJNklDUnBibkIxZEMxaWIzSmtaWEl0WTI5c2IzSWdJV1JsWm1GMWJIUTdYSEpjYmlSbWIzSnRMWE4zYVhSamFDMWlaeTFwYldGblpUb2dkWEpzS0Z3aVpHRjBZVHBwYldGblpTOXpkbWNyZUcxc0xEeHpkbWNnZUcxc2JuTTlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5KeUIyYVdWM1FtOTRQU2N0TkNBdE5DQTRJRGduUGp4amFYSmpiR1VnY2owbk15Y2dabWxzYkQwbkkzc2tabTl5YlMxemQybDBZMmd0WTI5c2IzSjlKeTgrUEM5emRtYytYQ0lwSUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkdadmNtMHRjMlZzWldOMExXSm5PaUFrYVc1d2RYUXRZbWNnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrWm05eWJTMXpaV3hsWTNRdGFXNWthV05oZEc5eUxXTnZiRzl5T2lBa1ozSmhlUzB5TURBZ0lXUmxabUYxYkhRN1hISmNiaVJtYjNKdExYTmxiR1ZqZEMxcGJtUnBZMkYwYjNJNklIVnliQ2hjSW1SaGRHRTZhVzFoWjJVdmMzWm5LM2h0YkN3OGMzWm5JSGh0Ykc1elBTZG9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5Y2dkbWxsZDBKdmVEMG5NQ0F3SURFMklERTJKejQ4Y0dGMGFDQm1hV3hzUFNkdWIyNWxKeUJ6ZEhKdmEyVTlKeU43SkdadmNtMHRjMlZzWldOMExXbHVaR2xqWVhSdmNpMWpiMnh2Y24wbklITjBjbTlyWlMxc2FXNWxZMkZ3UFNkeWIzVnVaQ2NnYzNSeWIydGxMV3hwYm1WcWIybHVQU2R5YjNWdVpDY2djM1J5YjJ0bExYZHBaSFJvUFNjeUp5QmtQU2ROTWlBMWJEWWdOaUEyTFRZbkx6NDhMM04yWno1Y0lpa2dJV1JsWm1GMWJIUTdYSEpjYmlSbWIzSnRMWE5sYkdWamRDMXBibVJwWTJGMGIzSXRjblJzT2lCMWNtd29YQ0prWVhSaE9tbHRZV2RsTDNOMlp5dDRiV3dzUEhOMlp5QjRiV3h1Y3owbmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jbklIWnBaWGRDYjNnOUp6QWdNQ0F4TmlBeE5pYytQSEJoZEdnZ1ptbHNiRDBuYm05dVpTY2djM1J5YjJ0bFBTY2pleVJtYjNKdExYTmxiR1ZqZEMxcGJtUnBZMkYwYjNJdFkyOXNiM0o5SnlCemRISnZhMlV0YkdsdVpXTmhjRDBuY205MWJtUW5JSE4wY205clpTMXNhVzVsYW05cGJqMG5jbTkxYm1RbklITjBjbTlyWlMxM2FXUjBhRDBuTWljZ1pEMG5UVElnTld3MklEWWdOaTAySnk4K1BDOXpkbWMrWENJcElDRmtaV1poZFd4ME95QXZMeUFvUXlsY2NseHVYSEpjYmlSbWIzSnRMWEpoYm1kbExYUnlZV05yTFdKbk9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMDRNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEhKY2JpUm1iM0p0TFhKaGJtZGxMWFJ5WVdOckxXUnBjMkZpYkdWa0xXSm5PaUFrWjNKaGVTMDFNQ0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYSEpjYmx4eVhHNGtabTl5YlMxeVlXNW5aUzEwYUhWdFlpMWlaem9nY21kaVlTMTBieTFvWlhnb0pHZHlZWGt0TWpBd0xDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcElDRmtaV1poZFd4ME8xeHlYRzRrWm05eWJTMXlZVzVuWlMxMGFIVnRZaTFpYjNndGMyaGhaRzkzT2lBd0lEQWdObkI0SURBZ0pHZHlZWGt0TWpBd0lDRmtaV1poZFd4ME8xeHlYRzRrWm05eWJTMXlZVzVuWlMxMGFIVnRZaTFtYjJOMWN5MWliM2d0YzJoaFpHOTNPaUF3SURBZ09IQjRJREJ3ZUNBa1ozSmhlUzB5TURBZ0lXUmxabUYxYkhRN1hISmNiaVJtYjNKdExYSmhibWRsTFhSb2RXMWlMV0ZqZEdsMlpTMWlaem9nSkdadmNtMHRjbUZ1WjJVdGRHaDFiV0l0WW1jZ0lXUmxabUYxYkhRN1hISmNiaVJtYjNKdExYSmhibWRsTFhSb2RXMWlMV1JwYzJGaWJHVmtMV0puT2lCeVoySmhMWFJ2TFdobGVDZ2taM0poZVMwMk1EQXNJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a2dJV1JsWm1GMWJIUTdYSEpjYmk4dklDb2dUbUYyYzF4eVhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYSEpjYmx4eVhHNGtibUYyTFhSaFluTXRiR2x1YXkxaFkzUnBkbVV0WW1jNklDUmpZWEprTFdKbklDRmtaV1poZFd4ME8xeHlYRzRrYm1GMkxYUmhZbk10WW05eVpHVnlMV052Ykc5eU9pQWtibUYyTFhSaFluTXRiR2x1YXkxaFkzUnBkbVV0WW1jZ0lXUmxabUYxYkhRN1hISmNiaVJ1WVhZdGRHRmljeTFpZEc0dFltY3RabUZqZEc5eU9pQXdMakUySUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjY2x4dUpHNWhkaTEwWVdKekxXSjBiaTFpWnpvZ2NtZGlZUzEwYnkxb1pYZ29KR2R5WVhrdE9EQXdMQ0FrY21kaVlTMTBieTFvWlhndFltY3BJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNjbHh1WEhKY2JpOHZJQ29nVG1GMlltRnlYSEpjYmk4dklDb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lwY2NseHVYSEpjYmlSdVlYWmlZWEl0YkdsbmFIUXRhRzkyWlhJdFkyOXNiM0k2SUNNMFpUVXhOVFVnSVdSbFptRjFiSFE3WEhKY2JpUnVZWFppWVhJdGJHbG5hSFF0WVdOMGFYWmxMV052Ykc5eU9pQWpOR1UxTVRVMUlDRmtaV1poZFd4ME8xeHlYRzRrYm1GMlltRnlMV3hwWjJoMExXUnBjMkZpYkdWa0xXTnZiRzl5T2lCeVoySmhLQ1JpYkdGamF5d2dNQzR5S1NBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmk4dklDb2dSSEp2Y0dSdmQyNXpYSEpjYmk4dklDb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lwY2NseHVYSEpjYmlSa2NtOXdaRzkzYmkxaVp6b2djbWRpWVMxMGJ5MW9aWGdvY21kaVlTZ2tZbXhoWTJzc0lEQXVOaWtzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEhKY2JpUmtjbTl3Wkc5M2JpMWthWFpwWkdWeUxXSm5PaUFrWW05eVpHVnlMV052Ykc5eUlDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpHUnliM0JrYjNkdUxXeHBibXN0YUc5MlpYSXRZbWM2SUhKblltRW9KR2R5WVhrdE5UQXdMQ0F3TGpFcElDRmtaV1poZFd4ME8xeHlYRzRrWkhKdmNHUnZkMjR0YkdsdWF5MWthWE5oWW14bFpDMWpiMnh2Y2pvZ0pIUmxlSFF0YlhWMFpXUWdJV1JsWm1GMWJIUTdYSEpjYmlSa2NtOXdaRzkzYmkxb1pXRmtaWEl0WTI5c2IzSTZJQ1JvWldGa2FXNW5jeTFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpOHZJQ29nVUc5d2IzWmxjbk5jY2x4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHlYRzRrY0c5d2IzWmxjaTFpWnpvZ0pHTmhjbVF0WW1jZ0lXUmxabUYxYkhRN1hISmNiaTh2SUNvZ1ZHOWhjM1J6WEhKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNjbHh1SkhSdllYTjBMV0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1JqWVhKa0xXSm5JQ0ZrWldaaGRXeDBPMXh5WEc0a2RHOWhjM1F0WTI5c2IzSTZJQ1JpYjJSNUxXTnZiRzl5SUNGa1pXWmhkV3gwTzF4eVhHNGtkRzloYzNRdGFHVmhaR1Z5TFdOdmJHOXlPaUFrZEc5aGMzUXRZMjlzYjNJZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0dkx5QXFJRTF2WkdGc2MxeHlYRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEhKY2JseHlYRzRrYlc5a1lXd3RZMjl1ZEdWdWRDMWlaem9nSkdOaGNtUXRZbWNnSVdSbFptRjFiSFE3WEhKY2JpUnRiMlJoYkMxamIyNTBaVzUwTFdKdmVDMXphR0ZrYjNjdGVITTZJREFnTUM0eU5YSmxiU0F5TGpneE1qVnlaVzBnTUNCeVoySmhLQ1JpYkdGamF5d2dNQzR6S1NBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmk4dklDb2dUR2x6ZENCbmNtOTFjRnh5WEc0dkx5QXFLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcVhISmNibHh5WEc0a2JHbHpkQzFuY205MWNDMWliM0prWlhJdFkyOXNiM0k2SUNSaWIzSmtaWEl0WTI5c2IzSWdJV1JsWm1GMWJIUTdYSEpjYmlSc2FYTjBMV2R5YjNWd0xXbDBaVzB0WW1jdGMyTmhiR1U2SUMwM01DVWdJV1JsWm1GMWJIUTdYSEpjYmlSc2FYTjBMV2R5YjNWd0xXbDBaVzB0WW1jdGFHOTJaWEl0YzJOaGJHVTZJREV3SlNBaFpHVm1ZWFZzZERzZ0x5OGdJQ2hqS1Z4eVhHNGtiR2x6ZEMxbmNtOTFjQzFvYjNabGNpMWlaem9nY21kaVlTZ2tZbUZ6WlN3Z01DNHdOaWtnSVdSbFptRjFiSFE3WEhKY2JpUnJZbVF0WTI5c2IzSTZJQ1JrWVhKcklDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OGdRMjl1Wm1sblhISmNiaVJ5ZEd3dGMzVndjRzl5ZERvZ1ptRnNjMlVnSVdSbFptRjFiSFE3WEhKY2JpUmtZWEpyTFhOMGVXeGxPaUIwY25WbElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OGdLaUJEYUdWMmNtOXVJRWxqYjI1elhISmNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEhKY2JseHlYRzRrWTJobGRuSnZiaTExY0RvZ1hDSmtZWFJoT21sdFlXZGxMM04yWnl0NGJXd3NKVE5EYzNabklIZHBaSFJvUFNjeE1IQjRKeUJvWldsbmFIUTlKelp3ZUNjZ2RtbGxkMEp2ZUQwbk1DQXdJREV3SURZbklIWmxjbk5wYjI0OUp6RXVNU2NnZUcxc2JuTTlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5KeUI0Yld4dWN6cDRiR2x1YXowbmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1UazVPUzk0YkdsdWF5Y2xNMFVsTTBOa1pXWnpKVE5GSlRORGNHOXNlV2R2YmlCcFpEMG5jR0YwYUMweEp5QndiMmx1ZEhNOUp6QWdOQzQxTnprMk1UTTJNaUF4TGpJek9EZ3lPVFV4SURVdU56RTBNamcxTnpFZ05TQXlMakkyT1RNME5ERTVJRGd1TnpZeE1UY3dORGtnTlM0M01UUXlPRFUzTVNBeE1DQTBMalUzT1RZeE16WXlJRFVnTUNjbE0wVWxNME12Y0c5c2VXZHZiaVV6UlNVelF5OWtaV1p6SlRORkpUTkRaeUJwWkQwbjRwcVo3N2lQTFZONWJXSnZiSE1uSUhOMGNtOXJaVDBuYm05dVpTY2djM1J5YjJ0bExYZHBaSFJvUFNjeEp5Qm1hV3hzUFNkdWIyNWxKeUJtYVd4c0xYSjFiR1U5SjJWMlpXNXZaR1FuSlRORkpUTkRaeUJwWkQwbk16RXBMVVJoZEdGVVlXSnNaWE1uSUhSeVlXNXpabTl5YlQwbmRISmhibk5zWVhSbEtDMHlPRGt1TURBd01EQXdMQ0F0TmpRdU1EQXdNREF3S1NjbE0wVWxNME5uSUdsa1BTZFVZV0pzWlMxQ1lYTnBZeWNnZEhKaGJuTm1iM0p0UFNkMGNtRnVjMnhoZEdVb01DNHdNREF3TURBc0lEVXlMakF3TURBd01Da25KVE5GSlRORFp5QnBaRDBuVkdGaWJHVXRTR1ZoWkdWeUp5QjBjbUZ1YzJadmNtMDlKM1J5WVc1emJHRjBaU2d4T1M0d01EQXdNREFzSURFd0xqQXdNREF3TUNrbkpUTkZKVE5EWnlCcFpEMG5SM0p2ZFhBbklIUnlZVzV6Wm05eWJUMG5kSEpoYm5Oc1lYUmxLREkzTUM0d01EQXdNREFzSURBdU1EQXdNREF3S1NjbE0wVWxNME5uSUdsa1BTZEpZMjl1TFVOdmJHOXlKeUIwY21GdWMyWnZjbTA5SjNSeVlXNXpiR0YwWlNnd0xqQXdNREF3TUN3Z01pNHhOREk0TlRjcEp5VXpSU1V6UTNWelpTQm1hV3hzUFNjamUzTjBjaTF5WlhCc1lXTmxLQ043Y21kaVlTMTBieTFvWlhnb0pHZHlZWGt0TlRBd0xDUnlaMkpoTFhSdkxXaGxlQzFpWnlsOUxDY2pKeXdnSnlVeU15Y3BmU2NnZUd4cGJtczZhSEpsWmowbkpUSXpjR0YwYUMweEp5VXpSU1V6UXk5MWMyVWxNMFVsTTBOMWMyVWdabWxzYkMxdmNHRmphWFI1UFNjd0xqVW5JR1pwYkd3OUp5TjdjM1J5TFhKbGNHeGhZMlVvSTN0eVoySmhMWFJ2TFdobGVDZ2taM0poZVMwMU1EQXNKSEpuWW1FdGRHOHRhR1Y0TFdKbktYMHNKeU1uTENBbkpUSXpKeWw5SnlCNGJHbHVhenBvY21WbVBTY2xNak53WVhSb0xURW5KVE5GSlROREwzVnpaU1V6UlNVelF5OW5KVE5GSlROREwyY2xNMFVsTTBNdlp5VXpSU1V6UXk5bkpUTkZKVE5ETDJjbE0wVWxNME12WnlVelJTVXpReTl6ZG1jbE0wVmNJanRjY2x4dUpHTm9aWFp5YjI0dFpHOTNiam9nWENKa1lYUmhPbWx0WVdkbEwzTjJaeXQ0Yld3c0pUTkRjM1puSUhkcFpIUm9QU2N4TUhCNEp5Qm9aV2xuYUhROUp6WndlQ2NnZG1sbGQwSnZlRDBuTUNBd0lERXdJRFluSUhabGNuTnBiMjQ5SnpFdU1TY2dlRzFzYm5NOUoyaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabkp5QjRiV3h1Y3pwNGJHbHVhejBuYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TVRrNU9TOTRiR2x1YXljbE0wVWxNME5rWldaekpUTkZKVE5EY0c5c2VXZHZiaUJwWkQwbmNHRjBhQzB4SnlCd2IybHVkSE05SnpndU56WXhNVGN3TkRrZ01DQTFJRE11TkRRME9UUXhOVElnTVM0eU16ZzRNamsxTVNBd0lEQWdNUzR4TXpRMk56SXhJRFVnTlM0M01UUXlPRFUzTVNBeE1DQXhMakV6TkRZM01qRW5KVE5GSlROREwzQnZiSGxuYjI0bE0wVWxNME12WkdWbWN5VXpSU1V6UTJjZ2FXUTlKK0thbWUrNGp5MVRlVzFpYjJ4ekp5QnpkSEp2YTJVOUoyNXZibVVuSUhOMGNtOXJaUzEzYVdSMGFEMG5NU2NnWm1sc2JEMG5ibTl1WlNjZ1ptbHNiQzF5ZFd4bFBTZGxkbVZ1YjJSa0p5VXpSU1V6UTJjZ2FXUTlKek14S1MxRVlYUmhWR0ZpYkdWekp5QjBjbUZ1YzJadmNtMDlKM1J5WVc1emJHRjBaU2d0TWpnNUxqQXdNREF3TUN3Z0xUYzJMakF3TURBd01Da25KVE5GSlRORFp5QnBaRDBuVkdGaWJHVXRRbUZ6YVdNbklIUnlZVzV6Wm05eWJUMG5kSEpoYm5Oc1lYUmxLREF1TURBd01EQXdMQ0ExTWk0d01EQXdNREFwSnlVelJTVXpRMmNnYVdROUoxUmhZbXhsTFVobFlXUmxjaWNnZEhKaGJuTm1iM0p0UFNkMGNtRnVjMnhoZEdVb01Ua3VNREF3TURBd0xDQXhNQzR3TURBd01EQXBKeVV6UlNVelEyY2dhV1E5SjBkeWIzVndKeUIwY21GdWMyWnZjbTA5SjNSeVlXNXpiR0YwWlNneU56QXVNREF3TURBd0xDQXhNaTR3TURBd01EQXBKeVV6UlNVelEyY2dhV1E5SjBsamIyNHRRMjlzYjNJbklIUnlZVzV6Wm05eWJUMG5kSEpoYm5Oc1lYUmxLREF1TURBd01EQXdMQ0F5TGpFME1qZzFOeWtuSlRORkpUTkRkWE5sSUdacGJHdzlKeU43YzNSeUxYSmxjR3hoWTJVb0kzdHlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMDFNREFzSkhKblltRXRkRzh0YUdWNExXSm5LWDBzSnlNbkxDQW5KVEl6SnlsOUp5QjRiR2x1YXpwb2NtVm1QU2NsTWpOd1lYUm9MVEVuSlRORkpUTkRMM1Z6WlNVelJTVXpRM1Z6WlNCbWFXeHNMVzl3WVdOcGRIazlKekF1T0NjZ1ptbHNiRDBuSTN0emRISXRjbVZ3YkdGalpTZ2plM0puWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVFV3TUN3a2NtZGlZUzEwYnkxb1pYZ3RZbWNwZlN3bkl5Y3NJQ2NsTWpNbktYMG5JSGhzYVc1ck9taHlaV1k5SnlVeU0zQmhkR2d0TVNjbE0wVWxNME12ZFhObEpUTkZKVE5ETDJjbE0wVWxNME12WnlVelJTVXpReTluSlRORkpUTkRMMmNsTTBVbE0wTXZaeVV6UlNVelF5OW5KVE5GSlROREwzTjJaeVV6UlZ3aU8xeHlYRzRpWFgwPSAqL1xuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEFuaW1hdGlvbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBrZXlmcmFtZXMgcGx5ci1wcm9ncmVzcyB7XG4gIHRvIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAkcGx5ci1wcm9ncmVzcy1sb2FkaW5nLXNpemUgMDtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHBseXItcG9wdXAge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMC41O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMHB4KTtcbiAgfVxuXG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHBseXItZmFkZS1pbiB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cblxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEJhc2Ugc3R5bGluZ1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQmFzZVxuLnBseXIge1xuICBAaW5jbHVkZSBwbHlyLWZvbnQtc21vb3RoaW5nKCRwbHlyLWZvbnQtc21vb3RoaW5nKTtcblxuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXJlY3Rpb246IGx0cjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZm9udC1mYW1pbHk6ICRwbHlyLWZvbnQtZmFtaWx5O1xuICBmb250LXZhcmlhbnQtbnVtZXJpYzogdGFidWxhci1udW1zOyAvLyBGb3JjZSBtb25vc2FjZS1lc3F1ZSBudW1iZXIgd2lkdGhzXG4gIGZvbnQtd2VpZ2h0OiAkcGx5ci1mb250LXdlaWdodC1yZWd1bGFyO1xuICBsaW5lLWhlaWdodDogJHBseXItbGluZS1oZWlnaHQ7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWluLXdpZHRoOiAyMDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LXNoYWRvdzogbm9uZTtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjNzIGVhc2U7XG4gIHotaW5kZXg6IDA7IC8vIEZvcmNlIGFueSBib3JkZXIgcmFkaXVzXG5cbiAgLy8gTWVkaWEgZWxlbWVudHNcbiAgdmlkZW8sXG4gIGF1ZGlvLFxuICBpZnJhbWUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIGJ1dHRvbiB7XG4gICAgZm9udDogaW5oZXJpdDtcbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgICB3aWR0aDogYXV0bztcbiAgfVxuXG4gIC8vIElnbm9yZSBmb2N1c1xuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiAwO1xuICB9XG59XG5cbi8vIGJvcmRlci1ib3ggZXZlcnl0aGluZ1xuLy8gaHR0cDovL3BhdWxpcmlzaC5jb20vMjAxMi9ib3gtc2l6aW5nLWJvcmRlci1ib3gtZnR3L1xuQGlmICRwbHlyLWJvcmRlci1ib3gge1xuICAucGx5ci0tZnVsbC11aSB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcblxuICAgICosXG4gICAgKjo6YWZ0ZXIsXG4gICAgKjo6YmVmb3JlIHtcbiAgICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gICAgfVxuICB9XG59XG5cbi8vIEZpeCAzMDBtcyBkZWxheVxuQGlmICRwbHlyLXRvdWNoLWFjdGlvbiB7XG4gIC5wbHlyLS1mdWxsLXVpIHtcbiAgICBhLFxuICAgIGJ1dHRvbixcbiAgICBpbnB1dCxcbiAgICBsYWJlbCB7XG4gICAgICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbiAgICB9XG4gIH1cbn1cbiIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBNaXhpbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIE5pY2VyIGZvY3VzIHN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AbWl4aW4gcGx5ci10YWItZm9jdXMoJGNvbG9yOiAkcGx5ci10YWItZm9jdXMtY29sb3IpIHtcbiAgb3V0bGluZTogJGNvbG9yIGRvdHRlZCAzcHg7XG4gIG91dGxpbmUtb2Zmc2V0OiAycHg7XG59XG5cbi8vIEZvbnQgc21vb3RoaW5nXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBtaXhpbiBwbHlyLWZvbnQtc21vb3RoaW5nKCRtb2RlOiB0cnVlKSB7XG4gIEBpZiAkbW9kZSB7XG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgfVxufVxuXG4vLyA8aW5wdXQgdHlwZT1cInJhbmdlXCI+IHN0eWxpbmdcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQG1peGluIHBseXItcmFuZ2UtdHJhY2soKSB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IGNhbGMoI3skcGx5ci1yYW5nZS10cmFjay1oZWlnaHR9IC8gMik7XG4gIGhlaWdodDogJHBseXItcmFuZ2UtdHJhY2staGVpZ2h0O1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuM3MgZWFzZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbkBtaXhpbiBwbHlyLXJhbmdlLXRodW1iKCkge1xuICBiYWNrZ3JvdW5kOiAkcGx5ci1yYW5nZS10aHVtYi1iYWNrZ3JvdW5kO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIGJveC1zaGFkb3c6ICRwbHlyLXJhbmdlLXRodW1iLXNoYWRvdztcbiAgaGVpZ2h0OiAkcGx5ci1yYW5nZS10aHVtYi1oZWlnaHQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgd2lkdGg6ICRwbHlyLXJhbmdlLXRodW1iLWhlaWdodDtcbn1cblxuQG1peGluIHBseXItcmFuZ2UtdGh1bWItYWN0aXZlKCRjb2xvcikge1xuICBib3gtc2hhZG93OiAkcGx5ci1yYW5nZS10aHVtYi1zaGFkb3csIDAgMCAwICRwbHlyLXJhbmdlLXRodW1iLWFjdGl2ZS1zaGFkb3ctd2lkdGggJGNvbG9yO1xufVxuXG4vLyBGdWxsc2NyZWVuIHN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AbWl4aW4gcGx5ci1mdWxsc2NyZWVuLWFjdGl2ZSgpIHtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgdmlkZW8ge1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuXG4gIC8vIERpc3BsYXkgY29ycmVjdCBpY29uXG4gIC5wbHlyX19jb250cm9sIC5pY29uLS1leGl0LWZ1bGxzY3JlZW4ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgKyBzdmcge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAvLyBIaWRlIGN1cnNvciBpbiBmdWxsc2NyZWVuIHdoZW4gY29udHJvbHMgaGlkZGVuXG4gICYucGx5ci0taGlkZS1jb250cm9scyB7XG4gICAgY3Vyc29yOiBub25lO1xuICB9XG5cbiAgLy8gTGFyZ2UgY2FwdGlvbnMgaW4gZnVsbCBzY3JlZW4gb24gbGFyZ2VyIHNjcmVlbnNcbiAgQG1lZGlhIChtaW4td2lkdGg6ICRwbHlyLWJwLWxnKSB7XG4gICAgLnBseXJfX2NhcHRpb25zIHtcbiAgICAgIGZvbnQtc2l6ZTogJHBseXItZm9udC1zaXplLWNhcHRpb25zLWxhcmdlO1xuICAgIH1cbiAgfVxufVxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEJhZGdlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLnBseXJfX2JhZGdlIHtcbiAgYmFja2dyb3VuZDogJHBseXItYmFkZ2UtYmFja2dyb3VuZDtcbiAgYm9yZGVyLXJhZGl1czogJHBseXItYmFkZ2UtYm9yZGVyLXJhZGl1cztcbiAgY29sb3I6ICRwbHlyLWJhZGdlLXRleHQtY29sb3I7XG4gIGZvbnQtc2l6ZTogJHBseXItZm9udC1zaXplLWJhZGdlO1xuICBsaW5lLWhlaWdodDogMTtcbiAgcGFkZGluZzogM3B4IDRweDtcbn1cbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDYXB0aW9uc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gSGlkZSBkZWZhdWx0IGNhcHRpb25zXG4ucGx5ci0tZnVsbC11aSA6Oi13ZWJraXQtbWVkaWEtdGV4dC10cmFjay1jb250YWluZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGx5cl9fY2FwdGlvbnMge1xuICBhbmltYXRpb246IHBseXItZmFkZS1pbiAwLjNzIGVhc2U7XG4gIGJvdHRvbTogMDtcbiAgZGlzcGxheTogbm9uZTtcbiAgZm9udC1zaXplOiAkcGx5ci1mb250LXNpemUtY2FwdGlvbnMtc21hbGw7XG4gIGxlZnQ6IDA7XG4gIHBhZGRpbmc6ICRwbHlyLWNvbnRyb2wtc3BhY2luZztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzIGVhc2UtaW4tb3V0O1xuICB3aWR0aDogMTAwJTtcblxuICBzcGFuOmVtcHR5IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgQG1lZGlhIChtaW4td2lkdGg6ICRwbHlyLWJwLXNtKSB7XG4gICAgZm9udC1zaXplOiAkcGx5ci1mb250LXNpemUtY2FwdGlvbnMtYmFzZTtcbiAgICBwYWRkaW5nOiBjYWxjKCN7JHBseXItY29udHJvbC1zcGFjaW5nfSAqIDIpO1xuICB9XG5cbiAgQG1lZGlhIChtaW4td2lkdGg6ICRwbHlyLWJwLW1kKSB7XG4gICAgZm9udC1zaXplOiAkcGx5ci1mb250LXNpemUtY2FwdGlvbnMtbWVkaXVtO1xuICB9XG59XG5cbi5wbHlyLS1jYXB0aW9ucy1hY3RpdmUgLnBseXJfX2NhcHRpb25zIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8vIElmIHRoZSBsb3dlciBjb250cm9scyBhcmUgc2hvd24gYW5kIG5vdCBlbXB0eVxuLnBseXI6bm90KC5wbHlyLS1oaWRlLWNvbnRyb2xzKSAucGx5cl9fY29udHJvbHM6bm90KDplbXB0eSkgfiAucGx5cl9fY2FwdGlvbnMge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoY2FsYygjeyRwbHlyLWNvbnRyb2wtc3BhY2luZ30gKiAtNCkpO1xufVxuXG4ucGx5cl9fY2FwdGlvbiB7XG4gIGJhY2tncm91bmQ6ICRwbHlyLWNhcHRpb25zLWJhY2tncm91bmQ7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgYm94LWRlY29yYXRpb24tYnJlYWs6IGNsb25lO1xuICBjb2xvcjogJHBseXItY2FwdGlvbnMtdGV4dC1jb2xvcjtcbiAgbGluZS1oZWlnaHQ6IDE4NSU7XG4gIHBhZGRpbmc6IDAuMmVtIDAuNWVtO1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG5cbiAgLy8gRmlyZWZveCBhZGRzIGEgPGRpdj4gd2hlbiB1c2luZyBnZXRDdWVBc0hUTUwoKVxuICBkaXYge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgfVxufVxuIiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENhcHRpb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4kcGx5ci1jYXB0aW9ucy1iYWNrZ3JvdW5kOiB2YXIoLS1wbHlyLWNhcHRpb25zLWJhY2tncm91bmQsIHJnYmEoIzAwMCwgMC44KSkgIWRlZmF1bHQ7XG4kcGx5ci1jYXB0aW9ucy10ZXh0LWNvbG9yOiB2YXIoLS1wbHlyLWNhcHRpb25zLXRleHQtY29sb3IsICNmZmYpICFkZWZhdWx0O1xuJHBseXItZm9udC1zaXplLWNhcHRpb25zLWJhc2U6ICRwbHlyLWZvbnQtc2l6ZS1iYXNlICFkZWZhdWx0O1xuJHBseXItZm9udC1zaXplLWNhcHRpb25zLXNtYWxsOiAkcGx5ci1mb250LXNpemUtc21hbGwgIWRlZmF1bHQ7XG4kcGx5ci1mb250LXNpemUtY2FwdGlvbnMtbWVkaXVtOiAkcGx5ci1mb250LXNpemUtbGFyZ2UgIWRlZmF1bHQ7XG4kcGx5ci1mb250LXNpemUtY2FwdGlvbnMtbGFyZ2U6ICRwbHlyLWZvbnQtc2l6ZS14bGFyZ2UgIWRlZmF1bHQ7XG4iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ29udHJvbCBidXR0b25zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4ucGx5cl9fY29udHJvbCB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6ICRwbHlyLWNvbnRyb2wtcmFkaXVzO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmbGV4LXNocmluazogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8vIElFMTFcbiAgcGFkZGluZzogJHBseXItY29udHJvbC1wYWRkaW5nO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG5cbiAgc3ZnIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gICAgaGVpZ2h0OiAkcGx5ci1jb250cm9sLWljb24tc2l6ZTtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICB3aWR0aDogJHBseXItY29udHJvbC1pY29uLXNpemU7XG4gIH1cblxuICAvLyBEZWZhdWx0IGZvY3VzXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IDA7XG4gIH1cblxuICAvLyBUYWIgZm9jdXNcbiAgJi5wbHlyX190YWItZm9jdXMge1xuICAgIEBpbmNsdWRlIHBseXItdGFiLWZvY3VzO1xuICB9XG59XG5cbi8vIFJlbW92ZSBhbnkgbGluayBzdHlsaW5nXG5hLnBseXJfX2NvbnRyb2wge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgJjo6YWZ0ZXIsXG4gICY6OmJlZm9yZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4vLyBDaGFuZ2UgaWNvbnMgb24gc3RhdGUgY2hhbmdlXG4ucGx5cl9fY29udHJvbDpub3QoLnBseXJfX2NvbnRyb2wtLXByZXNzZWQpIC5pY29uLS1wcmVzc2VkLFxuLnBseXJfX2NvbnRyb2wucGx5cl9fY29udHJvbC0tcHJlc3NlZCAuaWNvbi0tbm90LXByZXNzZWQsXG4ucGx5cl9fY29udHJvbDpub3QoLnBseXJfX2NvbnRyb2wtLXByZXNzZWQpIC5sYWJlbC0tcHJlc3NlZCxcbi5wbHlyX19jb250cm9sLnBseXJfX2NvbnRyb2wtLXByZXNzZWQgLmxhYmVsLS1ub3QtcHJlc3NlZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ29udHJvbHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEhpZGUgbmF0aXZlIGNvbnRyb2xzXG4ucGx5ci0tZnVsbC11aSA6Oi13ZWJraXQtbWVkaWEtY29udHJvbHMge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vLyBQbGF5YmFjayBjb250cm9sc1xuLnBseXJfX2NvbnRyb2xzIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gIC5wbHlyX19wcm9ncmVzc19fY29udGFpbmVyIHtcbiAgICBmbGV4OiAxO1xuICAgIG1pbi13aWR0aDogMDsgLy8gRml4IGZvciBFZGdlIGlzc3VlIHdoZXJlIGNvbnRlbnQgd291bGQgb3ZlcmZsb3dcbiAgfVxuXG4gIC8vIFNwYWNpbmdcbiAgLnBseXJfX2NvbnRyb2xzX19pdGVtIHtcbiAgICBtYXJnaW4tbGVmdDogY2FsYygjeyRwbHlyLWNvbnRyb2wtc3BhY2luZ30gLyA0KTtcblxuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgfVxuXG4gICAgJi5wbHlyX19wcm9ncmVzc19fY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmctbGVmdDogY2FsYygjeyRwbHlyLWNvbnRyb2wtc3BhY2luZ30gLyA0KTtcbiAgICB9XG5cbiAgICAmLnBseXJfX3RpbWUge1xuICAgICAgcGFkZGluZzogMCBjYWxjKCN7JHBseXItY29udHJvbC1zcGFjaW5nfSAvIDIpO1xuICAgIH1cblxuICAgICYucGx5cl9fcHJvZ3Jlc3NfX2NvbnRhaW5lcjpmaXJzdC1jaGlsZCxcbiAgICAmLnBseXJfX3RpbWU6Zmlyc3QtY2hpbGQsXG4gICAgJi5wbHlyX190aW1lICsgLnBseXJfX3RpbWUge1xuICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIH1cbiAgfVxuXG4gIC8vIEhpZGUgZW1wdHkgY29udHJvbHNcbiAgJjplbXB0eSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4vLyBTb21lIG9wdGlvbnMgYXJlIGhpZGRlbiBieSBkZWZhdWx0XG4ucGx5ciBbZGF0YS1wbHlyPSdjYXB0aW9ucyddLFxuLnBseXIgW2RhdGEtcGx5cj0ncGlwJ10sXG4ucGx5ciBbZGF0YS1wbHlyPSdhaXJwbGF5J10sXG4ucGx5ciBbZGF0YS1wbHlyPSdmdWxsc2NyZWVuJ10ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGx5ci0tY2FwdGlvbnMtZW5hYmxlZCBbZGF0YS1wbHlyPSdjYXB0aW9ucyddLFxuLnBseXItLXBpcC1zdXBwb3J0ZWQgW2RhdGEtcGx5cj0ncGlwJ10sXG4ucGx5ci0tYWlycGxheS1zdXBwb3J0ZWQgW2RhdGEtcGx5cj0nYWlycGxheSddLFxuLnBseXItLWZ1bGxzY3JlZW4tZW5hYmxlZCBbZGF0YS1wbHlyPSdmdWxsc2NyZWVuJ10ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVHlwb2dyYXBoeVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuJHBseXItZm9udC1mYW1pbHk6IHZhcigtLXBseXItZm9udC1mYW1pbHksIGluaGVyaXQpICFkZWZhdWx0O1xuJHBseXItZm9udC1zaXplLWJhc2U6IHZhcigtLXBseXItZm9udC1zaXplLWJhc2UsIDE1cHgpICFkZWZhdWx0O1xuJHBseXItZm9udC1zaXplLXNtYWxsOiB2YXIoLS1wbHlyLWZvbnQtc2l6ZS1zbWFsbCwgMTNweCkgIWRlZmF1bHQ7XG4kcGx5ci1mb250LXNpemUtbGFyZ2U6IHZhcigtLXBseXItZm9udC1zaXplLWxhcmdlLCAxOHB4KSAhZGVmYXVsdDtcbiRwbHlyLWZvbnQtc2l6ZS14bGFyZ2U6IHZhcigtLXBseXItZm9udC1zaXplLXhsYXJnZSwgMjFweCkgIWRlZmF1bHQ7XG4kcGx5ci1mb250LXNpemUtdGltZTogdmFyKC0tcGx5ci1mb250LXNpemUtdGltZSwgJHBseXItZm9udC1zaXplLXNtYWxsKSAhZGVmYXVsdDtcbiRwbHlyLWZvbnQtc2l6ZS1tZW51OiB2YXIoLS1wbHlyLWZvbnQtc2l6ZS1tZW51LCAkcGx5ci1mb250LXNpemUtc21hbGwpICFkZWZhdWx0O1xuJHBseXItZm9udC1zaXplLWJhZGdlOiB2YXIoLS1wbHlyLWZvbnQtc2l6ZS1iYWRnZSwgOXB4KSAhZGVmYXVsdDtcbiRwbHlyLWZvbnQtd2VpZ2h0LXJlZ3VsYXI6IHZhcigtLXBseXItZm9udC13ZWlnaHQtcmVndWxhciwgNDAwKSAhZGVmYXVsdDtcbiRwbHlyLWZvbnQtd2VpZ2h0LWJvbGQ6IHZhcigtLXBseXItZm9udC13ZWlnaHQtYm9sZCwgNjAwKSAhZGVmYXVsdDtcbiRwbHlyLWxpbmUtaGVpZ2h0OiB2YXIoLS1wbHlyLWxpbmUtaGVpZ2h0LCAxLjcpICFkZWZhdWx0O1xuJHBseXItZm9udC1zbW9vdGhpbmc6IHZhcigtLXBseXItZm9udC1zbW9vdGhpbmcsIGZhbHNlKSAhZGVmYXVsdDtcbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBNZW51c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLnBseXJfX21lbnUge1xuICBkaXNwbGF5OiBmbGV4OyAvLyBFZGdlIGZpeFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgLy8gQW5pbWF0ZSB0aGUgaWNvblxuICAucGx5cl9fY29udHJvbCBzdmcge1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2U7XG4gIH1cblxuICAucGx5cl9fY29udHJvbFthcmlhLWV4cGFuZGVkPSd0cnVlJ10ge1xuICAgIHN2ZyB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gICAgfVxuXG4gICAgLy8gSGlkZSB0b29sdGlwXG4gICAgLnBseXJfX3Rvb2x0aXAge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAvLyBUaGUgYWN0dWFsIG1lbnUgY29udGFpbmVyXG4gICZfX2NvbnRhaW5lciB7XG4gICAgYW5pbWF0aW9uOiBwbHlyLXBvcHVwIDAuMnMgZWFzZTtcbiAgICBiYWNrZ3JvdW5kOiAkcGx5ci1tZW51LWJhY2tncm91bmQ7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGJvdHRvbTogMTAwJTtcbiAgICBib3gtc2hhZG93OiAkcGx5ci1tZW51LXNoYWRvdztcbiAgICBjb2xvcjogJHBseXItbWVudS1jb2xvcjtcbiAgICBmb250LXNpemU6ICRwbHlyLWZvbnQtc2l6ZS1iYXNlO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAtM3B4O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB6LWluZGV4OiAzO1xuXG4gICAgPiBkaXYge1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIHRyYW5zaXRpb246IGhlaWdodCAwLjM1cyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLCB3aWR0aCAwLjM1cyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO1xuICAgIH1cblxuICAgIC8vIEFycm93XG4gICAgJjo6YWZ0ZXIge1xuICAgICAgYm9yZGVyOiAkcGx5ci1tZW51LWFycm93LXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItdG9wLWNvbG9yOiAkcGx5ci1tZW51LWJhY2tncm91bmQ7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGhlaWdodDogMDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiBjYWxjKCgoI3skcGx5ci1jb250cm9sLWljb24tc2l6ZX0gLyAyKSArICN7JHBseXItY29udHJvbC1wYWRkaW5nfSkgLSAoI3skcGx5ci1tZW51LWFycm93LXNpemV9IC8gMikpO1xuICAgICAgdG9wOiAxMDAlO1xuICAgICAgd2lkdGg6IDA7XG4gICAgfVxuXG4gICAgW3JvbGU9J21lbnUnXSB7XG4gICAgICBwYWRkaW5nOiAkcGx5ci1jb250cm9sLXBhZGRpbmc7XG4gICAgfVxuXG4gICAgW3JvbGU9J21lbnVpdGVtJ10sXG4gICAgW3JvbGU9J21lbnVpdGVtcmFkaW8nXSB7XG4gICAgICBtYXJnaW4tdG9wOiAycHg7XG5cbiAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIE9wdGlvbnNcbiAgICAucGx5cl9fY29udHJvbCB7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgY29sb3I6ICRwbHlyLW1lbnUtY29sb3I7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZm9udC1zaXplOiAkcGx5ci1mb250LXNpemUtbWVudTtcbiAgICAgIHBhZGRpbmc6IGNhbGMoI3skcGx5ci1jb250cm9sLXBhZGRpbmd9IC8gMS41KSBjYWxjKCN7JHBseXItY29udHJvbC1wYWRkaW5nfSAqIDEuNSk7XG4gICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICA+IHNwYW4ge1xuICAgICAgICBhbGlnbi1pdGVtczogaW5oZXJpdDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9XG5cbiAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgYm9yZGVyOiAkcGx5ci1tZW51LWl0ZW0tYXJyb3ctc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgIH1cblxuICAgICAgJi0tZm9yd2FyZCB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IGNhbGMoI3skcGx5ci1jb250cm9sLXBhZGRpbmd9ICogNCk7XG5cbiAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAkcGx5ci1tZW51LWl0ZW0tYXJyb3ctY29sb3I7XG4gICAgICAgICAgcmlnaHQ6IGNhbGMoKCN7JHBseXItY29udHJvbC1wYWRkaW5nfSAqIDEuNSkgLSAjeyRwbHlyLW1lbnUtaXRlbS1hcnJvdy1zaXplfSk7XG4gICAgICAgIH1cblxuICAgICAgICAmLnBseXJfX3RhYi1mb2N1czo6YWZ0ZXIsXG4gICAgICAgICY6aG92ZXI6OmFmdGVyIHtcbiAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogY3VycmVudENvbG9yO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICYtLWJhY2sge1xuICAgICAgICBmb250LXdlaWdodDogJHBseXItZm9udC13ZWlnaHQtcmVndWxhcjtcbiAgICAgICAgbWFyZ2luOiAkcGx5ci1jb250cm9sLXBhZGRpbmc7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IGNhbGMoI3skcGx5ci1jb250cm9sLXBhZGRpbmd9IC8gMik7XG4gICAgICAgIHBhZGRpbmctbGVmdDogY2FsYygjeyRwbHlyLWNvbnRyb2wtcGFkZGluZ30gKiA0KTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gKCN7JHBseXItY29udHJvbC1wYWRkaW5nfSAqIDIpKTtcblxuICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAkcGx5ci1tZW51LWl0ZW0tYXJyb3ctY29sb3I7XG4gICAgICAgICAgbGVmdDogY2FsYygoI3skcGx5ci1jb250cm9sLXBhZGRpbmd9ICogMS41KSAtICN7JHBseXItbWVudS1pdGVtLWFycm93LXNpemV9KTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHBseXItbWVudS1iYWNrLWJvcmRlci1jb2xvcjtcbiAgICAgICAgICBib3gtc2hhZG93OiAwIDFweCAwICRwbHlyLW1lbnUtYmFjay1ib3JkZXItc2hhZG93LWNvbG9yO1xuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgbWFyZ2luLXRvcDogY2FsYygjeyRwbHlyLWNvbnRyb2wtcGFkZGluZ30gLyAyKTtcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICB0b3A6IDEwMCU7XG4gICAgICAgIH1cblxuICAgICAgICAmLnBseXJfX3RhYi1mb2N1czo6YWZ0ZXIsXG4gICAgICAgICY6aG92ZXI6OmFmdGVyIHtcbiAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC5wbHlyX19jb250cm9sW3JvbGU9J21lbnVpdGVtcmFkaW8nXSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6ICRwbHlyLWNvbnRyb2wtcGFkZGluZztcblxuICAgICAgJjo6YmVmb3JlLFxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgfVxuXG4gICAgICAmOjpiZWZvcmUge1xuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKCMwMDAsIDAuMSk7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZmxleC1zaHJpbms6IDA7XG4gICAgICAgIGhlaWdodDogMTZweDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAkcGx5ci1jb250cm9sLXNwYWNpbmc7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAgICAgIHdpZHRoOiAxNnB4O1xuICAgICAgfVxuXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgaGVpZ2h0OiA2cHg7XG4gICAgICAgIGxlZnQ6IDEycHg7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGUoMCk7XG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UsIG9wYWNpdHkgMC4zcyBlYXNlO1xuICAgICAgICB3aWR0aDogNnB4O1xuICAgICAgfVxuXG4gICAgICAmW2FyaWEtY2hlY2tlZD0ndHJ1ZSddIHtcbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAkcGx5ci1jb250cm9sLXRvZ2dsZS1jaGVja2VkLWJhY2tncm91bmQ7XG4gICAgICAgIH1cblxuICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGUoMSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJi5wbHlyX190YWItZm9jdXM6OmJlZm9yZSxcbiAgICAgICY6aG92ZXI6OmJlZm9yZSB7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoJHBseXItY29sb3ItZ3JheS05MDAsIDAuMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gT3B0aW9uIHZhbHVlXG4gICAgLnBseXJfX21lbnVfX3ZhbHVlIHtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICBtYXJnaW4tcmlnaHQ6IGNhbGMoKCN7JHBseXItY29udHJvbC1wYWRkaW5nfSAtIDIpICogLTEpO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIHBhZGRpbmctbGVmdDogY2FsYygjeyRwbHlyLWNvbnRyb2wtcGFkZGluZ30gKiAzLjUpO1xuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgfVxuICB9XG59XG4iXX0= */
