.fc .fc-toolbar {
  flex-wrap: wrap;
}
.fc .fc-toolbar .fc-prev-button,
.fc .fc-toolbar .fc-next-button {
  display: inline-block;
  background-color: transparent;
  border-color: transparent;
}
.fc .fc-toolbar .fc-prev-button:hover, .fc .fc-toolbar .fc-prev-button:active, .fc .fc-toolbar .fc-prev-button:focus,
.fc .fc-toolbar .fc-next-button:hover,
.fc .fc-toolbar .fc-next-button:active,
.fc .fc-toolbar .fc-next-button:focus {
  background-color: transparent !important;
  border-color: transparent !important;
  box-shadow: none !important;
}
.fc .fc-toolbar .fc-prev-button {
  padding-left: 0 !important;
}
.fc .fc-toolbar .fc-button:not(.fc-next-button):not(.fc-prev-button) {
  padding: 0.438rem 1.125rem;
}
.fc .fc-toolbar .fc-button:not(.fc-next-button):not(.fc-prev-button):active, .fc .fc-toolbar .fc-button:not(.fc-next-button):not(.fc-prev-button):focus {
  box-shadow: none !important;
}
.fc .fc-toolbar > * > :not(:first-child) {
  margin-left: 0 !important;
}
[dir=rtl] .fc .fc-toolbar > * > :not(:first-child) {
  margin-right: 0 !important;
}
.fc .fc-toolbar .fc-toolbar-chunk {
  display: flex;
  align-items: center;
}
.fc .fc-toolbar .fc-button-group .fc-button {
  text-transform: capitalize;
}
.fc .fc-toolbar .fc-button-group + div {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}
.fc .fc-toolbar .fc--button:empty,
.fc .fc-toolbar .fc-toolbar-chunk:empty {
  display: none;
}
.fc .fc-toolbar .fc-sidebarToggle-button + div {
  margin-left: 0;
}
.fc .fc-view-harness {
  min-height: 650px;
}
.fc .fc-h-event .fc-event-main,
.fc .fc-v-event .fc-event-main {
  color: inherit !important;
}
.fc .fc-daygrid-body-natural .fc-daygrid-day-events {
  margin-top: 0.5rem !important;
  margin-bottom: 0.5rem !important;
}
.fc .fc-view-harness {
  margin: 0 -1.5rem;
}
.fc .fc-view-harness .fc-daygrid-body .fc-daygrid-day .fc-daygrid-day-top {
  flex-direction: row;
}
.fc .fc-view-harness .fc-daygrid-body .fc-daygrid-day .fc-daygrid-day-top .fc-daygrid-day-number {
  float: left;
  margin-left: 0.5rem;
}
.fc .fc-view-harness .fc-event {
  font-size: 0.8rem;
  font-weight: 600;
  padding: 0.25rem 0.5rem;
  border-radius: 3px;
}
.fc .fc-view-harness .fc-daygrid-event-harness .fc-event.private-event {
  background-color: transparent !important;
  border-color: transparent !important;
}
.fc .fc-view-harness .fc-event .fc-daygrid-event-dot {
  display: none;
}
.fc .fc-timegrid .fc-timegrid-divider {
  display: none;
}
.fc .fc-daygrid-event-harness + .fc-daygrid-event-harness {
  margin-top: 0.3rem !important;
}
.fc .fc-popover {
  z-index: 1090 !important;
}
.fc .fc-popover .fc-popover-header {
  padding: 0.566rem;
}

.light-style .fc .fc-toolbar .fc-prev-button .fc-icon,
.light-style .fc .fc-toolbar .fc-next-button .fc-icon {
  color: #697a8d;
}
.light-style .fc table.fc-scrollgrid {
  border-color: #d9dee3;
}
.light-style .fc table.fc-scrollgrid .fc-col-header tbody {
  border: none;
}
.light-style .fc table.fc-scrollgrid .fc-col-header .fc-col-header-cell {
  border-color: #d9dee3;
}
.light-style .fc table.fc-scrollgrid td {
  border-color: #d9dee3;
}
.light-style .fc .private-event .fc-event-time,
.light-style .fc .private-event .fc-event-title {
  color: #ff3e1d;
}
.light-style .fc .fc-day-today {
  background-color: #f6f7f8 !important;
}
.light-style .fc .fc-day-today .fc-popover-body {
  background-color: #fff !important;
}
.light-style .fc .fc-popover .fc-popover-header {
  background: #f5f5f9;
}
.light-style .fc .fc-list {
  border-color: #d9dee3;
}
.light-style .fc .fc-list .fc-list-table th {
  border: 0;
  background: #f5f5f9;
}
.light-style .fc .fc-list .fc-list-table .fc-list-event {
  cursor: pointer;
}
.light-style .fc .fc-list .fc-list-table .fc-list-event:hover td {
  background-color: rgba(67, 89, 113, 0.1);
}
.light-style .fc .fc-list .fc-list-table .fc-list-event td {
  border-color: #d9dee3;
}
.light-style .fc .fc-list .fc-list-empty {
  background-color: #f5f5f9;
}
.light-style .fc table,
.light-style .fc tbody,
.light-style .fc thead,
.light-style .fc tbody td {
  border-color: #d9dee3;
}
.light-style .fc-event-primary:not(.fc-list-event) {
  background-color: #e7e7ff !important;
  color: #696cff !important;
}
.light-style .fc-event-primary:not(.fc-list-event) {
  border-color: rgba(105, 108, 255, 0.15);
}
.light-style .fc-event-primary.fc-list-event .fc-list-event-dot {
  border-color: #696cff !important;
}
.light-style .fc-event-secondary:not(.fc-list-event) {
  background-color: #ebeef0 !important;
  color: #8592a3 !important;
}
.light-style .fc-event-secondary:not(.fc-list-event) {
  border-color: rgba(133, 146, 163, 0.15);
}
.light-style .fc-event-secondary.fc-list-event .fc-list-event-dot {
  border-color: #8592a3 !important;
}
.light-style .fc-event-success:not(.fc-list-event) {
  background-color: #e8fadf !important;
  color: #71dd37 !important;
}
.light-style .fc-event-success:not(.fc-list-event) {
  border-color: rgba(113, 221, 55, 0.15);
}
.light-style .fc-event-success.fc-list-event .fc-list-event-dot {
  border-color: #71dd37 !important;
}
.light-style .fc-event-info:not(.fc-list-event) {
  background-color: #d7f5fc !important;
  color: #03c3ec !important;
}
.light-style .fc-event-info:not(.fc-list-event) {
  border-color: rgba(3, 195, 236, 0.15);
}
.light-style .fc-event-info.fc-list-event .fc-list-event-dot {
  border-color: #03c3ec !important;
}
.light-style .fc-event-warning:not(.fc-list-event) {
  background-color: #fff2d6 !important;
  color: #ffab00 !important;
}
.light-style .fc-event-warning:not(.fc-list-event) {
  border-color: rgba(255, 171, 0, 0.15);
}
.light-style .fc-event-warning.fc-list-event .fc-list-event-dot {
  border-color: #ffab00 !important;
}
.light-style .fc-event-danger:not(.fc-list-event) {
  background-color: #ffe0db !important;
  color: #ff3e1d !important;
}
.light-style .fc-event-danger:not(.fc-list-event) {
  border-color: rgba(255, 62, 29, 0.15);
}
.light-style .fc-event-danger.fc-list-event .fc-list-event-dot {
  border-color: #ff3e1d !important;
}
.light-style .fc-event-light:not(.fc-list-event) {
  background-color: white !important;
  color: #fcfdfd !important;
}
.light-style .fc-event-light:not(.fc-list-event) {
  border-color: rgba(252, 253, 253, 0.15);
}
.light-style .fc-event-light.fc-list-event .fc-list-event-dot {
  border-color: #fcfdfd !important;
}
.light-style .fc-event-dark:not(.fc-list-event) {
  background-color: #dcdfe1 !important;
  color: #233446 !important;
}
.light-style .fc-event-dark:not(.fc-list-event) {
  border-color: rgba(35, 52, 70, 0.15);
}
.light-style .fc-event-dark.fc-list-event .fc-list-event-dot {
  border-color: #233446 !important;
}
.light-style .fc-event-gray:not(.fc-list-event) {
  background-color: rgba(253, 253, 254, 0.856) !important;
  color: rgba(67, 89, 113, 0.1) !important;
}
.light-style .fc-event-gray:not(.fc-list-event) {
  border-color: rgba(67, 89, 113, 0.15);
}
.light-style .fc-event-gray.fc-list-event .fc-list-event-dot {
  border-color: rgba(67, 89, 113, 0.1) !important;
}

.dark-style .fc .fc-toolbar .fc-prev-button .fc-icon,
.dark-style .fc .fc-toolbar .fc-next-button .fc-icon {
  color: #a3a4cc;
}
.dark-style .fc .fc-toolbar .fc-sidebarToggle-button {
  color: #fff;
}
.dark-style .fc table.fc-scrollgrid {
  border-color: #444564;
}
.dark-style .fc table.fc-scrollgrid .fc-col-header tbody {
  border: none;
}
.dark-style .fc table.fc-scrollgrid .fc-col-header .fc-col-header-cell {
  border-color: #444564;
}
.dark-style .fc table.fc-scrollgrid td {
  border-color: #444564;
}
.dark-style .fc .private-event .fc-event-time,
.dark-style .fc .private-event .fc-event-title {
  color: #ff3e1d;
}
.dark-style .fc .fc-day-today {
  background-color: #232333 !important;
}
.dark-style .fc .fc-day-today .fc-popover-body {
  background-color: #2b2c40 !important;
}
.dark-style .fc .fc-divider {
  background: #444564;
  border-color: #444564;
}
.dark-style .fc .fc-popover {
  background-color: #232333;
  border: 0;
}
.dark-style .fc .fc-popover .fc-popover-header {
  background-color: #6b6c9d;
}
.dark-style .fc .fc-list {
  border-color: #444564;
}
.dark-style .fc .fc-list .fc-list-table th {
  border: 0;
  background: #232333;
}
.dark-style .fc .fc-list .fc-list-table .fc-list-event {
  cursor: pointer;
}
.dark-style .fc .fc-list .fc-list-table .fc-list-event:hover td {
  background-color: rgba(255, 255, 255, 0.03);
}
.dark-style .fc .fc-list .fc-list-table .fc-list-event td {
  border-color: #444564;
}
.dark-style .fc .fc-list .fc-list-empty {
  background-color: #232333;
}
.dark-style .fc table,
.dark-style .fc .fc-timegrid-axis,
.dark-style .fc tbody,
.dark-style .fc thead,
.dark-style .fc tbody td {
  border-color: #444564;
}
.dark-style .fc-event-primary:not(.fc-list-event) {
  background-color: #35365f !important;
  color: #696cff !important;
}
.dark-style .fc-event-primary:not(.fc-list-event) {
  border-color: rgba(105, 108, 255, 0.15);
  box-shadow: none;
}
.dark-style .fc-event-primary.fc-list-event .fc-list-event-dot {
  border-color: #696cff !important;
}
.dark-style .fc-event-secondary:not(.fc-list-event) {
  background-color: #393c50 !important;
  color: #8592a3 !important;
}
.dark-style .fc-event-secondary:not(.fc-list-event) {
  border-color: rgba(133, 146, 163, 0.15);
  box-shadow: none;
}
.dark-style .fc-event-secondary.fc-list-event .fc-list-event-dot {
  border-color: #8592a3 !important;
}
.dark-style .fc-event-success:not(.fc-list-event) {
  background-color: #36483f !important;
  color: #71dd37 !important;
}
.dark-style .fc-event-success:not(.fc-list-event) {
  border-color: rgba(113, 221, 55, 0.15);
  box-shadow: none;
}
.dark-style .fc-event-success.fc-list-event .fc-list-event-dot {
  border-color: #71dd37 !important;
}
.dark-style .fc-event-info:not(.fc-list-event) {
  background-color: #25445c !important;
  color: #03c3ec !important;
}
.dark-style .fc-event-info:not(.fc-list-event) {
  border-color: rgba(3, 195, 236, 0.15);
  box-shadow: none;
}
.dark-style .fc-event-info.fc-list-event .fc-list-event-dot {
  border-color: #03c3ec !important;
}
.dark-style .fc-event-warning:not(.fc-list-event) {
  background-color: #4d4036 !important;
  color: #ffab00 !important;
}
.dark-style .fc-event-warning:not(.fc-list-event) {
  border-color: rgba(255, 171, 0, 0.15);
  box-shadow: none;
}
.dark-style .fc-event-warning.fc-list-event .fc-list-event-dot {
  border-color: #ffab00 !important;
}
.dark-style .fc-event-danger:not(.fc-list-event) {
  background-color: #4d2f3a !important;
  color: #ff3e1d !important;
}
.dark-style .fc-event-danger:not(.fc-list-event) {
  border-color: rgba(255, 62, 29, 0.15);
  box-shadow: none;
}
.dark-style .fc-event-danger.fc-list-event .fc-list-event-dot {
  border-color: #ff3e1d !important;
}
.dark-style .fc-event-light:not(.fc-list-event) {
  background-color: #313244 !important;
  color: #4f505c !important;
}
.dark-style .fc-event-light:not(.fc-list-event) {
  border-color: rgba(79, 80, 92, 0.15);
  box-shadow: none;
}
.dark-style .fc-event-light.fc-list-event .fc-list-event-dot {
  border-color: #4f505c !important;
}
.dark-style .fc-event-dark:not(.fc-list-event) {
  background-color: #35364f !important;
  color: #6b6c9d !important;
}
.dark-style .fc-event-dark:not(.fc-list-event) {
  border-color: rgba(107, 108, 157, 0.15);
  box-shadow: none;
}
.dark-style .fc-event-dark.fc-list-event .fc-list-event-dot {
  border-color: #6b6c9d !important;
}
.dark-style .fc-event-gray:not(.fc-list-event) {
  background-color: rgba(67, 68, 86, 0.968) !important;
  color: rgba(255, 255, 255, 0.8) !important;
}
.dark-style .fc-event-gray:not(.fc-list-event) {
  border-color: rgba(255, 255, 255, 0.15);
  box-shadow: none;
}
.dark-style .fc-event-gray.fc-list-event .fc-list-event-dot {
  border-color: rgba(255, 255, 255, 0.8) !important;
}

@media (max-width: 575.98px) {
  .fc .fc-header-toolbar .fc-toolbar-chunk + .fc-toolbar-chunk {
    margin-top: 1rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
