@charset "UTF-8";
/* Suggestions items */
.tagify__dropdown.users-list {
  font-size: 1rem;
}
.tagify__dropdown.users-list .tagify__dropdown__item {
  padding: 0.5em 0.7em;
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 0 1em;
  grid-template-areas: "avatar name" "avatar email";
}
.tagify__dropdown.users-list .tagify__dropdown__item__avatar-wrap {
  grid-area: avatar;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  overflow: hidden;
  transition: 0.1s ease-out;
}
.tagify__dropdown.users-list img {
  width: 100%;
  vertical-align: top;
}
.tagify__dropdown.users-list strong {
  grid-area: name;
  width: 100%;
  align-self: center;
  font-weight: 500;
}
.tagify__dropdown.users-list span {
  grid-area: email;
  width: 100%;
  font-size: 0.9em;
  opacity: 0.6;
}

/* Tags items */
.tagify__tag {
  white-space: nowrap;
}
.tagify__tag .tagify__tag__avatar-wrap {
  width: 22px;
  height: 22px;
  white-space: normal;
  border-radius: 50%;
  margin-right: 5px;
  transition: 0.12s ease-out;
  vertical-align: middle;
}
.tagify__tag img {
  width: 100%;
  vertical-align: top;
}

[dir=rtl] .tagify__tag .tagify__tag__avatar-wrap {
  margin-left: 5px;
  margin-right: auto;
}

.light-style .tagify__dropdown.users-list .tagify__dropdown__item__avatar-wrap {
  background: #f5f5f9;
}
.light-style .tagify__tag .tagify__tag__avatar-wrap {
  background: #f5f5f9;
}
.light-style .tagify__dropdown.users-list .addAll {
  border-bottom: 1px solid #d9dee3;
}

.dark-style .tagify__dropdown.users-list .tagify__dropdown__item__avatar-wrap {
  background: #232333;
}
.dark-style .tagify__tag .tagify__tag__avatar-wrap {
  background: #232333;
}
.dark-style .tagify__dropdown.users-list .addAll {
  border-bottom: 1px solid #444564;
}

.tags-inline .tagify__dropdown__wrapper {
  padding: 0 0.375rem 0.375rem 0.375rem;
}
.tags-inline .tagify__dropdown__item {
  display: inline-block;
  border-radius: 3px;
  padding: 0.3em 0.5em;
  margin: 0.375rem 0.375rem 0 0;
  font-size: 0.85em;
  transition: 0s;
}

[dir=rtl] .tags-inline .tagify__dropdown__item {
  margin: 0.375rem 0 0 0.375rem;
}

.light-style .tags-inline .tagify__dropdown__item {
  border: 1px solid #d9dee3;
  color: #697a8d;
}

.dark-style .tags-inline .tagify__dropdown__item {
  border: 1px solid #444564;
  color: #a3a4cc;
}

:root {
  --tagify-dd-color-primary: rgb(53,149,246);
  --tagify-dd-bg-color: white;
  --tagify-dd-item-pad: .3em .5em;
}

.tagify {
  --tags-disabled-bg: #F1F1F1;
  --tags-border-color: #DDD;
  --tags-hover-border-color: #CCC;
  --tags-focus-border-color: #3595f6;
  --tag-border-radius: 3px;
  --tag-bg: #E5E5E5;
  --tag-hover: #D3E2E2;
  --tag-text-color: black;
  --tag-text-color--edit: black;
  --tag-pad: 0.3em 0.5em;
  --tag-inset-shadow-size: 1.1em;
  --tag-invalid-color: #ff3e1d;
  --tag-invalid-bg: rgba(255, 62, 29, 0.5);
  --tag-remove-bg: rgba(255, 62, 29, 0.3);
  --tag-remove-btn-color: black;
  --tag-remove-btn-bg: none;
  --tag-remove-btn-bg--hover: #ff2804;
  --input-color: inherit;
  --tag--min-width: 1ch;
  --tag--max-width: auto;
  --tag-hide-transition: 0.3s;
  --placeholder-color: rgba(0, 0, 0, 0.4);
  --placeholder-color-focus: rgba(0, 0, 0, 0.25);
  --loader-size: .8em;
  --readonly-striped: 1;
  display: inline-flex;
  align-items: flex-start;
  flex-wrap: wrap;
  border: 1px solid var(--tags-border-color);
  padding: 0;
  line-height: 0;
  cursor: text;
  outline: none;
  position: relative;
  box-sizing: border-box;
  transition: 0.1s;
}
@keyframes tags--bump {
  30% {
    transform: scale(1.2);
  }
}
@keyframes rotateLoader {
  to {
    transform: rotate(1turn);
  }
}
.tagify:hover:not(.tagify--focus):not(.tagify--invalid) {
  --tags-border-color: var(--tags-hover-border-color);
}
.tagify[disabled] {
  background: var(--tags-disabled-bg);
  filter: saturate(0);
  opacity: 0.5;
  pointer-events: none;
}
.tagify[readonly].tagify--select, .tagify[disabled].tagify--select {
  pointer-events: none;
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select), .tagify[disabled]:not(.tagify--mix):not(.tagify--select) {
  cursor: default;
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select) > .tagify__input, .tagify[disabled]:not(.tagify--mix):not(.tagify--select) > .tagify__input {
  visibility: hidden;
  width: 0;
  margin: 5px 0;
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div, .tagify[disabled]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div {
  padding: var(--tag-pad);
}
.tagify[readonly]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div::before, .tagify[disabled]:not(.tagify--mix):not(.tagify--select) .tagify__tag > div::before {
  animation: readonlyStyles 1s calc(-1s * (var(--readonly-striped) - 1)) paused;
}
@keyframes readonlyStyles {
  0% {
    background: linear-gradient(45deg, var(--tag-bg) 25%, transparent 25%, transparent 50%, var(--tag-bg) 50%, var(--tag-bg) 75%, transparent 75%, transparent) 0/5px 5px;
    box-shadow: none;
    filter: brightness(0.95);
  }
}
.tagify[readonly] .tagify__tag__removeBtn, .tagify[disabled] .tagify__tag__removeBtn {
  display: none;
}
.tagify--loading .tagify__input > br:last-child {
  display: none;
}
.tagify--loading .tagify__input::before {
  content: none;
}
.tagify--loading .tagify__input::after {
  content: "";
  vertical-align: middle;
  opacity: 1;
  width: 0.7em;
  height: 0.7em;
  width: var(--loader-size);
  height: var(--loader-size);
  min-width: 0;
  border: 3px solid;
  border-color: #EEE #BBB #888 transparent;
  border-radius: 50%;
  animation: rotateLoader 0.4s infinite linear;
  content: "" !important;
  margin: -2px 0 -2px 0.5em;
}
.tagify--loading .tagify__input:empty::after {
  margin-left: 0;
}
.tagify + input,
.tagify + textarea {
  position: absolute !important;
  left: -9999em !important;
  transform: scale(0) !important;
}
.tagify__tag {
  display: inline-flex;
  align-items: center;
  margin: 5px 0 5px 5px;
  position: relative;
  z-index: 1;
  outline: none;
  line-height: normal;
  cursor: default;
  transition: 0.13s ease-out;
}
.tagify__tag > div {
  vertical-align: top;
  box-sizing: border-box;
  max-width: 100%;
  padding: var(--tag-pad);
  color: var(--tag-text-color);
  line-height: inherit;
  border-radius: var(--tag-border-radius);
  white-space: nowrap;
  transition: 0.13s ease-out;
}
.tagify__tag > div > * {
  white-space: pre-wrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: inline-block;
  vertical-align: top;
  min-width: var(--tag--min-width);
  max-width: var(--tag--max-width);
  transition: 0.8s ease, 0.1s color;
}
.tagify__tag > div > *[contenteditable] {
  outline: none;
  -webkit-user-select: text;
     -moz-user-select: text;
          user-select: text;
  cursor: text;
  margin: -2px;
  padding: 2px;
  max-width: 350px;
}
.tagify__tag > div::before {
  content: "";
  position: absolute;
  border-radius: inherit;
  inset: var(--tag-bg-inset, 0);
  z-index: -1;
  pointer-events: none;
  transition: 120ms ease;
  animation: tags--bump 0.3s ease-out 1;
  box-shadow: 0 0 0 var(--tag-inset-shadow-size) var(--tag-bg) inset;
}
.tagify__tag:hover:not([readonly]) div::before, .tagify__tag:focus div::before {
  --tag-bg-inset: -2.5px;
  --tag-bg: var(--tag-hover);
}
.tagify__tag--loading {
  pointer-events: none;
}
.tagify__tag--loading .tagify__tag__removeBtn {
  display: none;
}
.tagify__tag--loading::after {
  --loader-size: .4em;
  content: "";
  vertical-align: middle;
  opacity: 1;
  width: 0.7em;
  height: 0.7em;
  width: var(--loader-size);
  height: var(--loader-size);
  min-width: 0;
  border: 3px solid;
  border-color: #EEE #BBB #888 transparent;
  border-radius: 50%;
  animation: rotateLoader 0.4s infinite linear;
  margin: 0 0.5em 0 -0.1em;
}
.tagify__tag--flash div::before {
  animation: none;
}
.tagify__tag--hide {
  width: 0 !important;
  padding-left: 0;
  padding-right: 0;
  margin-left: 0;
  margin-right: 0;
  opacity: 0;
  transform: scale(0);
  transition: var(--tag-hide-transition);
  pointer-events: none;
}
.tagify__tag--hide > div > * {
  white-space: nowrap;
}
.tagify__tag.tagify--noAnim > div::before {
  animation: none;
}
.tagify__tag.tagify--notAllowed:not(.tagify__tag--editable) div > span {
  opacity: 0.5;
}
.tagify__tag.tagify--notAllowed:not(.tagify__tag--editable) div::before {
  --tag-bg: var(--tag-invalid-bg);
  transition: 0.2s;
}
.tagify__tag[readonly] .tagify__tag__removeBtn {
  display: none;
}
.tagify__tag[readonly] > div::before {
  animation: readonlyStyles 1s calc(-1s * (var(--readonly-striped) - 1)) paused;
}
@keyframes readonlyStyles {
  0% {
    background: linear-gradient(45deg, var(--tag-bg) 25%, transparent 25%, transparent 50%, var(--tag-bg) 50%, var(--tag-bg) 75%, transparent 75%, transparent) 0/5px 5px;
    box-shadow: none;
    filter: brightness(0.95);
  }
}
.tagify__tag--editable > div {
  color: var(--tag-text-color--edit);
}
.tagify__tag--editable > div::before {
  box-shadow: 0 0 0 2px var(--tag-hover) inset !important;
}
.tagify__tag--editable > .tagify__tag__removeBtn {
  pointer-events: none;
}
.tagify__tag--editable > .tagify__tag__removeBtn::after {
  opacity: 0;
  transform: translateX(100%) translateX(5px);
}
.tagify__tag--editable.tagify--invalid > div::before {
  box-shadow: 0 0 0 2px var(--tag-invalid-color) inset !important;
}
.tagify__tag__removeBtn {
  order: 5;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 50px;
  cursor: pointer;
  font: 14px/1 Arial;
  background: var(--tag-remove-btn-bg);
  color: var(--tag-remove-btn-color);
  width: 14px;
  height: 14px;
  margin-right: 4.6666666667px;
  margin-left: auto;
  overflow: hidden;
  transition: 0.2s ease-out;
}
.tagify__tag__removeBtn::after {
  content: "Ã—";
  transition: 0.3s, color 0s;
}
.tagify__tag__removeBtn:hover {
  color: white;
  background: var(--tag-remove-btn-bg--hover);
}
.tagify__tag__removeBtn:hover + div > span {
  opacity: 0.5;
}
.tagify__tag__removeBtn:hover + div::before {
  box-shadow: 0 0 0 var(--tag-inset-shadow-size) var(--tag-remove-bg, rgba(255, 62, 29, 0.3)) inset !important;
  transition: box-shadow 0.2s;
}
.tagify:not(.tagify--mix) .tagify__input br {
  display: none;
}
.tagify:not(.tagify--mix) .tagify__input * {
  display: inline;
  white-space: nowrap;
}
.tagify__input {
  flex-grow: 1;
  display: inline-block;
  min-width: 110px;
  margin: 5px;
  padding: var(--tag-pad);
  line-height: normal;
  position: relative;
  white-space: pre-wrap;
  color: var(--input-color);
  box-sizing: inherit;
  /* Seems firefox newer versions don't need this any more
  @supports ( -moz-appearance:none ){
      &::before{
          line-height: inherit;
          position:relative;
      }
  }
  */
}
@-moz-document url-prefix() {}
.tagify__input:empty::before {
  position: static;
}
.tagify__input:focus {
  outline: none;
}
.tagify__input:focus::before {
  transition: 0.2s ease-out;
  opacity: 0;
  transform: translatex(6px);
  /* ALL MS BROWSERS: hide placeholder (on focus) otherwise the caret is placed after it, which is weird */
  /* IE Edge 12+ CSS styles go here */
}
@supports (-ms-ime-align: auto) {
  .tagify__input:focus::before {
    display: none;
  }
}
.tagify__input:focus:empty::before {
  transition: 0.2s ease-out;
  opacity: 1;
  transform: none;
  color: rgba(0, 0, 0, 0.25);
  color: var(--placeholder-color-focus);
}
@-moz-document url-prefix() {
  .tagify__input:focus:empty::after {
    display: none;
  }
}
.tagify__input::before {
  content: attr(data-placeholder);
  height: 1em;
  line-height: 1em;
  margin: auto 0;
  z-index: 1;
  color: var(--placeholder-color);
  white-space: nowrap;
  pointer-events: none;
  opacity: 0;
  position: absolute;
}
.tagify__input::after {
  content: attr(data-suggest);
  display: inline-block;
  vertical-align: middle;
  position: absolute;
  min-width: calc(100% - 1.5em);
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: pre; /* allows spaces at the beginning */
  color: var(--tag-text-color);
  opacity: 0.3;
  pointer-events: none;
  max-width: 100px;
}
.tagify__input .tagify__tag {
  margin: 0 1px;
}
.tagify--mix {
  display: block;
}
.tagify--mix .tagify__input {
  padding: 5px;
  margin: 0;
  width: 100%;
  height: 100%;
  line-height: 1.5;
  display: block;
}
.tagify--mix .tagify__input::before {
  height: auto;
  display: none;
  line-height: inherit;
}
.tagify--mix .tagify__input::after {
  content: none;
}
.tagify--select::after {
  content: ">";
  opacity: 0.5;
  position: absolute;
  top: 50%;
  right: 0;
  bottom: 0;
  font: 16px monospace;
  line-height: 8px;
  height: 8px;
  pointer-events: none;
  transform: translate(-150%, -50%) scaleX(1.2) rotate(90deg);
  transition: 0.2s ease-in-out;
}
.tagify--select[aria-expanded=true]::after {
  transform: translate(-150%, -50%) rotate(270deg) scaleY(1.2);
}
.tagify--select .tagify__tag {
  position: absolute;
  top: 0;
  right: 1.8em;
  bottom: 0;
}
.tagify--select .tagify__tag div {
  display: none;
}
.tagify--select .tagify__input {
  width: 100%;
}
.tagify--empty .tagify__input::before {
  transition: 0.2s ease-out;
  opacity: 1;
  transform: none;
  display: inline-block;
  width: auto;
}
.tagify--mix .tagify--empty .tagify__input::before {
  display: inline-block;
}
.tagify--focus {
  --tags-border-color: var(--tags-focus-border-color);
  transition: 0s;
}
.tagify--invalid {
  --tags-border-color: #ff3e1d;
}
.tagify__dropdown {
  position: absolute;
  z-index: 9999;
  transform: translateY(1px);
  overflow: hidden;
}
.tagify__dropdown[placement=top] {
  margin-top: 0;
  transform: translateY(-100%);
}
.tagify__dropdown[placement=top] .tagify__dropdown__wrapper {
  border-top-width: 1.1px;
  border-bottom-width: 0;
}
.tagify__dropdown[position=text] {
  box-shadow: 0 0 0 3px rgba(var(--tagify-dd-color-primary), 0.1);
  font-size: 0.9em;
}
.tagify__dropdown[position=text] .tagify__dropdown__wrapper {
  border-width: 1px;
}
.tagify__dropdown__wrapper {
  max-height: 300px;
  overflow: auto;
  overflow-x: hidden;
  background: var(--tagify-dd-bg-color);
  border: 1px solid;
  border-color: var(--tagify-dd-color-primary);
  border-bottom-width: 1.5px;
  border-top-width: 0;
  box-shadow: 0 2px 4px -2px rgba(0, 0, 0, 0.2);
  transition: 0.25s cubic-bezier(0, 1, 0.5, 1);
}
.tagify__dropdown__header:empty {
  display: none;
}
.tagify__dropdown__footer {
  display: inline-block;
  margin-top: 0.5em;
  padding: var(--tagify-dd-item-pad);
  font-size: 0.7em;
  font-style: italic;
  opacity: 0.5;
}
.tagify__dropdown__footer:empty {
  display: none;
}
.tagify__dropdown--initial .tagify__dropdown__wrapper {
  max-height: 20px;
  transform: translateY(-1em);
}
.tagify__dropdown--initial[placement=top] .tagify__dropdown__wrapper {
  transform: translateY(2em);
}
.tagify__dropdown__item {
  box-sizing: border-box;
  padding: var(--tagify-dd-item-pad);
  margin: 1px;
  cursor: pointer;
  border-radius: 2px;
  position: relative;
  outline: none;
  max-height: 60px;
  max-width: 100%;
  /* custom hidden transition effect is needed for horizontal-layout suggestions */
}
.tagify__dropdown__item--active {
  background: var(--tagify-dd-color-primary);
  color: white;
}
.tagify__dropdown__item:active {
  filter: brightness(105%);
}
.tagify__dropdown__item--hidden {
  padding-top: 0;
  padding-bottom: 0;
  margin: 0 1px;
  pointer-events: none;
  overflow: hidden;
  max-height: 0;
  transition: var(--tagify-dd-item--hidden-duration, 0.3s) !important;
}
.tagify__dropdown__item--hidden > * {
  transform: translateY(-100%);
  opacity: 0;
  transition: inherit;
}

.tagify.form-control {
  padding: 0 0.375rem 0.375rem 0.375rem;
}
.tagify__tag, .tagify__input {
  margin: 0.375rem 0.375rem 0 0 !important;
  line-height: 1;
}
.tagify__input {
  line-height: 1.5rem;
}
.tagify__input:empty::before {
  top: 4px;
}
.tagify__tag > div {
  line-height: 1.5rem;
  padding: 0 0 0 0.375rem;
}
.tagify__tag > div .tagify__tag-text {
  font-size: 0.8125rem;
}
.tagify__tag__removeBtn {
  margin-right: 0.375rem;
  margin-left: 0.1875rem;
  color: #697a8d;
}
.tagify__tag:hover:not([readonly]) div::before, .tagify__tag:focus div::before {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}
.tagify[readonly]:not(.tagify--mix) .tagify__tag > div {
  padding: 0 0.375rem 0 0.375rem !important;
}
.tagify__input {
  padding: 0;
}

[dir=rtl] .tagify__tag, [dir=rtl] .tagify__input {
  margin: 0.375rem 0 0 0.375rem;
}
[dir=rtl] .tagify__tag > div {
  padding: 0 0.375rem 0 0;
}
[dir=rtl] .tagify__tag__removeBtn {
  margin-left: 0.375rem;
  margin-right: 0.1875rem;
}

.light-style .tagify__tag > div::before {
  box-shadow: 0 0 0 1.1em #f0f2f4 inset;
}
.light-style .tagify__tag .tagify__tag-text {
  color: #697a8d;
}
.light-style .tagify__tag:hover:not([readonly]) div::before, .light-style .tagify__tag:focus div::before {
  box-shadow: 0 0 0 1.1em #e1e4e8 inset;
}
.light-style .tagify:hover:not([readonly]) {
  border-color: #d9dee3;
}
.light-style .tagify__input::before {
  color: #b4bdc6 !important;
}
.light-style .tagify__dropdown {
  box-shadow: 0 0.25rem 1rem rgba(161, 172, 184, 0.45);
}
.light-style .tagify__dropdown__wrapper {
  background: #fff;
  border: none;
}
.light-style .tagify--focus {
  border-color: #d9dee3 !important;
}
.light-style .tagify__dropdown__item--active {
  background: rgba(67, 89, 113, 0.04) !important;
  color: #697a8d;
}

.dark-style .tagify__tag > div::before {
  box-shadow: 0 0 0 1.1em rgba(124, 125, 182, 0.08) inset;
}
.dark-style .tagify__tag > div .tagify__tag-text {
  color: #a3a4cc;
}
.dark-style .tagify__tag:hover:not([readonly]) div::before, .dark-style .tagify__tag:focus div::before {
  box-shadow: 0 0 0 1.1em rgba(124, 125, 182, 0.16) inset;
}
.dark-style .tagify__tag__removeBtn {
  color: #a3a4cc;
}
.dark-style .tagify:hover:not([readonly]) {
  border-color: #444564;
}
.dark-style .tagify__input::before {
  color: #7c7db6 !important;
}
.dark-style .tagify[readonly]:not(.tagify--mix) .tagify__tag > div::before {
  background: linear-gradient(45deg, #444564 25%, transparent 25%, transparent 50%, #444564 50%, #444564 75%, transparent 75%, transparent) 0/5px 5px;
  box-shadow: 0 0 0 1.1em rgba(124, 125, 182, 0.16) inset;
}
.dark-style .tagify__dropdown {
  box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.2);
}
.dark-style .tagify__dropdown__wrapper {
  background: #323249;
  border: none;
}
.dark-style .tagify--focus {
  border-color: #444564 !important;
}
.dark-style .tagify__dropdown__item--active {
  background: rgba(124, 125, 182, 0.1) !important;
  color: #a3a4cc;
}

.tagify-email-list {
  display: inline-block;
  min-width: 0;
  border: none;
  /* Do not show the "remove tag" (x) button when only a single tag remains */
}
.tagify-email-list .tagify__tag {
  margin: 0;
  margin: 0 0 0.375rem 0.375rem;
}
.tagify-email-list .tagify__tag > div {
  padding: 0.1875rem 0.75rem;
}
.tagify-email-list .tagify__tag:only-of-type .tagify__tag__removeBtn {
  display: none;
}
.tagify-email-list .tagify__tag__removeBtn {
  opacity: 0;
  transform: translateX(-6px) scale(0.5);
  margin-left: -3ch;
  transition: 0.12s;
}
.tagify-email-list .tagify__tag:hover .tagify__tag__removeBtn {
  transform: none;
  opacity: 1;
  margin-left: -1ch;
}
.tagify-email-list .tagify__input {
  display: none;
}

.tagify__tag > div {
  border-radius: 0.1875rem;
}

[dir=rtl] .tagify-email-list .tagify__tag {
  margin: 0 0.375rem 0.375rem 0;
}
[dir=rtl] .tagify-email-list .tagify__tag:hover .tagify__tag__removeBtn {
  margin-left: auto;
  margin-right: -1ch;
}
[dir=rtl] .tagify-email-list .tagify__tag__removeBtn {
  transform: translateX(6px) scale(0.5);
  margin-left: auto;
  margin-right: -3ch;
}

.light-style .tagify-email-list .tagify__tag--editable:not(.tagify--invalid) > div::before {
  box-shadow: 0 0 0 2px #d9dee3 inset !important;
}

.dark-style .tagify-email-list .tagify__tag--editable:not(.tagify--invalid) > div::before {
  box-shadow: 0 0 0 2px #444564 inset !important;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9saWJzL3RhZ2lmeS9fdGFnaWZ5LXVzZXJzLWxpc3Quc2NzcyIsInZlbmRvci9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvX3ZhcmlhYmxlcy5zY3NzIiwidmVuZG9yL3Njc3MvX2Jvb3RzdHJhcC1leHRlbmRlZC9fdmFyaWFibGVzLWRhcmsuc2NzcyIsInZlbmRvci9saWJzL3RhZ2lmeS9fdGFnaWZ5LWlubGluZS1zdWdnZXN0aW9uLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvQHlhaXJlby90YWdpZnkvc3JjL3RhZ2lmeS5zY3NzIiwidmVuZG9yL2xpYnMvdGFnaWZ5L3RhZ2lmeS5zY3NzIiwidmVuZG9yL2xpYnMvdGFnaWZ5L190YWdpZnktZW1haWwtbGlzdC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFPQTtBQUNBO0VBQ0U7O0FBRUE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBLHFCQUNFOztBQUdGO0VBQ0U7RUFDQSxPQWxCUTtFQW1CUixRQW5CUTtFQW9CUjtFQUNBO0VBRUE7O0FBSUo7RUFDRTtFQUNBOztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7RUFDQTs7O0FBSUo7QUFDQTtFQUNFOztBQUVBO0VBQ0UsT0FuRGM7RUFvRGQsUUFwRGM7RUFxRGQ7RUFFQTtFQUNBO0VBQ0E7RUFDQTs7QUFHRjtFQUNFO0VBQ0E7OztBQU9BO0VBQ0U7RUFDQTs7O0FBVUU7RUFDRSxZQ2lDQTs7QUQ1QkY7RUFDRSxZQzJCQTs7QUR2QkY7RUFDRTs7O0FBWUY7RUFDRSxZRTdCQTs7QUZrQ0Y7RUFDRSxZRW5DQTs7QUZ1Q0Y7RUFDRTs7O0FHbkhSO0VBQ0U7O0FBRUY7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQU9BO0VBQ0U7OztBQVNBO0VBQ0U7RUFDQSxPRnNGSzs7O0FFNUVQO0VBQ0U7RUFDQSxPRHFDSzs7O0FFbEZiO0VBQ0k7RUFDQTtFQUNBOzs7QUFHSjtFQTZCSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQWdFQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQWxCQTtFQUNJO0lBQU07OztBQUdWO0VBQ0k7SUFBSTs7O0FBZVI7RUFDSTs7QUFHSjtFQUNJO0VBQ0E7RUFDQTtFQUNBOztBQUtBO0VBQ0k7O0FBR0o7RUFDSTs7QUFDQTtFQUNJO0VBQ0E7RUFDQTs7QUFHSjtFQUNJOztBQUNBO0VBaEVSOztBQUVBO0VBQ0k7SUFDSTtJQU9BO0lBQ0E7OztBQTBEUjtFQUE0Qjs7QUFNeEI7RUFBaUI7O0FBQ2pCO0VBQVc7O0FBQ1g7RUE3Rko7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBb0ZRO0VBQ0E7O0FBR0E7RUFDSTs7QUFRaEI7QUFBQTtFQUVJO0VBQ0E7RUFDQTs7QUFHSjtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUFFQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBRUE7RUFDQTs7QUFFQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FBR0E7RUFDSTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0VBQ0E7O0FBSVI7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FBT0E7RUFDSTtFQUNBOztBQUtaO0VBQ0k7O0FBRUE7RUFDSTs7QUFHSjtFQUNJO0VBL0xSO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQXNMUTs7QUFLSjtFQUFhOztBQUdqQjtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUFFQTtFQUNJOztBQU1GO0VBQ0U7O0FBTUk7RUFBUTs7QUFDUjtFQUNJO0VBQ0E7O0FBT1o7RUFBNEI7O0FBRXhCO0VBL05SOztBQUVBO0VBQ0k7SUFDSTtJQU9BO0lBQ0E7OztBQTBOSjtFQUNJOztBQUVBO0VBQ0k7O0FBSVI7RUFDSTs7QUFFQTtFQUNJO0VBQ0E7O0FBTUE7RUFDSTs7QUFNaEI7RUFHSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFFQSxPQVpPO0VBYVAsUUFiTztFQWNQO0VBQ0E7RUFFQTtFQUNBOztBQUVBO0VBQ0k7RUFDQTs7QUFHSjtFQUNJO0VBQ0E7O0FBR0k7RUFBUTs7QUFDUjtFQUNJO0VBQ0E7O0FBV1o7RUFBSzs7QUFDTDtFQUFJO0VBQWdCOztBQU01QjtFQUVJO0VBQ0E7RUFDQSxXQUhxQjtFQUlyQixRQS9ZdUI7RUFnWnZCO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQThEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQWhhSTtBQTJXQTtFQUNJOztBQUlSO0VBQ0k7O0FBRUE7RUE1V0o7RUFPSTtFQUNBO0FBdVdJO0FBQ0E7O0FBQ0E7RUFMSjtJQU1ROzs7QUFLSjtFQXZYUjtFQUdJO0VBQ0E7RUE2WFEsT0ExYVc7RUEyYVg7O0FBellSO0VBQ0k7SUE2WVE7OztBQU1oQjtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQVdKO0VBQ0k7RUFDQTtFQUNBO0VBRUE7RUFDQTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQVFKO0VBQ0k7O0FBSVI7RUFDSTs7QUFFQTtFQUNJLFNBM2ZtQjtFQTRmbkI7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUFFQTtFQUNJO0VBQ0E7RUFDQTs7QUFJSjtFQUFVOztBQUtkO0VBR0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQUlBO0VBQ0k7O0FBSVI7RUFDSTtFQUNBO0VBQ0E7RUFDQTs7QUFFQTtFQUNJOztBQUlSO0VBQ0k7O0FBTUE7RUE3Zko7RUFHSTtFQUNBO0VBMmZJO0VBQ0E7O0FBRUE7RUFDSTs7QUFNaEI7RUFDSTtFQUNBOztBQUdKO0VBQ0k7O0FBS0o7RUFJSTtFQUNBO0VBQ0E7RUFDQTs7QUFFQTtFQUNJO0VBQ0E7O0FBRUE7RUFDSTtFQUNBOztBQUtSO0VBQ0k7RUFDQTs7QUFFQTtFQUNJOztBQUlSO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBRUEsWUF0Q0k7O0FBMENKO0VBQVM7O0FBR2I7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FBRUE7RUFBUzs7QUFLVDtFQUNJO0VBQ0E7O0FBSUE7RUFDSTs7QUFLWjtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQVdBOztBQVRBO0VBQ0k7RUFDQTs7QUFHSjtFQUNJOztBQUlKO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FBRUE7RUFDSTtFQUNBO0VBQ0E7OztBQ2pyQmxCO0VBQ0U7O0FBRUY7RUFFRTtFQUNBOztBQUVGO0VBQ0UsYUYxQmM7O0FFMkJkO0VBQ0U7O0FBSUY7RUFDRSxhRmpDWTtFRWtDWjs7QUFDQTtFQUNFOztBQUdKO0VBQ0UsY0Z2Q087RUV3Q1A7RUFDQSxPSjRFTzs7QUl4RVA7RUFDRTtFQUNBO0VBQ0E7RUFDQTs7QUFJTjtFQUNFOztBQUVGO0VBQ0U7OztBQU9BO0VBRUU7O0FBSUE7RUFDRTs7QUFFRjtFQUNFLGFGMUVLO0VFMkVMOzs7QUFXQTtFQUNFOztBQUVGO0VBQ0UsT0oyQkc7O0FJdkJIO0VBQ0U7O0FBSU47RUFDRSxjSmdVYTs7QUk5VGY7RUFDRTs7QUFFRjtFQUNFLFlKK0RLOztBSTlETDtFQUNFLFlKbEdGO0VJbUdFOztBQUtOO0VBQ0U7O0FBRUY7RUFDRTtFQUNBLE9KRk87OztBSWFIO0VBQ0U7O0FBRUY7RUFDRSxPSHREQzs7QUcyREg7RUFDRTs7QUFHSjtFQUNFLE9IaEVHOztBR21FUDtFQUNFLGNIcERPOztBR3NEVDtFQUNFOztBQUVGO0VBQ0U7RUFZQTs7QUFFRjtFQUNFLFlIbEZLOztBR21GTDtFQUNFLFlIMkRJO0VHMURKOztBQUtOO0VBQ0U7O0FBRUY7RUFDRTtFQUNBLE9IdEdPOzs7QUk5RWI7RUFDRTtFQUNBO0VBQ0E7QUFVQTs7QUFSQTtFQUNFO0VBQ0E7O0FBQ0E7RUFDRTs7QUFLSjtFQUNFOztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7O0FBR0Y7RUFDRTs7O0FBSUo7RUFDRTs7O0FBTUU7RUFDRTs7QUFDQTtFQUNFO0VBQ0E7O0FBR0o7RUFDRTtFQUNBO0VBQ0E7OztBQVVFO0VBQ0U7OztBQVlGO0VBQ0UiLCJmaWxlIjoidmVuZG9yL2xpYnMvdGFnaWZ5L3RhZ2lmeS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAdXNlICcuLi8uLi9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvaW5jbHVkZScgYXMgbGlnaHQ7XHJcbkB1c2UgJy4uLy4uL3Njc3MvX2Jvb3RzdHJhcC1leHRlbmRlZC9pbmNsdWRlLWRhcmsnIGFzIGRhcms7XHJcbkBpbXBvcnQgJy4uLy4uL3Njc3MvX2N1c3RvbS12YXJpYWJsZXMvbGlicyc7XHJcblxyXG4kYXZhdGFyLXNpemU6IDM2cHggIWRlZmF1bHQ7XHJcbiRhdmF0YXItdGFnLXNpemU6IDIycHggIWRlZmF1bHQ7XHJcblxyXG4vKiBTdWdnZXN0aW9ucyBpdGVtcyAqL1xyXG4udGFnaWZ5X19kcm9wZG93bi51c2Vycy1saXN0IHtcclxuICBmb250LXNpemU6IDFyZW07XHJcblxyXG4gIC50YWdpZnlfX2Ryb3Bkb3duX19pdGVtIHtcclxuICAgIHBhZGRpbmc6IDAuNWVtIDAuN2VtO1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byAxZnI7XHJcbiAgICBnYXA6IDAgMWVtO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcclxuICAgICAgJ2F2YXRhciBuYW1lJ1xyXG4gICAgICAnYXZhdGFyIGVtYWlsJztcclxuXHJcbiAgICAmX19hdmF0YXItd3JhcCB7XHJcbiAgICAgIGdyaWQtYXJlYTogYXZhdGFyO1xyXG4gICAgICB3aWR0aDogJGF2YXRhci1zaXplO1xyXG4gICAgICBoZWlnaHQ6ICRhdmF0YXItc2l6ZTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgICAgdHJhbnNpdGlvbjogMC4xcyBlYXNlLW91dDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGltZyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgfVxyXG5cclxuICBzdHJvbmcge1xyXG4gICAgZ3JpZC1hcmVhOiBuYW1lO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gIH1cclxuXHJcbiAgc3BhbiB7XHJcbiAgICBncmlkLWFyZWE6IGVtYWlsO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LXNpemU6IDAuOWVtO1xyXG4gICAgb3BhY2l0eTogMC42O1xyXG4gIH1cclxufVxyXG5cclxuLyogVGFncyBpdGVtcyAqL1xyXG4udGFnaWZ5X190YWcge1xyXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcblxyXG4gIC50YWdpZnlfX3RhZ19fYXZhdGFyLXdyYXAge1xyXG4gICAgd2lkdGg6ICRhdmF0YXItdGFnLXNpemU7XHJcbiAgICBoZWlnaHQ6ICRhdmF0YXItdGFnLXNpemU7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG5cclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gICAgdHJhbnNpdGlvbjogMC4xMnMgZWFzZS1vdXQ7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIH1cclxuXHJcbiAgaW1nIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICB9XHJcbn1cclxuXHJcbi8vUlRMXHJcbkBpbmNsdWRlIGFwcC1ydGwoZmFsc2UpIHtcclxuICAudGFnaWZ5X190YWcge1xyXG4gICAgLnRhZ2lmeV9fdGFnX19hdmF0YXItd3JhcCB7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIExpZ2h0IHN0eWxlc1xyXG5AaWYgJGVuYWJsZS1saWdodC1zdHlsZSB7XHJcbiAgLmxpZ2h0LXN0eWxlIHtcclxuICAgIC50YWdpZnkge1xyXG4gICAgICAmX19kcm9wZG93bi51c2Vycy1saXN0IHtcclxuICAgICAgICAudGFnaWZ5X19kcm9wZG93bl9faXRlbV9fYXZhdGFyLXdyYXAge1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogbGlnaHQuJGJvZHktYmc7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmX190YWcge1xyXG4gICAgICAgIC50YWdpZnlfX3RhZ19fYXZhdGFyLXdyYXAge1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogbGlnaHQuJGJvZHktYmc7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICZfX2Ryb3Bkb3duLnVzZXJzLWxpc3Qge1xyXG4gICAgICAgIC5hZGRBbGwge1xyXG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGxpZ2h0LiRib3JkZXItY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBEYXJrIHN0eWxlc1xyXG5AaWYgJGVuYWJsZS1kYXJrLXN0eWxlIHtcclxuICAuZGFyay1zdHlsZSB7XHJcbiAgICAudGFnaWZ5IHtcclxuICAgICAgJl9fZHJvcGRvd24udXNlcnMtbGlzdCB7XHJcbiAgICAgICAgLnRhZ2lmeV9fZHJvcGRvd25fX2l0ZW1fX2F2YXRhci13cmFwIHtcclxuICAgICAgICAgIGJhY2tncm91bmQ6IGRhcmsuJGJvZHktYmc7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmX190YWcge1xyXG4gICAgICAgIC50YWdpZnlfX3RhZ19fYXZhdGFyLXdyYXAge1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogZGFyay4kYm9keS1iZztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJl9fZHJvcGRvd24udXNlcnMtbGlzdCB7XHJcbiAgICAgICAgLmFkZEFsbCB7XHJcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgZGFyay4kYm9yZGVyLWNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIvLyBWYXJpYWJsZXNcclxuLy9cclxuLy8gVmFyaWFibGVzIHNob3VsZCBmb2xsb3cgdGhlIGAkY29tcG9uZW50LXN0YXRlLXByb3BlcnR5LXNpemVgIGZvcm11bGEgZm9yXHJcbi8vIGNvbnNpc3RlbnQgbmFtaW5nLiBFeDogJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yIGFuZCAkbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzLlxyXG4vL1xyXG4vLyA/IFRvIGNoYW5nZSB0aGUgbGF5b3V0IGNvbG9ycyB5b3UganVzdCBuZWVkIHRvIGNoYW5nZSB0aGUgJGJsYWNrIGFuZCAkYm9keS1iZyBjb2xvcnMgYW5kIHJlc3QgKGJvcmRlciwgY2FyZCwgZm9udCBjb2xvcnMgYW5kIGV0Yy4uLikgd2lsbCBiZSBhZGp1c3QgYXV0b21hdGljYWxseS5cclxuLy8gPyBVc2UgaHR0cHM6Ly9ub2VsZGVsZ2Fkby5naXRodWIuaW8vc2hhZG93bG9yZC8gdG8gc2VsZWN0IHByb3BlciDwn5KEIENvbG9yIHRpbnRzIGFuZCBzaGFkZSBmb3IgJGJsYWNrIGFuZCAkYm9keS1iZyBjb2xvci5cclxuLy8gPyBjb2xvci12YXJpYWJsZXMgYW5kIHRoZW1lLWNvbG9yLXZhcmlhYmxlcyAoYnJhbmRpbmcgY29sb3JzKSBjYW4gYmUgY2hvb3NlIGFzIHBlciB5b3VyIHByZWZlcmVuY2VzLiBXZSBzdWdnZXN0IHlvdSB0byB1c2UgaHR0cHM6Ly9jb2xvcnMuZXZhLmRlc2lnbi9cclxuLy8gISBMaWdodCBzdHlsZSB1c2UgJGJsYWNrIHRvIGdlbmVyYXRlIHRoZSAkZ3JheSBzaGFkZXMuXHJcbi8vIChDKSBDdXN0b20gdmFyaWFibGVzIGZvciBleHRlbmRlZCBjb21wb25lbnRzIG9mIGJvb3RzdHJhcCBvbmx5XHJcblxyXG4vLyAqIENvbG9yIHN5c3RlbVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZ3JheS1jb2xvci12YXJpYWJsZXNcclxuJHdoaXRlOiAjZmZmICFkZWZhdWx0O1xyXG4kYmxhY2s6ICM0MzU5NzEgIWRlZmF1bHQ7XHJcbiRncmF5LTI1OiByZ2JhKCRibGFjaywgMC4wMjUpICFkZWZhdWx0OyAvLyAoQylcclxuJGdyYXktNTA6IHJnYmEoJGJsYWNrLCAwLjA1KSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRncmF5LTEwMDogcmdiYSgkYmxhY2ssIDAuMSkgIWRlZmF1bHQ7XHJcbiRncmF5LTIwMDogcmdiYSgkYmxhY2ssIDAuMikgIWRlZmF1bHQ7XHJcbiRncmF5LTMwMDogcmdiYSgkYmxhY2ssIDAuMykgIWRlZmF1bHQ7XHJcbiRncmF5LTQwMDogcmdiYSgkYmxhY2ssIDAuNCkgIWRlZmF1bHQ7XHJcbiRncmF5LTUwMDogcmdiYSgkYmxhY2ssIDAuNSkgIWRlZmF1bHQ7XHJcbiRncmF5LTYwMDogcmdiYSgkYmxhY2ssIDAuNikgIWRlZmF1bHQ7XHJcbiRncmF5LTcwMDogcmdiYSgkYmxhY2ssIDAuNykgIWRlZmF1bHQ7XHJcbiRncmF5LTgwMDogcmdiYSgkYmxhY2ssIDAuOCkgIWRlZmF1bHQ7XHJcbiRncmF5LTkwMDogcmdiYSgkYmxhY2ssIDAuOSkgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZ3JheS1jb2xvci12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9ycy1tYXBcclxuJGdyYXlzOiAoXHJcbiAgJzI1JzogJGdyYXktMjUsXHJcbiAgJzUwJzogJGdyYXktNTBcclxuKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBncmF5LWNvbG9ycy1tYXBcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBjb2xvci12YXJpYWJsZXNcclxuJGJsdWU6ICMwMDdiZmYgIWRlZmF1bHQ7XHJcbiRpbmRpZ286ICM2NjEwZjIgIWRlZmF1bHQ7XHJcbiRwdXJwbGU6ICM2OTZjZmYgIWRlZmF1bHQ7XHJcbiRwaW5rOiAjZTgzZThjICFkZWZhdWx0O1xyXG4kcmVkOiAjZmYzZTFkICFkZWZhdWx0O1xyXG4kb3JhbmdlOiAjZmQ3ZTE0ICFkZWZhdWx0O1xyXG4keWVsbG93OiAjZmZhYjAwICFkZWZhdWx0O1xyXG4kZ3JlZW46ICM3MWRkMzcgIWRlZmF1bHQ7XHJcbiR0ZWFsOiAjMjBjOTk3ICFkZWZhdWx0O1xyXG4kY3lhbjogIzAzYzNlYyAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBjb2xvci12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCB0aGVtZS1jb2xvci12YXJpYWJsZXNcclxuJHByaW1hcnk6ICRwdXJwbGUgIWRlZmF1bHQ7XHJcbiRzZWNvbmRhcnk6ICM4NTkyYTMgIWRlZmF1bHQ7XHJcbiRzdWNjZXNzOiAkZ3JlZW4gIWRlZmF1bHQ7XHJcbiRpbmZvOiAkY3lhbiAhZGVmYXVsdDtcclxuJHdhcm5pbmc6ICR5ZWxsb3cgIWRlZmF1bHQ7XHJcbiRkYW5nZXI6ICRyZWQgIWRlZmF1bHQ7XHJcbiRsaWdodDogI2ZjZmRmZCAhZGVmYXVsdDtcclxuJGRhcms6ICMyMzM0NDYgIWRlZmF1bHQ7XHJcbiRncmF5OiAkZ3JheS0xMDAgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9yLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHRoZW1lLWNvbG9ycy1tYXBcclxuJHRoZW1lLWNvbG9yczogKFxyXG4gICdwcmltYXJ5JzogJHByaW1hcnksXHJcbiAgJ3NlY29uZGFyeSc6ICRzZWNvbmRhcnksXHJcbiAgJ3N1Y2Nlc3MnOiAkc3VjY2VzcyxcclxuICAnaW5mbyc6ICRpbmZvLFxyXG4gICd3YXJuaW5nJzogJHdhcm5pbmcsXHJcbiAgJ2Rhbmdlcic6ICRkYW5nZXIsXHJcbiAgJ2xpZ2h0JzogJGxpZ2h0LFxyXG4gICdkYXJrJzogJGRhcmssXHJcbiAgJ2dyYXknOiAkZ3JheVxyXG4pICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9ycy1tYXBcclxuXHJcbiRjb2xvci1zY2hlbWU6ICdsaWdodCcgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBUaGUgY29udHJhc3QgcmF0aW8gdG8gcmVhY2ggYWdhaW5zdCB3aGl0ZSwgdG8gZGV0ZXJtaW5lIGlmIGNvbG9yIGNoYW5nZXMgZnJvbSBcImxpZ2h0XCIgdG8gXCJkYXJrXCIuIEFjY2VwdGFibGUgdmFsdWVzIGZvciBXQ0FHIDIuMCBhcmUgMywgNC41IGFuZCA3LlxyXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL1dDQUcyMC8jdmlzdWFsLWF1ZGlvLWNvbnRyYXN0LWNvbnRyYXN0XHJcbiRtaW4tY29udHJhc3QtcmF0aW86IDEuNyAhZGVmYXVsdDtcclxuXHJcbi8vICogT3B0aW9uc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kZW5hYmxlLW5lZ2F0aXZlLW1hcmdpbnM6IHRydWUgIWRlZmF1bHQ7XHJcbiRlbmFibGUtdmFsaWRhdGlvbi1pY29uczogZmFsc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyBQcmVmaXggZm9yIDpyb290IENTUyB2YXJpYWJsZXNcclxuJHZhcmlhYmxlLXByZWZpeDogYnMtICFkZWZhdWx0O1xyXG5cclxuLy8gKiBTcGFjaW5nXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRzcGFjZXI6IDFyZW0gIWRlZmF1bHQ7XHJcblxyXG4kc2l6ZXMtcHg6IChcclxuICBweC0yMDogMjBweCxcclxuICBweC0zMDogMzBweCxcclxuICBweC00MDogNDBweCxcclxuICBweC01MDogNTBweCxcclxuICBweC03NTogNzVweCxcclxuICBweC0xMDA6IDEwMHB4LFxyXG4gIHB4LTE1MDogMTUwcHgsXHJcbiAgcHgtMjAwOiAyMDBweCxcclxuICBweC0yNTA6IDI1MHB4LFxyXG4gIHB4LTMwMDogMzAwcHgsXHJcbiAgcHgtMzUwOiAzNTBweCxcclxuICBweC00MDA6IDQwMHB4LFxyXG4gIHB4LTUwMDogNTAwcHgsXHJcbiAgcHgtNjAwOiA2MDBweCxcclxuICBweC03MDA6IDcwMHB4LFxyXG4gIHB4LTgwMDogODAwcHgsXHJcbiAgYXV0bzogYXV0b1xyXG4pICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRyZ2JhLXRvLWhleC1iZzogI2ZmZiAhZGVmYXVsdDsgLy8gKEMpXHJcbiRyZ2JhLXRvLWhleC1iZy1pbnZlcnRlZDogIzAwMCAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIEJvZHlcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGJvZHktYmc6ICNmNWY1ZjkgIWRlZmF1bHQ7XHJcbiRib2R5LWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS04MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIExpbmtzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRsaW5rLWNvbG9yOiAkcHJpbWFyeSAhZGVmYXVsdDtcclxuJGxpbmstZGVjb3JhdGlvbjogbm9uZSAhZGVmYXVsdDtcclxuJGxpbmstc2hhZGUtcGVyY2VudGFnZTogMTAlICFkZWZhdWx0O1xyXG4kbGluay1ob3Zlci1jb2xvcjogc2hpZnQtY29sb3IoJGxpbmstY29sb3IsICRsaW5rLXNoYWRlLXBlcmNlbnRhZ2UpICFkZWZhdWx0O1xyXG4kbGluay1ob3Zlci1kZWNvcmF0aW9uOiBudWxsICFkZWZhdWx0O1xyXG5cclxuLy8gKiBHcmlkXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIEdyaWQgY29udGFpbmVyc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGNvbnRhaW5lci1tYXgtd2lkdGhzXHJcbiRjb250YWluZXItbWF4LXdpZHRoczogKFxyXG4gIHNtOiA1NDBweCxcclxuICBtZDogNzIwcHgsXHJcbiAgbGc6IDk2MHB4LFxyXG4gIHhsOiAxMTQwcHgsXHJcbiAgeHhsOiAxNDQwcHggLy8gQ3VzdG9tIHh4bCBzaXplXHJcbikgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgY29udGFpbmVyLW1heC13aWR0aHNcclxuXHJcbiRncmlkLWd1dHRlci13aWR0aDogMS42MjVyZW0gIWRlZmF1bHQ7XHJcbiRjb250YWluZXItcGFkZGluZy14OiAxLjYyNXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjb250YWluZXItcGFkZGluZy14LXNtOiAxcmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGNvbnRhaW5lci1wYWRkaW5nLXk6IDEuNjI1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQ29tcG9uZW50c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm9yZGVyLXZhcmlhYmxlc1xyXG4kYm9yZGVyLXdpZHRoOiAxcHggIWRlZmF1bHQ7XHJcbiRib3JkZXItY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTIwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJGJvcmRlci1pbm5lci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3JkZXItdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm9yZGVyLXJhZGl1cy12YXJpYWJsZXNcclxuJGJvcmRlci1yYWRpdXM6IDAuMzc1cmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy14bDogMC42MjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kYm9yZGVyLXJhZGl1cy1sZzogMC41cmVtICFkZWZhdWx0O1xyXG4kYm9yZGVyLXJhZGl1cy1zbTogMC4yNXJlbSAhZGVmYXVsdDtcclxuJGJvcmRlci1yYWRpdXMteHM6IDAuMTI1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRib3JkZXItc2hhZGUtYW1vdW50OiAyNSUgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYm9yZGVyLXRpbnQtYW1vdW50OiA2MCUgIWRlZmF1bHQ7IC8vIChDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIGJvcmRlci1yYWRpdXMtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm94LXNoYWRvdy12YXJpYWJsZXNcclxuJGJveC1zaGFkb3c6IDAgMC4yNXJlbSAxcmVtIHJnYmEocmdiYS10by1oZXgoJGdyYXktNTAwLCAkcmdiYS10by1oZXgtYmcpLCAwLjQ1KSAhZGVmYXVsdDtcclxuJGJveC1zaGFkb3ctc206IDAgMC4xMjVyZW0gMC4yNXJlbSByZ2JhKHJnYmEtdG8taGV4KCRncmF5LTUwMCwgJHJnYmEtdG8taGV4LWJnKSwgMC40KSAhZGVmYXVsdDtcclxuJGJveC1zaGFkb3ctbGc6IDAgMC42MjVyZW0gMS4yNXJlbSByZ2JhKHJnYmEtdG8taGV4KCRncmF5LTUwMCwgJHJnYmEtdG8taGV4LWJnKSwgMC41KSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3gtc2hhZG93LXZhcmlhYmxlc1xyXG5cclxuJGNvbXBvbmVudC1hY3RpdmUtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJGNvbXBvbmVudC1hY3RpdmUtYmc6IHJnYmEoJHByaW1hcnksIDAuMDgpICFkZWZhdWx0O1xyXG5cclxuJGNvbXBvbmVudC1saW5lLWhlaWdodDogMS41NCAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjb21wb25lbnQtZm9jdXMtc2hhZG93LXdpZHRoOiAycHggIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGZsb2F0aW5nLWNvbXBvbmVudC1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFkZWZhdWx0OyAvLyAoQylcclxuJGZsb2F0aW5nLWNvbXBvbmVudC1zaGFkb3c6ICRib3gtc2hhZG93ICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRoci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuJGhyLW9wYWNpdHk6IDEgIWRlZmF1bHQ7XHJcbiRib3JkZXJlZC1yb3ctYm9yZGVyLWNvbG9yOiAkaHItY29sb3IgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGNhcmV0LXZhcmlhYmxlc1xyXG4kY2FyZXQtd2lkdGg6IDAuNDJlbSAhZGVmYXVsdDtcclxuJGNhcmV0LXZlcnRpY2FsLWFsaWduOiBtaWRkbGUgIWRlZmF1bHQ7XHJcbiRjYXJldC1zcGFjaW5nOiAwLjVlbSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBjYXJldC12YXJpYWJsZXNcclxuXHJcbi8vICogVHlwb2dyYXBoeVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9udC12YXJpYWJsZXNcclxuJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6ICdQdWJsaWMgU2FucycsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgJ094eWdlbicsICdVYnVudHUnLCAnQ2FudGFyZWxsJyxcclxuICAnRmlyYSBTYW5zJywgJ0Ryb2lkIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmICFkZWZhdWx0O1xyXG4kZm9udC1mYW1pbHktc2VyaWY6IEdlb3JnaWEsICdUaW1lcyBOZXcgUm9tYW4nLCBzZXJpZiAhZGVmYXVsdDsgLy8gKEMpXHJcbiRmb250LWZhbWlseS1tb25vc3BhY2U6ICdTRk1vbm8tUmVndWxhcicsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCAnTGliZXJhdGlvbiBNb25vJywgJ0NvdXJpZXIgTmV3JywgbW9ub3NwYWNlICFkZWZhdWx0O1xyXG4vLyBzdHlsZWxpbnQtZW5hYmxlIHZhbHVlLWtleXdvcmQtY2FzZVxyXG4kZm9udC1mYW1pbHktYmFzZTogdmFyKC0tI3skdmFyaWFibGUtcHJlZml4fWZvbnQtc2Fucy1zZXJpZikgIWRlZmF1bHQ7XHJcbiRmb250LWZhbWlseS1jb2RlOiB2YXIoLS0jeyR2YXJpYWJsZS1wcmVmaXh9Zm9udC1tb25vc3BhY2UpICFkZWZhdWx0O1xyXG5cclxuLy8gJGZvbnQtc2l6ZS1yb290IGVmZmVjdHMgdGhlIHZhbHVlIG9mIGByZW1gLCB3aGljaCBpcyB1c2VkIGZvciBhcyB3ZWxsIGZvbnQgc2l6ZXMsIHBhZGRpbmdzIGFuZCBtYXJnaW5zXHJcbi8vICRmb250LXNpemUtYmFzZSBlZmZlY3RzIHRoZSBmb250IHNpemUgb2YgdGhlIGJvZHkgdGV4dFxyXG4kZm9udC1zaXplLXJvb3Q6IDE2cHggIWRlZmF1bHQ7XHJcbiRmb250LXNpemUtYmFzZTogMC45Mzc1cmVtICFkZWZhdWx0OyAvLyBBc3N1bWVzIHRoZSBicm93c2VyIGRlZmF1bHQsIHR5cGljYWxseSBgMTVweC8xNnB4YFxyXG4kZm9udC1zaXplLXhsOiAxLjI1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGZvbnQtc2l6ZS1sZzogMXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS1zbTogMC43NXJlbSAhZGVmYXVsdDtcclxuJGZvbnQtc2l6ZS14czogJGZvbnQtc2l6ZS1zbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kZm9udC13ZWlnaHQtc2VtaWJvbGQ6IDYwMCAhZGVmYXVsdDsgLy8gKEMpXHJcbiRmb250LXdlaWdodC1ib2xkZXI6IDkwMCAhZGVmYXVsdDtcclxuJGZvbnQtd2VpZ2h0LWxpZ2h0ZXI6IDEwMCAhZGVmYXVsdDtcclxuXHJcbiRsaW5lLWhlaWdodC1iYXNlOiAxLjUzICFkZWZhdWx0O1xyXG4kbGluZS1oZWlnaHQteGw6IDEuNSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRsaW5lLWhlaWdodC1sZzogMS41ICFkZWZhdWx0O1xyXG4kbGluZS1oZWlnaHQtc206IDEuNSAhZGVmYXVsdDtcclxuJGxpbmUtaGVpZ2h0LXhzOiAxLjUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGgxLWZvbnQtc2l6ZTogMi4zNzVyZW0gIWRlZmF1bHQ7XHJcbiRoMi1mb250LXNpemU6IDJyZW0gIWRlZmF1bHQ7XHJcbiRoMy1mb250LXNpemU6IDEuNjI1cmVtICFkZWZhdWx0O1xyXG4kaDQtZm9udC1zaXplOiAxLjM3NXJlbSAhZGVmYXVsdDtcclxuJGg1LWZvbnQtc2l6ZTogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcbiRoNi1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBmb250LXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGhlYWRpbmdzLXZhcmlhYmxlc1xyXG4kaGVhZGluZ3MtbWFyZ2luLWJvdHRvbTogJHNwYWNlciAhZGVmYXVsdDtcclxuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiA1MDAgIWRlZmF1bHQ7XHJcbiRoZWFkaW5ncy1saW5lLWhlaWdodDogMS4xICFkZWZhdWx0O1xyXG4kaGVhZGluZ3MtY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTkwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBoZWFkaW5ncy12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBkaXNwbGF5LWhlYWRpbmdzXHJcbiRkaXNwbGF5LWZvbnQtc2l6ZXM6IChcclxuICAxOiA0cmVtLFxyXG4gIDI6IDMuNXJlbSxcclxuICAzOiAzcmVtLFxyXG4gIDQ6IDIuNXJlbSxcclxuICA1OiAycmVtLFxyXG4gIDY6IDEuNXJlbVxyXG4pICFkZWZhdWx0O1xyXG5cclxuJGRpc3BsYXktZm9udC13ZWlnaHQ6IDUwMCAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBkaXNwbGF5LWhlYWRpbmdzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdHlwZS12YXJpYWJsZXNcclxuJGxlYWQtZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgKiAxLjEyNSAhZGVmYXVsdDtcclxuJGJsb2NrcXVvdGUtZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgKiAxLjEyNSAhZGVmYXVsdDtcclxuJGxlYWQtZm9udC13ZWlnaHQ6IDQwMCAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCB0eXBlLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHR5cGUtdmFyaWFibGVzXHJcbiR0aW55LWZvbnQtc2l6ZTogNzAlICFkZWZhdWx0OyAvLyAoQylcclxuJHNtYWxsLWZvbnQtc2l6ZTogODUlICFkZWZhdWx0O1xyXG4kYmlnLWZvbnQtc2l6ZTogMTEyJSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRsYXJnZS1mb250LXNpemU6IDE1MCUgIWRlZmF1bHQ7IC8vIChDKVxyXG4keGxhcmdlLWZvbnQtc2l6ZTogMTcwJSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kdGV4dC1tdXRlZDogcmdiYS10by1oZXgoJGdyYXktNTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kdGV4dC1tdXRlZC1ob3ZlcjogcmdiYS10by1oZXgoJGdyYXktNjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiR0ZXh0LWxpZ2h0OiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVyOiByZ2JhLXRvLWhleCgkZ3JheS0zMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVzdDogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCB0eXBlLXZhcmlhYmxlc1xyXG5cclxuLy8gKiBaLWluZGV4IG1hc3RlciBsaXN0XHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiR6aW5kZXgtbWVudS1maXhlZDogMTA4MCAhZGVmYXVsdDtcclxuJHppbmRleC1tb2RhbDogMTA5MCAhZGVmYXVsdDtcclxuJHppbmRleC1tb2RhbC1iYWNrZHJvcDogJHppbmRleC1tb2RhbCAtIDEgIWRlZmF1bHQ7XHJcbi8vICR6aW5kZXgtbW9kYWwtdG9wOiAxMDkwICFkZWZhdWx0OyAvLyAoQylcclxuJHppbmRleC1vZmZjYW52YXM6IDEwOTAgIWRlZmF1bHQ7XHJcbiR6aW5kZXgtb2ZmY2FudmFzLWJhY2tkcm9wOiAkemluZGV4LW9mZmNhbnZhcyAtIDEgIWRlZmF1bHQ7XHJcbiR6aW5kZXgtbGF5b3V0LW1vYmlsZTogMTEwMCAhZGVmYXVsdDsgLy8gKEMpXHJcbiR6aW5kZXgtcG9wb3ZlcjogMTA5MSAhZGVmYXVsdDtcclxuJHppbmRleC10b2FzdDogMTA5NSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR6aW5kZXgtdG9vbHRpcDogMTA5OSAhZGVmYXVsdDtcclxuJHppbmRleC1ub3RpZmljYXRpb246IDk5OTk5OSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIFRhYmxlc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGFibGUtdmFyaWFibGVzXHJcbiR0YWJsZS1jZWxsLXBhZGRpbmcteTogMC42MjVyZW0gIWRlZmF1bHQ7XHJcbiR0YWJsZS1jZWxsLXBhZGRpbmcteDogMS4yNXJlbSAhZGVmYXVsdDtcclxuJHRhYmxlLWNlbGwtcGFkZGluZy15LXNtOiAwLjMxMjVyZW0gIWRlZmF1bHQ7XHJcbiR0YWJsZS1jZWxsLXBhZGRpbmcteC1zbTogMC42MjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtY2VsbC12ZXJ0aWNhbC1hbGlnbjogbWlkZGxlICFkZWZhdWx0O1xyXG5cclxuJHRhYmxlLXRoLWZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtc2VtaWJvbGQgIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtc3RyaXBlZC1iZy1mYWN0b3I6IDAuMDMgIWRlZmF1bHQ7XHJcbiR0YWJsZS1zdHJpcGVkLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRibGFjaywgJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yKSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbiR0YWJsZS1ob3Zlci1iZy1mYWN0b3I6IDAuMDYgIWRlZmF1bHQ7XHJcbiR0YWJsZS1ob3Zlci1iZzogcmdiYSgkYmxhY2ssICR0YWJsZS1ob3Zlci1iZy1mYWN0b3IpICFkZWZhdWx0O1xyXG5cclxuJHRhYmxlLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbiR0YWJsZS1ncm91cC1zZXBhcmF0b3ItY29sb3I6ICR0YWJsZS1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEJ1dHRvbnMgKyBGb3Jtc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteTogMC40Mzc1cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLXBhZGRpbmcteDogMS4yNXJlbSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LWJhc2UgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtYnRuLWZvY3VzLXdpZHRoOiAwLjA1cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWZvY3VzLWNvbG9yLW9wYWNpdHk6IDAuMSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1mb2N1cy1jb2xvcjogcmdiYSgkY29tcG9uZW50LWFjdGl2ZS1iZywgJGlucHV0LWJ0bi1mb2N1cy1jb2xvci1vcGFjaXR5KSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1mb2N1cy1ibHVyOiAwLjI1cmVtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3c6IDAgMCAkaW5wdXQtYnRuLWZvY3VzLWJsdXIgJGlucHV0LWJ0bi1mb2N1cy13aWR0aCAkaW5wdXQtYnRuLWZvY3VzLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWJ0bi1wYWRkaW5nLXkteHM6IDAgIWRlZmF1bHQ7IC8vIChDKVxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteC14czogMC41cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGlucHV0LWJ0bi1mb250LXNpemUteHM6ICRmb250LXNpemUteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXhzOiAkbGluZS1oZWlnaHQteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGlucHV0LWJ0bi1wYWRkaW5nLXktc206IDAuMjVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tcGFkZGluZy14LXNtOiAwLjY4NzVyZW0gIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tZm9udC1zaXplLXNtOiAkZm9udC1zaXplLXNtICFkZWZhdWx0O1xyXG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtOiAkbGluZS1oZWlnaHQtc20gIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtYnRuLXBhZGRpbmcteS1sZzogMC43NXJlbSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1wYWRkaW5nLXgtbGc6IDEuNXJlbSAhZGVmYXVsdDtcclxuJGlucHV0LWJ0bi1mb250LXNpemUtbGc6ICRmb250LXNpemUtbGcgIWRlZmF1bHQ7XHJcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtbGc6ICRsaW5lLWhlaWdodC1sZyAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1idG4tcGFkZGluZy15LXhsOiAwLjg3NXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRpbnB1dC1idG4tcGFkZGluZy14LXhsOiAyLjEyNXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRpbnB1dC1idG4tZm9udC1zaXplLXhsOiAkZm9udC1zaXplLXhsICFkZWZhdWx0OyAvLyAoQylcclxuJGlucHV0LWJ0bi1saW5lLWhlaWdodC14bDogJGxpbmUtaGVpZ2h0LXhsICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQnV0dG9uc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYnRuLXBhZGRpbmcteS14czogJGlucHV0LWJ0bi1wYWRkaW5nLXkteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLXBhZGRpbmcteC14czogJGlucHV0LWJ0bi1wYWRkaW5nLXgteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWZvbnQtc2l6ZS14czogJGlucHV0LWJ0bi1mb250LXNpemUteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1wYWRkaW5nLXkteGw6ICRpbnB1dC1idG4tcGFkZGluZy15LXhsICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1wYWRkaW5nLXgteGw6ICRpbnB1dC1idG4tcGFkZGluZy14LXhsICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1mb250LXNpemUteGw6ICRpbnB1dC1idG4tZm9udC1zaXplLXhsICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRidG4tbGluZS1oZWlnaHQteHM6ICRpbnB1dC1idG4tbGluZS1oZWlnaHQteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWxpbmUtaGVpZ2h0LXNtOiAkbGluZS1oZWlnaHQtc207IC8vKEMpXHJcbiRidG4tbGluZS1oZWlnaHQtbGc6ICRsaW5lLWhlaWdodC1sZzsgLy8oQylcclxuJGJ0bi1saW5lLWhlaWdodC14bDogJGlucHV0LWJ0bi1saW5lLWhlaWdodC14bCAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kYnRuLWJveC1zaGFkb3c6IG5vbmUgIWRlZmF1bHQ7XHJcbiRidG4tZm9jdXMtYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuJGJ0bi1hY3RpdmUtYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuXHJcbiRidG4tYm9yZGVyLXJhZGl1cy14czogJGJvcmRlci1yYWRpdXMteHMgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWJvcmRlci1yYWRpdXMteGw6ICRib3JkZXItcmFkaXVzLXhsICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRidG4tdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQgIWRlZmF1bHQ7XHJcblxyXG4kYnRuLWxhYmVsLWJnLXNoYWRlLWFtb3VudDogODQlICFkZWZhdWx0OyAvLyAoQylcclxuJGJ0bi1sYWJlbC1iZy10aW50LWFtb3VudDogODQlICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRidG4tbGFiZWwtZGlzYWJsZWQtYmctc2hhZGUtYW1vdW50OiA4NCUgIWRlZmF1bHQ7IC8vIChDKVxyXG4kYnRuLWxhYmVsLWRpc2FibGVkLWJnLXRpbnQtYW1vdW50OiA4NCUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1ob3Zlci1iZy1zaGFkZS1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci1iZy10aW50LWFtb3VudDogMTAlICFkZWZhdWx0O1xyXG4kYnRuLWhvdmVyLWJvcmRlci1zaGFkZS1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci1ib3JkZXItdGludC1hbW91bnQ6IDEwJSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1mb2N1cy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGJ0bi1kaXNhYmxlZC1vcGFjaXR5OiAwLjY1ICFkZWZhdWx0O1xyXG5cclxuJGJ0bi1hY3RpdmUtYmctc2hhZGUtYW1vdW50OiAxNSUgIWRlZmF1bHQ7XHJcbiRidG4tYWN0aXZlLWJnLXRpbnQtYW1vdW50OiAxNSUgIWRlZmF1bHQ7XHJcbiRidG4tYWN0aXZlLWJvcmRlci1zaGFkZS1hbW91bnQ6IDE1JSAhZGVmYXVsdDtcclxuJGJ0bi1hY3RpdmUtYm9yZGVyLXRpbnQtYW1vdW50OiAxNSUgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEZvcm1zXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLXRleHQtdmFyaWFibGVzXHJcbiRmb3JtLXRleHQtbWFyZ2luLXRvcDogMC4zcmVtICFkZWZhdWx0O1xyXG4kZm9ybS10ZXh0LWZvbnQtc2l6ZTogJHNtYWxsLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuJGZvcm0tdGV4dC1jb2xvcjogJHRleHQtbGlnaHQgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS10ZXh0LXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tbGFiZWwtdmFyaWFibGVzXHJcbiRmb3JtLWxhYmVsLWZvbnQtc2l6ZTogMC43NXJlbSAhZGVmYXVsdDtcclxuJGZvcm0tbGFiZWwtZm9udC13ZWlnaHQ6IDUwMCAhZGVmYXVsdDtcclxuJGZvcm0tbGFiZWwtY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcclxuJGZvcm0tbGFiZWwtbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQgIWRlZmF1bHQ7IC8vKEMpXHJcbiRmb3JtLWxhYmVsLXRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2UgIWRlZmF1bHQ7IC8vKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1sYWJlbC12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLWlucHV0LXZhcmlhYmxlc1xyXG4kaW5wdXQtcGFkZGluZy14OiAwLjg3NXJlbSAhZGVmYXVsdDtcclxuJGlucHV0LWxpbmUtaGVpZ2h0OiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0ICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LXBhZGRpbmcteC1zbTogMC42MjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtcGFkZGluZy14LWxnOiAxLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWJnOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRpbnB1dC1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktMTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJGlucHV0LWJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWhvdmVyLWJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3Itc2NhbGU6IDUwJSAhZGVmYXVsdDsgLy8oQylcclxuJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvcjogdGludC1jb2xvcigkY29tcG9uZW50LWFjdGl2ZS1iZywgJGlucHV0LWZvY3VzLWJvcmRlci1jb2xvci1zY2FsZSkgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtcGxhY2Vob2xkZXItdHJhbnNpdGlvbjogYWxsIDAuMjVzIGVhc2U7XHJcbiRpbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktNDAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWhlaWdodC1pbm5lcjogcHgtdG8tcmVtKFxyXG4gIGZsb29yKHJlbS10by1weCgoJGlucHV0LWJ0bi1mb250LXNpemUgKiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0KSArICgkaW5wdXQtYnRuLXBhZGRpbmcteSAqIDIpKSlcclxuKSAhZGVmYXVsdDtcclxuJGlucHV0LWhlaWdodC1pbm5lci1zbTogcHgtdG8tcmVtKFxyXG4gIGZsb29yKHJlbS10by1weCgoJGlucHV0LWJ0bi1mb250LXNpemUtc20gKiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtKSArICgkaW5wdXQtYnRuLXBhZGRpbmcteS1zbSAqIDIpKSlcclxuKSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRpbnB1dC1oZWlnaHQtaW5uZXItbGc6IHB4LXRvLXJlbShcclxuICBmbG9vcihyZW0tdG8tcHgoKCRmb250LXNpemUtbGcgKiAkbGluZS1oZWlnaHQtbGcpICsgKCRpbnB1dC1idG4tcGFkZGluZy15LWxnICogMikpKVxyXG4pICFkZWZhdWx0OyAvLyAoQylcclxuLy8gc2Nzcy1kb2NzLWVuZCBmb3JtLWlucHV0LXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tY2hlY2stdmFyaWFibGVzXHJcbiRmb3JtLWNoZWNrLWlucHV0LXdpZHRoOiAxLjJlbSAhZGVmYXVsdDtcclxuJGZvcm0tZGF0YXRhYmxlcy1jaGVjay1pbnB1dC1zaXplOiAxOHB4ICFkZWZhdWx0OyAvLyAoQykgRm9yIGRhdGF0YWJsZXMgd2l0aCBjaGVja2JveC0gdXBkYXRlIGFjY29yZGluZyB0byAkZm9ybS1jaGVjay1pbnB1dC13aWR0aFxyXG5cclxuJGZvcm0tY2hlY2staW5wdXQtYm9yZGVyOiAxcHggc29saWQgJGlucHV0LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLWNoZWNrLWxhYmVsLWN1cnNvcjogcG9pbnRlciAhZGVmYXVsdDtcclxuJGZvcm0tY2hlY2stbGFiZWwtZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0OyAvLyAoQylSXHJcblxyXG4kZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWNvbG9yOiAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuJGZvcm0tY2hlY2staW5wdXQtY2hlY2tlZC1iZy1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMjAgMjAnPjxwYXRoIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J002IDEwbDMgM2w2LTYnLz48L3N2Zz5cIikgIWRlZmF1bHQ7XHJcbiRmb3JtLWNoZWNrLXJhZGlvLWNoZWNrZWQtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nLTQgLTQgOCA4Jz48Y2lyY2xlIHI9JzEuNScgZmlsbD0nI3skZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWNvbG9yfScvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLWNoZWNrLWlucHV0LWluZGV0ZXJtaW5hdGUtY29sb3I6ICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG4kZm9ybS1jaGVjay1pbnB1dC1pbmRldGVybWluYXRlLWJnLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAyMCAyMCc+PHBhdGggZmlsbD0nbm9uZScgc3Ryb2tlPScjeyRmb3JtLWNoZWNrLWlucHV0LWluZGV0ZXJtaW5hdGUtY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIHN0cm9rZS13aWR0aD0nMicgZD0nTTYgMTBoOCcvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLWNoZWNrLWlucHV0LWRpc2FibGVkLWJnOiAkaW5wdXQtZGlzYWJsZWQtYmcgIWRlZmF1bHQ7IC8vKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1jaGVjay12YXJpYWJsZXNcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLXN3aXRjaC12YXJpYWJsZXNcclxuJGZvcm0tc3dpdGNoLWNvbG9yOiAkZ3JheS0zMDAgIWRlZmF1bHQ7XHJcbiRmb3JtLXN3aXRjaC13aWR0aDogMmVtICFkZWZhdWx0O1xyXG4kZm9ybS1zd2l0Y2gtcGFkZGluZy1zdGFydDogJGZvcm0tc3dpdGNoLXdpZHRoICsgMC41ZW0gIWRlZmF1bHQ7XHJcblxyXG4kZm9ybS1zd2l0Y2gtY2hlY2tlZC1iZy1wb3NpdGlvbi1ydGw6IGxlZnQgY2VudGVyICFkZWZhdWx0OyAvLyhDKVxyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tc3dpdGNoLXZhcmlhYmxlc1xyXG5cclxuLy9pbnB1dC1ncm91cC12YXJpYWJsZXNcclxuJGlucHV0LWdyb3VwLWFkZG9uLWNvbG9yOiAkaW5wdXQtY29sb3IgIWRlZmF1bHQ7XHJcbiRpbnB1dC1ncm91cC1hZGRvbi1iZzogJGlucHV0LWJnICFkZWZhdWx0O1xyXG4kaW5wdXQtZ3JvdXAtYWRkb24tYm9yZGVyLWNvbG9yOiAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGlucHV0LWdyb3VwLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tc2VsZWN0LXZhcmlhYmxlc1xyXG4kZm9ybS1zZWxlY3QtcGFkZGluZy15OiAkaW5wdXQtYnRuLXBhZGRpbmcteSAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LXBhZGRpbmcteDogJGlucHV0LXBhZGRpbmcteCAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nOiAkZm9ybS1zZWxlY3QtcGFkZGluZy14ICsgMXJlbSAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWRpc2FibGVkLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWRpc2FibGVkLWJnOiAkaW5wdXQtZGlzYWJsZWQtYmcgIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1iZy1zaXplOiAxN3B4IDEycHggIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItY29sb3I6ICRncmF5LTYwMCAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWluZGljYXRvcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTYgMTYnPjxwYXRoIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J00yIDVsNiA2IDYtNicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuJGZvcm0tc2VsZWN0LWluZGljYXRvci1ydGw6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDE2IDE2Jz48cGF0aCBmaWxsPSdub25lJyBzdHJva2U9JyN7JGZvcm0tc2VsZWN0LWluZGljYXRvci1jb2xvcn0nIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNMiA1bDYgNiA2LTYnLz48L3N2Zz5cIikgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGZvcm0tc2VsZWN0LWZvY3VzLWJveC1zaGFkb3c6ICRpbnB1dC1idG4tZm9jdXMtYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXktc206ICRpbnB1dC1idG4tcGFkZGluZy15LXNtICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtcGFkZGluZy14LXNtOiAkaW5wdXQtcGFkZGluZy14LXNtICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc2VsZWN0LXBhZGRpbmcteS1sZzogJGlucHV0LWJ0bi1wYWRkaW5nLXktbGcgIWRlZmF1bHQ7XHJcbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXgtbGc6ICRpbnB1dC1wYWRkaW5nLXgtbGcgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1zZWxlY3QtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1yYW5nZS12YXJpYWJsZXNcclxuJGZvcm0tcmFuZ2UtdHJhY2staGVpZ2h0OiAwLjM3NXJlbSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stYmc6IHJnYmEtdG8taGV4KCRncmF5LTEwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdHJhY2stZGlzYWJsZWQtYmc6ICRncmF5LTUwICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRmb3JtLXJhbmdlLXRodW1iLXdpZHRoOiAwLjg3NXJlbSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItaGVpZ2h0OiAkZm9ybS1yYW5nZS10aHVtYi13aWR0aCAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItYmc6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItYm94LXNoYWRvdzogMCAwIDZweCAwICRncmF5LTQwMCAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItZm9jdXMtYm94LXNoYWRvdzogMCAwIDhweCAwcHggJGdyYXktNDAwICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1hY3RpdmUtYmc6ICRmb3JtLXJhbmdlLXRodW1iLWJnICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tcmFuZ2UtdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1mbG9hdGluZy12YXJpYWJsZXNcclxuJGZvcm0tZmxvYXRpbmctbGFiZWwtb3BhY2l0eTogMC43NSAhZGVmYXVsdDtcclxuJGZvcm0tZmxvYXRpbmctdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2UtaW4tb3V0LCB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dCAhZGVmYXVsdDtcclxuJGZvcm0tZmxvYXRpbmctbGFiZWwtdHJhbnNmb3JtLXJ0bDogc2NhbGUoMC44NSkgdHJhbnNsYXRlWSgtMC41cmVtKSB0cmFuc2xhdGVYKC0wLjE1cmVtKSAhZGVmYXVsdDsgLy8gKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1mbG9hdGluZy12YXJpYWJsZXNcclxuXHJcbi8vIEZvcm0gdmFsaWRhdGlvblxyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tZmVlZGJhY2stdmFyaWFibGVzXHJcbiRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yOiAkc3VjY2VzcyAhZGVmYXVsdDtcclxuJGZvcm0tZmVlZGJhY2staW52YWxpZC1jb2xvcjogJGRhbmdlciAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXNlbGVjdC1mZWVkYmFjay1pY29uLXBhZGRpbmc6ICRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZyArICRpbnB1dC1oZWlnaHQtaW5uZXIgIWRlZmF1bHQ7IC8vIChDKVxyXG4kZm9ybS1zZWxlY3QtZmVlZGJhY2staWNvbi1wYWRkaW5nLXNtOiAkZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmcgKyAkaW5wdXQtaGVpZ2h0LWlubmVyLXNtICFkZWZhdWx0OyAvLyAoQylcclxuJGZvcm0tc2VsZWN0LWZlZWRiYWNrLWljb24tcGFkZGluZy1sZzogJGZvcm0tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nICsgJGlucHV0LWhlaWdodC1pbm5lci1sZyAhZGVmYXVsdDsgLy8gKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1mZWVkYmFjay12YXJpYWJsZXNcclxuXHJcbi8vICogTmF2c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2LXNwYWNlcjogMC4xMjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJG5hdi1saW5rLXBhZGRpbmcteTogMC41cmVtICFkZWZhdWx0O1xyXG4kbmF2LWxpbmstcGFkZGluZy14OiAxLjI1cmVtICFkZWZhdWx0O1xyXG4kbmF2LWxpbmstY29sb3I6ICR0ZXh0LW11dGVkLWhvdmVyICFkZWZhdWx0O1xyXG4kbmF2LWxpbmstZGlzYWJsZWQtY29sb3I6ICR0ZXh0LWxpZ2h0ZXIgIWRlZmF1bHQ7XHJcbiRuYXYtbGluay1saW5lLWhlaWdodDogJGNvbXBvbmVudC1saW5lLWhlaWdodCAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kbmF2LWxpbmstcGFkZGluZy15LWxnOiAwLjg3NXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXYtbGluay1wYWRkaW5nLXgtbGc6IDEuMzEyNXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXYtbGluay1saW5lLWhlaWdodC1sZzogJGxpbmUtaGVpZ2h0LWxnICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRuYXYtbGluay1wYWRkaW5nLXktc206IDAuMzEyNXJlbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXYtbGluay1wYWRkaW5nLXgtc206IDAuODc1cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJG5hdi1saW5rLWxpbmUtaGVpZ2h0LXNtOiAkbGluZS1oZWlnaHQtc20gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJG5hdi10YWJzLWxpbmstaG92ZXItYm9yZGVyLWNvbG9yOiAkZ3JheS0xMDAgIWRlZmF1bHQ7XHJcbiRuYXYtdGFicy1saW5rLWFjdGl2ZS1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRuYXYtdGFicy1saW5rLWFjdGl2ZS1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kbmF2LXRhYnMtYm9yZGVyLWNvbG9yOiAkbmF2LXRhYnMtbGluay1hY3RpdmUtYmcgIWRlZmF1bHQ7XHJcbiRuYXYtdGFicy1saW5rLWFjdGl2ZS1ib3JkZXItY29sb3I6ICRuYXYtdGFicy1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbiRuYXYtdGFicy1idG4tYmctZmFjdG9yOiAwLjE2ICFkZWZhdWx0OyAvLyAoQylcclxuJG5hdi10YWJzLWJ0bi1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0OyAvLyAoQylcclxuJG5hdi10YWJzLWJ0bi1iZzogcmdiYS10by1oZXgoJGdyYXktMTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRuYXYtcGlsbHMtbGluay1hY3RpdmUtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJG5hdi1waWxscy1saW5rLWFjdGl2ZS1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIE5hdmJhclxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2YmFyLXRvZ2dsZXItcGFkZGluZy15OiAwICFkZWZhdWx0O1xyXG4kbmF2YmFyLXRvZ2dsZXItcGFkZGluZy14OiAwICFkZWZhdWx0O1xyXG4kbmF2YmFyLXRvZ2dsZXItZm9udC1zaXplOiAwLjc1cmVtICFkZWZhdWx0O1xyXG5cclxuJG5hdmJhci1kYXJrLWNvbG9yOiByZ2JhKCR3aGl0ZSwgMC44KSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXJrLWhvdmVyLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRuYXZiYXItZGFyay1hY3RpdmUtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXJrLWRpc2FibGVkLWNvbG9yOiByZ2JhKCR3aGl0ZSwgMC40KSAhZGVmYXVsdDtcclxuJG5hdmJhci1kYXJrLXRvZ2dsZXItaWNvbi1iZzogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMTRweCcgaGVpZ2h0PScxMXB4JyB2aWV3Qm94PScwIDAgMTQgMTEnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayclM0UlM0NkZWZzJTNFJTNDcGF0aCBkPSdNMCwwIEwxNCwwIEwxNCwxLjc1IEwwLDEuNzUgTDAsMCBaIE0wLDQuMzc1IEwxNCw0LjM3NSBMMTQsNi4xMjUgTDAsNi4xMjUgTDAsNC4zNzUgWiBNMCw4Ljc1IEwxNCw4Ljc1IEwxNCwxMC41IEwwLDEwLjUgTDAsOC43NSBaJyBpZD0ncGF0aC0xJyUzRSUzQy9wYXRoJTNFJTNDL2RlZnMlM0UlM0NnIGlkPSfwn5KOLVVJLUVsZW1lbnRzJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ2cgaWQ9JzEyKS1OYXZiYXInIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0xMTc0LjAwMDAwMCwgLTEyOTAuMDAwMDAwKSclM0UlM0NnIGlkPSdHcm91cCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMTE3NC4wMDAwMDAsIDEyODguMDAwMDAwKSclM0UlM0NnIGlkPSdJY29uLUNvbG9yJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMi4wMDAwMDApJyUzRSUzQ3VzZSBmaWxsPScjeyRuYXZiYXItZGFyay1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDdXNlIGZpbGwtb3BhY2l0eT0nMC4xJyBmaWxsPScjeyRuYXZiYXItZGFyay1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG5cclxuJG5hdmJhci1saWdodC1jb2xvcjogJGdyYXktNTAwICFkZWZhdWx0O1xyXG4kbmF2YmFyLWxpZ2h0LWhvdmVyLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJG5hdmJhci1saWdodC1hY3RpdmUtY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kbmF2YmFyLWxpZ2h0LWRpc2FibGVkLWNvbG9yOiAkZ3JheS0zMDAgIWRlZmF1bHQ7XHJcbiRuYXZiYXItbGlnaHQtdG9nZ2xlci1pY29uLWJnOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxNHB4JyBoZWlnaHQ9JzExcHgnIHZpZXdCb3g9JzAgMCAxNCAxMScgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0NwYXRoIGQ9J00wLDAgTDE0LDAgTDE0LDEuNzUgTDAsMS43NSBMMCwwIFogTTAsNC4zNzUgTDE0LDQuMzc1IEwxNCw2LjEyNSBMMCw2LjEyNSBMMCw0LjM3NSBaIE0wLDguNzUgTDE0LDguNzUgTDE0LDEwLjUgTDAsMTAuNSBMMCw4Ljc1IFonIGlkPSdwYXRoLTEnJTNFJTNDL3BhdGglM0UlM0MvZGVmcyUzRSUzQ2cgaWQ9J/Cfko4tVUktRWxlbWVudHMnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnJTNFJTNDZyBpZD0nMTIpLU5hdmJhcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTExNzQuMDAwMDAwLCAtMTI5MC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0dyb3VwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgxMTc0LjAwMDAwMCwgMTI4OC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0ljb24tQ29sb3InIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyLjAwMDAwMCknJTNFJTNDdXNlIGZpbGw9JyN7JG5hdmJhci1saWdodC1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDdXNlIGZpbGwtb3BhY2l0eT0nMC4xJyBmaWxsPScjeyRuYXZiYXItbGlnaHQtY29sb3J9JyB4bGluazpocmVmPSclMjNwYXRoLTEnJTNFJTNDL3VzZSUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcclxuJG5hdmJhci1saWdodC10b2dnbGVyLWJvcmRlci1jb2xvcjogcmdiYSgkYmxhY2ssIDAuMDYpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBEcm9wZG93bnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4kZHJvcGRvd24tbWluLXdpZHRoOiAxMnJlbSAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLXBhZGRpbmcteTogMC4zMTI1cmVtICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1ib3JkZXItY29sb3I6ICRmbG9hdGluZy1jb21wb25lbnQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tZGl2aWRlci1iZzogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLWJveC1zaGFkb3c6ICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xyXG5cclxuJGRyb3Bkb3duLWlubmVyLWJvcmRlci1yYWRpdXM6IDAgIWRlZmF1bHQ7XHJcblxyXG4kZHJvcGRvd24tbGluay1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1saW5rLWhvdmVyLWJnOiByZ2JhKCRibGFjaywgMC4wNCkgIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1saW5rLWxpbmUtaGVpZ2h0OiAkY29tcG9uZW50LWxpbmUtaGVpZ2h0ICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRkcm9wZG93bi1saW5rLWRpc2FibGVkLWNvbG9yOiAkdGV4dC1saWdodGVyICFkZWZhdWx0O1xyXG5cclxuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy15OiAwLjUzMnJlbSAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy14OiAxLjI1cmVtICFkZWZhdWx0O1xyXG5cclxuJGRyb3Bkb3duLWhlYWRlci1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcblxyXG4kZHJvcGRvd24taGVhZGVyLXBhZGRpbmc6ICRkcm9wZG93bi1pdGVtLXBhZGRpbmcteSAkZHJvcGRvd24taXRlbS1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcblxyXG4vLyAqIFBhZ2luYXRpb25cclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHBhZ2luYXRpb24tcGFkZGluZy15OiAwLjYyNXJlbSAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tcGFkZGluZy14OiAwLjUxMjVyZW0gIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteS1zbTogMC4zNzVyZW0gIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteC1zbTogMC4yNXJlbSAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tcGFkZGluZy15LWxnOiAwLjkzNzVyZW0gIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLXBhZGRpbmcteC1sZzogMC41cmVtICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24tbGluZS1oZWlnaHQ6IDEgIWRlZmF1bHQ7IC8vIChjKVxyXG5cclxuJHBhZ2luYXRpb24tY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1iZzogcmdiYS10by1oZXgocmdiYSgkYmxhY2ssIDAuMDgpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1ib3JkZXItd2lkdGg6IDBweCAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtc20gIWRlZmF1bHQ7XHJcbiRwYWdpbmF0aW9uLW1hcmdpbi1zdGFydDogMC4xODc1cmVtICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1ib3JkZXItY29sb3I6ICRib3JkZXItaW5uZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kcGFnaW5hdGlvbi1mb2N1cy1ib3gtc2hhZG93OiBub25lICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24tZm9jdXMtY29sb3I6ICRwYWdpbmF0aW9uLWNvbG9yICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1mb2N1cy1iZzogcmdiYS10by1oZXgocmdiYSgkYmxhY2ssIDAuMTYpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24taG92ZXItY29sb3I6ICRwYWdpbmF0aW9uLWNvbG9yICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1ob3Zlci1iZzogcmdiYS10by1oZXgocmdiYSgkYmxhY2ssIDAuMTYpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJHBhZ2luYXRpb24tZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xyXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgocmdiYSgkYmxhY2ssIDAuMDQpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBDYXJkc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kY2FyZC1zcGFjZXIteTogJHNwYWNlciAqIDEuNSAhZGVmYXVsdDtcclxuJGNhcmQtc3BhY2VyLXg6ICRzcGFjZXIgKiAxLjUgIWRlZmF1bHQ7XHJcbiRjYXJkLXRpdGxlLWZvbnQtc2l6ZTogJGg1LWZvbnQtc2l6ZSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjYXJkLXRpdGxlLXNwYWNlci15OiAkc3BhY2VyICogMC44NzUgIWRlZmF1bHQ7XHJcbiRjYXJkLXNwYWNlci14LXNtOiAxcmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGNhcmQtYm9yZGVyLXdpZHRoOiAwO1xyXG4kY2FyZC1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcbiRjYXJkLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xyXG4kY2FyZC1ib3gtc2hhZG93OiAwIDJweCA2cHggMCByZ2JhKCRibGFjaywgMC4xMikgIWRlZmF1bHQ7XHJcbiRjYXJkLWlubmVyLWJvcmRlci1jb2xvcjogJGJvcmRlci1pbm5lci1jb2xvciAhZGVmYXVsdDsgLy8gKEMpXHJcbiRjYXJkLWNhcC1wYWRkaW5nLXk6ICRzcGFjZXIgKiAxLjUgIWRlZmF1bHQ7XHJcblxyXG4kY2FyZC1jYXAtYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG4kY2FyZC1pbWctb3ZlcmxheS1wYWRkaW5nOiAxLjVyZW0gIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEFjY29yZGlvblxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYWNjb3JkaW9uLXBhZGRpbmcteTogMC43OXJlbSAhZGVmYXVsdDtcclxuJGFjY29yZGlvbi1wYWRkaW5nLXg6IDEuMTI1cmVtICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJGFjY29yZGlvbi1iZzogJHdoaXRlICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWJ1dHRvbi1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1ib3JkZXItd2lkdGg6IDAgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWJ1dHRvbi1hY3RpdmUtYmc6ICRhY2NvcmRpb24tYmcgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1jb2xvcjogJGFjY29yZGlvbi1idXR0b24tY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kYWNjb3JkaW9uLWljb24td2lkdGg6IDAuNzVyZW0gIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24taWNvbi1jb2xvcjogJGFjY29yZGlvbi1idXR0b24tY29sb3IgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24taWNvbi1hY3RpdmUtY29sb3I6ICRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcclxuXHJcbiRhY2NvcmRpb24taWNvbi10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZykgIWRlZmF1bHQ7XHJcblxyXG4kYWNjb3JkaW9uLWJ1dHRvbi1pY29uOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxMicgaGVpZ2h0PScxMicgdmlld0JveD0nMCAwIDEyIDEyJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0NwYXRoIGlkPSdhJyBkPSdtMS41MzIgMTIgNi4xODItNi02LjE4Mi02TDAgMS40ODcgNC42NSA2IDAgMTAuNTEzeicvJTNFJTNDL2RlZnMlM0UlM0NnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDIuNTcxKScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ3VzZSBmaWxsPSclMjM0MzU5NzEnIHhsaW5rOmhyZWY9JyUyM2EnLyUzRSUzQ3VzZSBmaWxsLW9wYWNpdHk9Jy4xJyBmaWxsPScjeyRhY2NvcmRpb24taWNvbi1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM2EnLyUzRSUzQy9nJTNFJTNDL3N2ZyUzRSUwQVwiKSAhZGVmYXVsdDtcclxuJGFjY29yZGlvbi1idXR0b24tYWN0aXZlLWljb246IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzEyJyBoZWlnaHQ9JzEyJyB2aWV3Qm94PScwIDAgMTIgMTInIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnJTNFJTNDZGVmcyUzRSUzQ3BhdGggaWQ9J2EnIGQ9J20xLjUzMiAxMiA2LjE4Mi02LTYuMTgyLTZMMCAxLjQ4NyA0LjY1IDYgMCAxMC41MTN6Jy8lM0UlM0MvZGVmcyUzRSUzQ2cgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMi41NzEpJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnJTNFJTNDdXNlIGZpbGw9JyUyMzQzNTk3MScgeGxpbms6aHJlZj0nJTIzYScvJTNFJTNDdXNlIGZpbGwtb3BhY2l0eT0nLjEnIGZpbGw9JyN7JGFjY29yZGlvbi1pY29uLWFjdGl2ZS1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM2EnLyUzRSUzQy9nJTNFJTNDL3N2ZyUzRSUwQVwiKSAhZGVmYXVsdDtcclxuXHJcbi8vICogVG9vbHRpcHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHRvb2x0aXAtYmc6ICRkYXJrICFkZWZhdWx0O1xyXG4kdG9vbHRpcC1vcGFjaXR5OiAxICFkZWZhdWx0O1xyXG4kdG9vbHRpcC1ib3gtc2hhZG93OiAkYm94LXNoYWRvdy1zbSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR0b29sdGlwLXBhZGRpbmcteTogMC4yNXJlbSAhZGVmYXVsdDtcclxuJHRvb2x0aXAtcGFkZGluZy14OiAwLjdyZW0gIWRlZmF1bHQ7XHJcbiR0b29sdGlwLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlICFkZWZhdWx0O1xyXG4kdG9vbHRpcC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1zbSAhZGVmYXVsdDtcclxuXHJcbi8vICogUG9wb3ZlcnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJHBvcG92ZXItYmc6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJHBvcG92ZXItZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWJveC1zaGFkb3c6ICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib3JkZXItd2lkdGg6IDBweCAhZGVmYXVsdDtcclxuJHBvcG92ZXItaGVhZGVyLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteTogMCAhZGVmYXVsdDtcclxuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteDogMS4xMjVyZW0gIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWhlYWRlci1mb250LXNpemU6ICRoNS1mb250LXNpemUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJHBvcG92ZXItYm9keS1wYWRkaW5nLXk6IDEuMTI1cmVtICFkZWZhdWx0O1xyXG4kcG9wb3Zlci1ib2R5LXBhZGRpbmcteDogJHBvcG92ZXItYm9keS1wYWRkaW5nLXkgIWRlZmF1bHQ7XHJcbiRwb3BvdmVyLWFycm93LW91dGVyLWNvbG9yOiAkcG9wb3Zlci1iZyAhZGVmYXVsdDtcclxuXHJcbi8vICogVG9hc3RzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiR0b2FzdC1wYWRkaW5nLXg6IDEuMjVyZW0gIWRlZmF1bHQ7XHJcbiR0b2FzdC1wYWRkaW5nLXk6ICR0b2FzdC1wYWRkaW5nLXggIWRlZmF1bHQ7XHJcbiR0b2FzdC1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcclxuJHRvYXN0LWJhY2tncm91bmQtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcclxuJHRvYXN0LWJnLWZhY3RvcjogMC44NSAhZGVmYXVsdDsgLy8gKEMpXHJcbiR0b2FzdC1ib3JkZXItd2lkdGg6IDAgIWRlZmF1bHQ7XHJcbiR0b2FzdC1ib3JkZXItY29sb3I6ICRncmF5LTEwMCAhZGVmYXVsdDtcclxuJHRvYXN0LWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xyXG4kdG9hc3QtYm94LXNoYWRvdzogJGZsb2F0aW5nLWNvbXBvbmVudC1zaGFkb3cgIWRlZmF1bHQ7XHJcblxyXG4kdG9hc3QtaGVhZGVyLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJHRvYXN0LWhlYWRlci1iYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJHRvYXN0LWhlYWRlci1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG4kdG9hc3Qtc3BhY2luZzogMS4yNXJlbSAhZGVmYXVsdDtcclxuXHJcbiR0b2FzdC1idG4tY2xvc2Utc2l6ZTogMC42MjVlbSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIEJhZGdlc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYmFkZ2UtZm9udC1zaXplOiAwLjgxMjVlbSAhZGVmYXVsdDtcclxuJGJhZGdlLWZvbnQtd2VpZ2h0OiA1MDAgIWRlZmF1bHQ7XHJcbiRiYWRnZS1wYWRkaW5nLXk6IDAuNTJlbSAhZGVmYXVsdDtcclxuJGJhZGdlLXBhZGRpbmcteDogMC41OTNlbSAhZGVmYXVsdDtcclxuJGJhZGdlLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLXNtICFkZWZhdWx0O1xyXG5cclxuJGJhZGdlLWhlaWdodDogMS41cmVtICFkZWZhdWx0OyAvLyAoQylcclxuJGJhZGdlLXdpZHRoOiAxLjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kYmFkZ2UtbGluZS1oZWlnaHQ6IDAuNzUgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBNb2RhbHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4kbW9kYWwtaW5uZXItcGFkZGluZzogJHNwYWNlciAqIDEuNSAhZGVmYXVsdDtcclxuJG1vZGFsLWRpYWxvZy1tYXJnaW46IDEuNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC1jb250ZW50LWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzOiAwIDJweCAxNnB4IDAgcmdiYSgkYmxhY2ssIDAuNDUpICFkZWZhdWx0O1xyXG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXNtLXVwOiAwIDJweCAyMHB4IDAgcmdiYSgkYmxhY2ssIDAuNDUpICFkZWZhdWx0O1xyXG4kbW9kYWwtaGVhZGVyLWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xyXG5cclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nLXk6IDAuMjVyZW0gIWRlZmF1bHQ7XHJcbiRtb2RhbC1oZWFkZXItcGFkZGluZy14OiAkbW9kYWwtaW5uZXItcGFkZGluZyAhZGVmYXVsdDtcclxuJG1vZGFsLWhlYWRlci1wYWRkaW5nOiAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteCAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteCAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteSAhZGVmYXVsdDsgLy8gS2VlcCB0aGlzIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxyXG4kbW9kYWwtZm9vdGVyLXBhZGRpbmc6ICRtb2RhbC1oZWFkZXItcGFkZGluZy15ICRtb2RhbC1oZWFkZXItcGFkZGluZy14ICRtb2RhbC1oZWFkZXItcGFkZGluZy14ICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiRtb2RhbC1sZzogNTByZW0gIWRlZmF1bHQ7XHJcbiRtb2RhbC1tZDogMzVyZW0gIWRlZmF1bHQ7XHJcbiRtb2RhbC1zbTogMjIuNXJlbSAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC1mYWRlLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwcHgpIHNjYWxlKDAuOCkgIWRlZmF1bHQ7XHJcbiRtb2RhbC1zaG93LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSBzY2FsZSgxKSAhZGVmYXVsdDtcclxuXHJcbiRtb2RhbC10cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjE1cyAhZGVmYXVsdDsgLy8gKEMpXHJcbiRtb2RhbC10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gJG1vZGFsLXRyYW5zaXRpb24tZHVyYXRpb24gZWFzZS1vdXQgIWRlZmF1bHQ7XHJcblxyXG4kbW9kYWwtc2ltcGxlLXBhZGRpbmc6IDNyZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG4kbW9kYWwtc2ltcGxlLWNsb3NlLXBvc2l0aW9uOiAxcmVtICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQWxlcnRzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRhbGVydC1wYWRkaW5nLXk6ICRzcGFjZXIgKiAwLjkzNzUgIWRlZmF1bHQ7XHJcbiRhbGVydC1wYWRkaW5nLXg6ICRzcGFjZXIgKiAwLjkzNzUgIWRlZmF1bHQ7XHJcbiRhbGVydC1ib3JkZXItd2lkdGg6IDAgIWRlZmF1bHQ7XHJcbiRhbGVydC1iZy1zY2FsZTogLTg0JSAhZGVmYXVsdDtcclxuJGFsZXJ0LWJvcmRlci1zY2FsZTogLTcwJSAhZGVmYXVsdDtcclxuJGFsZXJ0LWNvbG9yLXNjYWxlOiAwJSAhZGVmYXVsdDtcclxuXHJcbi8vICogUHJvZ3Jlc3MgYmFyc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kcHJvZ3Jlc3MtaGVpZ2h0OiAwLjc1cmVtICFkZWZhdWx0O1xyXG4kcHJvZ3Jlc3MtZm9udC1zaXplOiAwLjYyNXJlbSAhZGVmYXVsdDtcclxuJHByb2dyZXNzLWJnOiAkZ3JheS0xMDAgIWRlZmF1bHQ7XHJcbiRwcm9ncmVzcy1ib3JkZXItcmFkaXVzOiAxMHJlbSAhZGVmYXVsdDtcclxuJHByb2dyZXNzLWJhci1jb2xvcjogJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuLy8gTGlzdCBncm91cFxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgbGlzdC1ncm91cC12YXJpYWJsZXNcclxuJGxpc3QtZ3JvdXAtY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtaXRlbS1wYWRkaW5nLXk6IDAuNThyZW0gIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWl0ZW0tcGFkZGluZy14OiAwLjkzNzVyZW0gIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWl0ZW0tY29sb3Itc2NhbGU6IDAlICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1sZyAhZGVmYXVsdDtcclxuJGxpc3QtZ3JvdXAtaXRlbS1iZy1ob3Zlci1zY2FsZTogNSUgIWRlZmF1bHQ7IC8vICAoYylcclxuXHJcbiRsaXN0LWdyb3VwLWhvdmVyLWJnOiByZ2JhKCRibGFjaywgMC4wNikgIWRlZmF1bHQ7XHJcbiRsaXN0LWdyb3VwLWFjdGl2ZS1jb2xvcjogJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuJGxpc3QtZ3JvdXAtZGlzYWJsZWQtY29sb3I6ICR0ZXh0LWxpZ2h0ZXIgIWRlZmF1bHQ7XHJcblxyXG4kbGlzdC1ncm91cC1hY3Rpb24tY29sb3I6ICR0ZXh0LW11dGVkLWhvdmVyICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1hY3Rpb24taG92ZXItY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1hY3Rpb24tYWN0aXZlLWJnOiAkZ3JheS01MCAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBsaXN0LWdyb3VwLXZhcmlhYmxlc1xyXG5cclxuLy8gKiBJbWFnZSB0aHVtYm5haWxzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiR0aHVtYm5haWwtcGFkZGluZzogMCAhZGVmYXVsdDtcclxuJHRodW1ibmFpbC1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XHJcbiR0aHVtYm5haWwtYm9yZGVyLXdpZHRoOiAwcHggIWRlZmF1bHQ7XHJcbiR0aHVtYm5haWwtYm9yZGVyLXJhZGl1czogMHB4ICFkZWZhdWx0O1xyXG5cclxuLy8gKiBGaWd1cmVzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRmaWd1cmUtY2FwdGlvbi1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEJyZWFkY3J1bWJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRicmVhZGNydW1iLXBhZGRpbmcteTogMCAhZGVmYXVsdDtcclxuJGJyZWFkY3J1bWItcGFkZGluZy14OiAwICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1pdGVtLXBhZGRpbmcteDogMC41cmVtICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1tYXJnaW4tYm90dG9tOiAxcmVtICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XHJcbiRicmVhZGNydW1iLWRpdmlkZXItY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1hY3RpdmUtY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1kaXZpZGVyOiAnLycgIWRlZmF1bHQ7XHJcbiRicmVhZGNydW1iLWRpdmlkZXItZmxpcHBlZDogJ1xcXFwnICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBDYXJvdXNlbFxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiRjYXJvdXNlbC1jb250cm9sLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1jb250cm9sLXdpZHRoOiAxNCUgIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1jb250cm9sLWljb24td2lkdGg6IDIuNTVyZW0gIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1jb250cm9sLW9wYWNpdHk6IDEgIWRlZmF1bHQ7XHJcbiRjYXJvdXNlbC1jb250cm9sLWhvdmVyLW9wYWNpdHk6IDEgIWRlZmF1bHQ7XHJcblxyXG4kY2Fyb3VzZWwtY29udHJvbC1wcmV2LWljb24tYmc6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMjQnIGhlaWdodD0nMjQnIHZpZXdCb3g9JzAgMCAyNCAyNCcgc3R5bGU9J2ZpbGw6ICN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9O3RyYW5zZm9ybTogO21zRmlsdGVyOjsnJTNFJTNDcGF0aCBkPSdNMTMuMjkzIDYuMjkzIDcuNTg2IDEybDUuNzA3IDUuNzA3IDEuNDE0LTEuNDE0TDEwLjQxNCAxMmw0LjI5My00LjI5M3onJTNFJTNDL3BhdGglM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xyXG4kY2Fyb3VzZWwtY29udHJvbC1uZXh0LWljb24tYmc6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMjQnIGhlaWdodD0nMjQnIHZpZXdCb3g9JzAgMCAyNCAyNCcgc3R5bGU9J2ZpbGw6ICN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9O3RyYW5zZm9ybTogO21zRmlsdGVyOjsnJTNFJTNDcGF0aCBkPSdNMTAuNzA3IDE3LjcwNyAxNi40MTQgMTJsLTUuNzA3LTUuNzA3LTEuNDE0IDEuNDE0TDEzLjU4NiAxMmwtNC4yOTMgNC4yOTN6JyUzRSUzQy9wYXRoJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcclxuXHJcbi8vIFNwaW5uZXJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRzcGlubmVyLXdpZHRoLWxnOiAzcmVtICFkZWZhdWx0OyAvLyAoQylcclxuJHNwaW5uZXItaGVpZ2h0LWxnOiAkc3Bpbm5lci13aWR0aC1sZyAhZGVmYXVsdDsgLy8gKEMpXHJcbiRzcGlubmVyLWJvcmRlci13aWR0aC1sZzogMC4zZW0gIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuLy8gKiBDbG9zZVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYnRuLWNsb3NlLXdpZHRoOiAwLjhlbSAhZGVmYXVsdDtcclxuJGJ0bi1jbG9zZS1oZWlnaHQ6ICRidG4tY2xvc2Utd2lkdGggIWRlZmF1bHQ7XHJcbiRidG4tY2xvc2UtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xyXG4kYnRuLWNsb3NlLWJnOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxNTBweCcgaGVpZ2h0PScxNTFweCcgdmlld0JveD0nMCAwIDE1MCAxNTEnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayclM0UlM0NkZWZzJTNFJTNDcG9seWdvbiBpZD0ncGF0aC0xJyBwb2ludHM9JzEzMS4yNTE2NTcgMCA3NC45OTMzNzA1IDU2LjI1IDE4Ljc0ODM0MjYgMCAwIDE4Ljc1IDU2LjI0NTAyNzggNzUgMCAxMzEuMjUgMTguNzQ4MzQyNiAxNTAgNzQuOTkzMzcwNSA5My43NSAxMzEuMjUxNjU3IDE1MCAxNTAgMTMxLjI1IDkzLjc1NDk3MjIgNzUgMTUwIDE4Ljc1JyUzRSUzQy9wb2x5Z29uJTNFJTNDL2RlZnMlM0UlM0NnIGlkPSfwn46oLSU1QlNldHVwJTVEOi1Db2xvcnMtJmFtcDstU2hhZG93cycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGlkPSdBcnRib2FyZCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTIyNS4wMDAwMDAsIC0yNTAuMDAwMDAwKSclM0UlM0NnIGlkPSdJY29uLUNvbG9yJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyMjUuMDAwMDAwLCAyNTAuNTAwMDAwKSclM0UlM0N1c2UgZmlsbD0nI3skYnRuLWNsb3NlLWNvbG9yfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScwLjUnIGZpbGw9JyN7JGJ0bi1jbG9zZS1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcclxuJGJ0bi1jbG9zZS1mb2N1cy1zaGFkb3c6IG5vbmUgIWRlZmF1bHQ7XHJcbiRidG4tY2xvc2Utb3BhY2l0eTogMC45NSAhZGVmYXVsdDtcclxuJGJ0bi1jbG9zZS1ob3Zlci1vcGFjaXR5OiAwLjk1ICFkZWZhdWx0O1xyXG4kYnRuLWNsb3NlLWZvY3VzLW9wYWNpdHk6IDAuOTUgIWRlZmF1bHQ7XHJcblxyXG4kY2xvc2UtZm9udC13ZWlnaHQ6IDMwMCAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIE9mZmNhbnZhc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgb2ZmY2FudmFzLXZhcmlhYmxlc1xyXG4kb2ZmY2FudmFzLXRyYW5zaXRpb24tZHVyYXRpb246IDAuMjVzICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIG9mZmNhbnZhcy12YXJpYWJsZXNcclxuXHJcbi8vIFV0aWxpdGllc1xyXG4kb3ZlcmZsb3dzOiBhdXRvLCBoaWRkZW4sIHNjcm9sbCwgdmlzaWJsZSAhZGVmYXVsdDtcclxuXHJcbi8vIENvbmZpZ1xyXG4kcnRsLXN1cHBvcnQ6IGZhbHNlICFkZWZhdWx0O1xyXG4kZGFyay1zdHlsZTogZmFsc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIENoZXZyb24gSWNvbnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRjaGV2cm9uLXVwOiBcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzEwcHgnIGhlaWdodD0nNnB4JyB2aWV3Qm94PScwIDAgMTAgNicgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0Nwb2x5Z29uIGlkPSdwYXRoLTEnIHBvaW50cz0nMCA0LjU3OTYxMzYyIDEuMjM4ODI5NTEgNS43MTQyODU3MSA1IDIuMjY5MzQ0MTkgOC43NjExNzA0OSA1LjcxNDI4NTcxIDEwIDQuNTc5NjEzNjIgNSAwJyUzRSUzQy9wb2x5Z29uJTNFJTNDL2RlZnMlM0UlM0NnIGlkPSfimpnvuI8tU3ltYm9scycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGlkPSczMSktRGF0YVRhYmxlcycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTI4OS4wMDAwMDAsIC02NC4wMDAwMDApJyUzRSUzQ2cgaWQ9J1RhYmxlLUJhc2ljJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgNTIuMDAwMDAwKSclM0UlM0NnIGlkPSdUYWJsZS1IZWFkZXInIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDE5LjAwMDAwMCwgMTAuMDAwMDAwKSclM0UlM0NnIGlkPSdHcm91cCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMjcwLjAwMDAwMCwgMC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0ljb24tQ29sb3InIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyLjE0Mjg1NyknJTNFJTNDdXNlIGZpbGw9JyN7c3RyLXJlcGxhY2UoI3tyZ2JhLXRvLWhleCgkZ3JheS01MDAsJHJnYmEtdG8taGV4LWJnKX0sJyMnLCAnJTIzJyl9JyB4bGluazpocmVmPSclMjNwYXRoLTEnJTNFJTNDL3VzZSUzRSUzQ3VzZSBmaWxsLW9wYWNpdHk9JzAuNScgZmlsbD0nI3tzdHItcmVwbGFjZSgje3JnYmEtdG8taGV4KCRncmF5LTUwMCwkcmdiYS10by1oZXgtYmcpfSwnIycsICclMjMnKX0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL3N2ZyUzRVwiO1xyXG4kY2hldnJvbi1kb3duOiBcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzEwcHgnIGhlaWdodD0nNnB4JyB2aWV3Qm94PScwIDAgMTAgNicgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0Nwb2x5Z29uIGlkPSdwYXRoLTEnIHBvaW50cz0nOC43NjExNzA0OSAwIDUgMy40NDQ5NDE1MiAxLjIzODgyOTUxIDAgMCAxLjEzNDY3MjEgNSA1LjcxNDI4NTcxIDEwIDEuMTM0NjcyMSclM0UlM0MvcG9seWdvbiUzRSUzQy9kZWZzJTNFJTNDZyBpZD0n4pqZ77iPLVN5bWJvbHMnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnJTNFJTNDZyBpZD0nMzEpLURhdGFUYWJsZXMnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0yODkuMDAwMDAwLCAtNzYuMDAwMDAwKSclM0UlM0NnIGlkPSdUYWJsZS1CYXNpYycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDUyLjAwMDAwMCknJTNFJTNDZyBpZD0nVGFibGUtSGVhZGVyJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgxOS4wMDAwMDAsIDEwLjAwMDAwMCknJTNFJTNDZyBpZD0nR3JvdXAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDI3MC4wMDAwMDAsIDEyLjAwMDAwMCknJTNFJTNDZyBpZD0nSWNvbi1Db2xvcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDIuMTQyODU3KSclM0UlM0N1c2UgZmlsbD0nI3tzdHItcmVwbGFjZSgje3JnYmEtdG8taGV4KCRncmF5LTUwMCwkcmdiYS10by1oZXgtYmcpfSwnIycsICclMjMnKX0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDdXNlIGZpbGwtb3BhY2l0eT0nMC44JyBmaWxsPScje3N0ci1yZXBsYWNlKCN7cmdiYS10by1oZXgoJGdyYXktNTAwLCRyZ2JhLXRvLWhleC1iZyl9LCcjJywgJyUyMycpfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCI7XHJcbiIsIi8vIFZhcmlhYmxlc1xyXG4vL1xyXG4vLyBWYXJpYWJsZXMgc2hvdWxkIGZvbGxvdyB0aGUgYCRjb21wb25lbnQtc3RhdGUtcHJvcGVydHktc2l6ZWAgZm9ybXVsYSBmb3IgIGNvbnNpc3RlbnQgbmFtaW5nLiBFeDogJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yIGFuZCAkbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzLlxyXG4vLyAoQykgQ3VzdG9tIHZhcmlhYmxlcyBmb3IgZXh0ZW5kZWQgY29tcG9uZW50cyBvZiBib290c3RyYXAgb25seVxyXG4vL1xyXG4vLyA/IFRvIGNoYW5nZSB0aGUgbGF5b3V0IGNvbG9ycyB5b3UganVzdCBuZWVkIHRvIGNoYW5nZSB0aGUgJGJhc2UgYW5kICRib2R5LWJnIGNvbG9ycyBhbmQgcmVzdCAoYm9yZGVyLCBjYXJkLCBmb250IGNvbG9ycyBhbmQgZXRjLi4uKSB3aWxsIGJlIGFkanVzdCBhdXRvbWF0aWNhbGx5LlxyXG4vLyA/IFVzZSBodHRwczovL25vZWxkZWxnYWRvLmdpdGh1Yi5pby9zaGFkb3dsb3JkLyB0byBzZWxlY3QgcHJvcGVyIPCfkoQgQ29sb3IgdGludHMgYW5kIHNoYWRlIGZvciAkYmxhY2sgYW5kICRib2R5LWJnIGNvbG9yLlxyXG4vLyA/IGNvbG9yLXZhcmlhYmxlcyBhbmQgdGhlbWUtY29sb3ItdmFyaWFibGVzIChicmFuZGluZyBjb2xvcnMpIGNhbiBiZSBjaG9vc2UgYXMgcGVyIHlvdXIgcHJlZmVyZW5jZXMuIFdlIHN1Z2dlc3QgeW91IHRvIHVzZSBodHRwczovL2NvbG9ycy5ldmEuZGVzaWduL1xyXG4vLyAhIExpZ2h0IHN0eWxlIHVzZSAkYmFzZSB0byBnZW5lcmF0ZSB0aGUgJGdyYXkgc2hhZGVzLlxyXG4vLyAhIF92YXJpYWJsZS1kYXJrLnNjc3MgZmlsZSBvdmVycmlkZXMgX3ZhcmlhYmxlLnNjc3MgZmlsZS5cclxuXHJcbi8vICogQ29sb3JzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9yLXZhcmlhYmxlc1xyXG4kd2hpdGU6ICNmZmYgIWRlZmF1bHQ7XHJcbiRibGFjazogIzAwMCAhZGVmYXVsdDtcclxuXHJcbiRiYXNlOiAjN2M3ZGI2ICFkZWZhdWx0OyAvLyAoQylcclxuJGdyYXktMjU6IHJnYmEoJHdoaXRlLCAwLjAxNSkgIWRlZmF1bHQ7IC8vIChDKVxyXG4kZ3JheS01MDogcmdiYSgkd2hpdGUsIDAuMDMpICFkZWZhdWx0OyAvLyAoQylcclxuJGdyYXktMTAwOiByZ2JhKCR3aGl0ZSwgMC44KSAhZGVmYXVsdDtcclxuJGdyYXktMjAwOiByZ2JhKCR3aGl0ZSwgMC42KSAhZGVmYXVsdDtcclxuJGdyYXktMzAwOiByZ2JhKCR3aGl0ZSwgMC40KSAhZGVmYXVsdDtcclxuJGdyYXktNDAwOiByZ2JhKCR3aGl0ZSwgMC4zKSAhZGVmYXVsdDtcclxuJGdyYXktNTAwOiAkYmFzZSAhZGVmYXVsdDtcclxuJGdyYXktNjAwOiByZ2JhKCRibGFjaywgMC4xKSAhZGVmYXVsdDtcclxuJGdyYXktNzAwOiByZ2JhKCRibGFjaywgMC4xNSkgIWRlZmF1bHQ7XHJcbiRncmF5LTgwMDogcmdiYSgkYmxhY2ssIDAuNDUpICFkZWZhdWx0O1xyXG4kZ3JheS05MDA6IHJnYmEoJGJsYWNrLCAwLjY1KSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBncmF5LWNvbG9yLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGdyYXktY29sb3JzLW1hcFxyXG4kZ3JheXM6IChcclxuICAnMjUnOiAkZ3JheS0yNSxcclxuICAnNTAnOiAkZ3JheS01MFxyXG4pICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGdyYXktY29sb3JzLW1hcFxyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGNvbG9yLXZhcmlhYmxlc1xyXG4kYmx1ZTogIzAwN2JmZiAhZGVmYXVsdDtcclxuJGluZGlnbzogIzY2MTBmMiAhZGVmYXVsdDtcclxuJHB1cnBsZTogIzY5NmNmZiAhZGVmYXVsdDtcclxuJHBpbms6ICNlODNlOGMgIWRlZmF1bHQ7XHJcbiRyZWQ6ICNmZjNlMWQgIWRlZmF1bHQ7XHJcbiRvcmFuZ2U6ICNmZDdlMTQgIWRlZmF1bHQ7XHJcbiR5ZWxsb3c6ICNmZmFiMDAgIWRlZmF1bHQ7XHJcbiRncmVlbjogIzcxZGQzNyAhZGVmYXVsdDtcclxuJHRlYWw6ICMyMGM5OTcgIWRlZmF1bHQ7XHJcbiRjeWFuOiAjMDNjM2VjICFkZWZhdWx0O1xyXG4vLyBzY3NzLWRvY3MtZW5kIGNvbG9yLXZhcmlhYmxlc1xyXG5cclxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHRoZW1lLWNvbG9yLXZhcmlhYmxlc1xyXG4kcHJpbWFyeTogJHB1cnBsZSAhZGVmYXVsdDtcclxuJHNlY29uZGFyeTogIzg1OTJhMyAhZGVmYXVsdDtcclxuJHN1Y2Nlc3M6ICRncmVlbiAhZGVmYXVsdDtcclxuJGluZm86ICRjeWFuICFkZWZhdWx0O1xyXG4kd2FybmluZzogJHllbGxvdyAhZGVmYXVsdDtcclxuJGRhbmdlcjogJHJlZCAhZGVmYXVsdDtcclxuJGxpZ2h0OiAjNGY1MDVjICFkZWZhdWx0O1xyXG4kZGFyazogIzZiNmM5ZCAhZGVmYXVsdDtcclxuJGdyYXk6ICRncmF5LTEwMCAhZGVmYXVsdDsgLy8gKEMpXHJcbi8vIHNjc3MtZG9jcy1lbmQgdGhlbWUtY29sb3ItdmFyaWFibGVzXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGhlbWUtY29sb3JzLW1hcFxyXG4kdGhlbWUtY29sb3JzOiAoXHJcbiAgJ3ByaW1hcnknOiAkcHJpbWFyeSxcclxuICAnc2Vjb25kYXJ5JzogJHNlY29uZGFyeSxcclxuICAnc3VjY2Vzcyc6ICRzdWNjZXNzLFxyXG4gICdpbmZvJzogJGluZm8sXHJcbiAgJ3dhcm5pbmcnOiAkd2FybmluZyxcclxuICAnZGFuZ2VyJzogJGRhbmdlcixcclxuICAnbGlnaHQnOiAkbGlnaHQsXHJcbiAgJ2RhcmsnOiAkZGFyayxcclxuICAnZ3JheSc6ICRncmF5XHJcbikgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgdGhlbWUtY29sb3JzLW1hcFxyXG5cclxuJGNvbG9yLXNjaGVtZTogJ2RhcmsnICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQm9keVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kYm9keS1iZzogIzIzMjMzMyAhZGVmYXVsdDtcclxuJHJnYmEtdG8taGV4LWJnOiAkYmFzZSAhZGVmYXVsdDsgLy8gKEMpXHJcbiRib2R5LWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbiRyZ2JhLXRvLWhleC1iZy1pbnZlcnRlZDogcmdiKDE2MCwgMTQ5LCAxNDkpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogQ29tcG9uZW50c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm94LXNoYWRvdy12YXJpYWJsZXNcclxuJGJveC1zaGFkb3c6IDAgMC4yNXJlbSAxcmVtIHJnYmEoJGJsYWNrLCAwLjIpICFkZWZhdWx0O1xyXG4kYm94LXNoYWRvdy1zbTogMCAwLjEyNXJlbSAwLjI1cmVtIHJnYmEoJGJsYWNrLCAwLjI1KSAhZGVmYXVsdDtcclxuJGJveC1zaGFkb3ctbGc6IDAgMC42MjVyZW0gMS4yNXJlbSByZ2JhKCRibGFjaywgMC4zKSAhZGVmYXVsdDtcclxuLy8gc2Nzcy1kb2NzLWVuZCBib3gtc2hhZG93LXZhcmlhYmxlc1xyXG5cclxuLy8gJGFsZXJ0LWJnLXNjYWxlOiAtODQlICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtYm9yZGVyLXNjYWxlOiAtNDAlICFkZWZhdWx0O1xyXG4vLyAkYWxlcnQtY29sb3Itc2NhbGU6IDAlICFkZWZhdWx0O1xyXG5cclxuJGJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kYm9yZGVyLWlubmVyLWNvbG9yOiByZ2JhKCR3aGl0ZSwgMC4wOSkgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGZsb2F0aW5nLWNvbXBvbmVudC1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFkZWZhdWx0OyAvLyAoQylcclxuJGZsb2F0aW5nLWNvbXBvbmVudC1zaGFkb3c6ICRib3gtc2hhZG93ICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogVHlwb2dyYXBoeVxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiRoZWFkaW5ncy1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kdGV4dC1tdXRlZDogcmdiYS10by1oZXgoJGdyYXktNjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kdGV4dC1tdXRlZC1ob3ZlcjogcmdiYS10by1oZXgoJHdoaXRlLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbiR0ZXh0LWxpZ2h0OiByZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVyOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxyXG4kdGV4dC1saWdodGVzdDogcmdiYS10by1oZXgoJGdyYXktMzAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcclxuXHJcbi8vICogVGFibGVzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiR0YWJsZS1zdHJpcGVkLWJnLWZhY3RvcjogMC4wOCAhZGVmYXVsdDtcclxuJHRhYmxlLXN0cmlwZWQtYmc6IHJnYmEoJGdyYXktNTAwLCAkdGFibGUtc3RyaXBlZC1iZy1mYWN0b3IpICFkZWZhdWx0O1xyXG4vLyAkdGFibGUtc3RyaXBlZC1iZzogcmdiYS10by1oZXgocmdiYSgkZ3JheS01MDAsICR0YWJsZS1zdHJpcGVkLWJnLWZhY3RvciksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbi8vICR0YWJsZS1zdHJpcGVkLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRibGFjaywgJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yKSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuXHJcbiR0YWJsZS1ob3Zlci1iZy1mYWN0b3I6IDAuMSAhZGVmYXVsdDtcclxuJHRhYmxlLWhvdmVyLWJnOiByZ2JhKCRncmF5LTUwMCwgJHRhYmxlLWhvdmVyLWJnLWZhY3RvcikgIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtYm9yZGVyLWZhY3RvcjogMC40ICFkZWZhdWx0O1xyXG4kdGFibGUtYm9yZGVyLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS04MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XHJcbiR0YWJsZS1ncm91cC1zZXBhcmF0b3ItY29sb3I6ICR0YWJsZS1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kdGFibGUtYmctc2NhbGU6IC04MCUgIWRlZmF1bHQ7XHJcblxyXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGFibGUtbG9vcFxyXG4kdGFibGUtdmFyaWFudHM6IChcclxuICAncHJpbWFyeSc6IHNoaWZ0LWNvbG9yKCRwcmltYXJ5LCAkdGFibGUtYmctc2NhbGUpLFxyXG4gICdzZWNvbmRhcnknOiBzaGlmdC1jb2xvcigkc2Vjb25kYXJ5LCAkdGFibGUtYmctc2NhbGUpLFxyXG4gICdzdWNjZXNzJzogc2hpZnQtY29sb3IoJHN1Y2Nlc3MsICR0YWJsZS1iZy1zY2FsZSksXHJcbiAgJ2luZm8nOiBzaGlmdC1jb2xvcigkaW5mbywgJHRhYmxlLWJnLXNjYWxlKSxcclxuICAnd2FybmluZyc6IHNoaWZ0LWNvbG9yKCR3YXJuaW5nLCAkdGFibGUtYmctc2NhbGUpLFxyXG4gICdkYW5nZXInOiBzaGlmdC1jb2xvcigkZGFuZ2VyLCAkdGFibGUtYmctc2NhbGUpLFxyXG4gICdsaWdodCc6ICRkYXJrLFxyXG4gICdkYXJrJzogJHdoaXRlXHJcbikgIWRlZmF1bHQ7XHJcbi8vIHNjc3MtZG9jcy1lbmQgdGFibGUtbG9vcFxyXG5cclxuJGNvbXBvbmVudC1hY3RpdmUtYmc6ICR3aGl0ZSAhZGVmYXVsdDtcclxuXHJcbi8vICogUHJvZ3Jlc3MgYmFyc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiRwcm9ncmVzcy1iZzogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuLy8gKiBQYWdpbmF0aW9uXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRwYWdpbmF0aW9uLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tYmc6IHJnYmEoJGdyYXktNTAwLCAwLjA4KSAhZGVmYXVsdDtcclxuXHJcbiRwYWdpbmF0aW9uLWZvY3VzLWNvbG9yOiAkcGFnaW5hdGlvbi1jb2xvciAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tZm9jdXMtYmc6IHJnYmEoJGdyYXktNTAwLCAwLjE2KSAhZGVmYXVsdDtcclxuXHJcbiRwYWdpbmF0aW9uLWhvdmVyLWNvbG9yOiAkcGFnaW5hdGlvbi1jb2xvciAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24taG92ZXItYmc6IHJnYmEoJGdyYXktNTAwLCAwLjE2KSAhZGVmYXVsdDtcclxuXHJcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWNvbG9yOiAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcclxuJHBhZ2luYXRpb24tZGlzYWJsZWQtYmc6IHJnYmEoJGdyYXktNTAwLCAwLjA0KSAhZGVmYXVsdDtcclxuXHJcbi8vICogQ2FyZHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGNhcmQtYmc6IHJnYmEtdG8taGV4KCRncmF5LTkwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJGNhcmQtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kY2FyZC1ib3gtc2hhZG93OiAwIDAuMTI1cmVtIDAuNXJlbSAwIHJnYmEoJGJsYWNrLCAwLjE2KSAhZGVmYXVsdDtcclxuXHJcbi8vICogQWNjb3JkaW9uXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRhY2NvcmRpb24tYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xyXG4kYWNjb3JkaW9uLWJ1dHRvbi1jb2xvcjogJGFjY29yZGlvbi1jb2xvciAhZGVmYXVsdDtcclxuJGFjY29yZGlvbi1idXR0b24tYWN0aXZlLWNvbG9yOiAkYWNjb3JkaW9uLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1pY29uLWNvbG9yOiAkYWNjb3JkaW9uLWJ1dHRvbi1jb2xvciAhZGVmYXVsdDtcclxuJGFjY29yZGlvbi1pY29uLWFjdGl2ZS1jb2xvcjogJGFjY29yZGlvbi1idXR0b24tYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xyXG5cclxuJGFjY29yZGlvbi1idXR0b24taWNvbjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMTInIGhlaWdodD0nMTInIHZpZXdCb3g9JzAgMCAxMiAxMicgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayclM0UlM0NkZWZzJTNFJTNDcGF0aCBpZD0nYScgZD0nbTEuNTMyIDEyIDYuMTgyLTYtNi4xODItNkwwIDEuNDg3IDQuNjUgNiAwIDEwLjUxM3onLyUzRSUzQy9kZWZzJTNFJTNDZyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyLjU3MSknIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0N1c2UgZmlsbD0nJTIzNDM1OTcxJyB4bGluazpocmVmPSclMjNhJy8lM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScuMScgZmlsbD0nI3skYWNjb3JkaW9uLWljb24tY29sb3J9JyB4bGluazpocmVmPSclMjNhJy8lM0UlM0MvZyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcbiRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1pY29uOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxMicgaGVpZ2h0PScxMicgdmlld0JveD0nMCAwIDEyIDEyJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0NwYXRoIGlkPSdhJyBkPSdtMS41MzIgMTIgNi4xODItNi02LjE4Mi02TDAgMS40ODcgNC42NSA2IDAgMTAuNTEzeicvJTNFJTNDL2RlZnMlM0UlM0NnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDIuNTcxKScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ3VzZSBmaWxsPSclMjM0MzU5NzEnIHhsaW5rOmhyZWY9JyUyM2EnLyUzRSUzQ3VzZSBmaWxsLW9wYWNpdHk9Jy4xJyBmaWxsPScjeyRhY2NvcmRpb24taWNvbi1hY3RpdmUtY29sb3J9JyB4bGluazpocmVmPSclMjNhJy8lM0UlM0MvZyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIEZvcm1zXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbiRpbnB1dC1iZzogJGNhcmQtYmcgIWRlZmF1bHQ7XHJcbiRpbnB1dC1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGlucHV0LWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktNTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc3dpdGNoLWNvbG9yOiAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kZm9ybS1zd2l0Y2gtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nLTQgLTQgOCA4Jz48Y2lyY2xlIHI9JzMnIGZpbGw9JyN7JGZvcm0tc3dpdGNoLWNvbG9yfScvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcclxuXHJcbiRmb3JtLXNlbGVjdC1iZzogJGlucHV0LWJnICFkZWZhdWx0O1xyXG5cclxuJGZvcm0tc2VsZWN0LWluZGljYXRvci1jb2xvcjogJGdyYXktMjAwICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxNiAxNic+PHBhdGggZmlsbD0nbm9uZScgc3Ryb2tlPScjeyRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIHN0cm9rZS13aWR0aD0nMicgZD0nTTIgNWw2IDYgNi02Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xyXG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXJ0bDogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTYgMTYnPjxwYXRoIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J00yIDVsNiA2IDYtNicvPjwvc3ZnPlwiKSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4kZm9ybS1yYW5nZS10cmFjay1iZzogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10cmFjay1kaXNhYmxlZC1iZzogJGdyYXktNTAgIWRlZmF1bHQ7IC8vIChDKVxyXG5cclxuJGZvcm0tcmFuZ2UtdGh1bWItYmc6IHJnYmEtdG8taGV4KCRncmF5LTIwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItYm94LXNoYWRvdzogMCAwIDZweCAwICRncmF5LTIwMCAhZGVmYXVsdDtcclxuJGZvcm0tcmFuZ2UtdGh1bWItZm9jdXMtYm94LXNoYWRvdzogMCAwIDhweCAwcHggJGdyYXktMjAwICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1hY3RpdmUtYmc6ICRmb3JtLXJhbmdlLXRodW1iLWJnICFkZWZhdWx0O1xyXG4kZm9ybS1yYW5nZS10aHVtYi1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktNjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4vLyAqIE5hdnNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJG5hdi10YWJzLWxpbmstYWN0aXZlLWJnOiAkY2FyZC1iZyAhZGVmYXVsdDtcclxuJG5hdi10YWJzLWJvcmRlci1jb2xvcjogJG5hdi10YWJzLWxpbmstYWN0aXZlLWJnICFkZWZhdWx0O1xyXG4kbmF2LXRhYnMtYnRuLWJnLWZhY3RvcjogMC4xNiAhZGVmYXVsdDsgLy8gKEMpXHJcbiRuYXYtdGFicy1idG4tYmc6IHJnYmEtdG8taGV4KCRncmF5LTgwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXHJcblxyXG4vLyAqIE5hdmJhclxyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kbmF2YmFyLWxpZ2h0LWhvdmVyLWNvbG9yOiAjNGU1MTU1ICFkZWZhdWx0O1xyXG4kbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvcjogIzRlNTE1NSAhZGVmYXVsdDtcclxuJG5hdmJhci1saWdodC1kaXNhYmxlZC1jb2xvcjogcmdiYSgkYmxhY2ssIDAuMikgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIERyb3Bkb3duc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4kZHJvcGRvd24tYmc6IHJnYmEtdG8taGV4KHJnYmEoJGJsYWNrLCAwLjYpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tZGl2aWRlci1iZzogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbiRkcm9wZG93bi1saW5rLWhvdmVyLWJnOiByZ2JhKCRncmF5LTUwMCwgMC4xKSAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLWxpbmstZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xyXG4kZHJvcGRvd24taGVhZGVyLWNvbG9yOiAkaGVhZGluZ3MtY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIFBvcG92ZXJzXHJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuJHBvcG92ZXItYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4vLyAqIFRvYXN0c1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiR0b2FzdC1iYWNrZ3JvdW5kLWNvbG9yOiAkY2FyZC1iZyAhZGVmYXVsdDtcclxuJHRvYXN0LWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcclxuJHRvYXN0LWhlYWRlci1jb2xvcjogJHRvYXN0LWNvbG9yICFkZWZhdWx0O1xyXG5cclxuLy8gKiBNb2RhbHNcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJG1vZGFsLWNvbnRlbnQtYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xyXG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzOiAwIDAuMjVyZW0gMi44MTI1cmVtIDAgcmdiYSgkYmxhY2ssIDAuMykgIWRlZmF1bHQ7XHJcblxyXG4vLyAqIExpc3QgZ3JvdXBcclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGxpc3QtZ3JvdXAtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1pdGVtLWJnLXNjYWxlOiAtNzAlICFkZWZhdWx0O1xyXG4kbGlzdC1ncm91cC1pdGVtLWJnLWhvdmVyLXNjYWxlOiAxMCUgIWRlZmF1bHQ7IC8vICAoYylcclxuJGxpc3QtZ3JvdXAtaG92ZXItYmc6IHJnYmEoJGJhc2UsIDAuMDYpICFkZWZhdWx0O1xyXG4ka2JkLWNvbG9yOiAkZGFyayAhZGVmYXVsdDtcclxuXHJcbi8vIENvbmZpZ1xyXG4kcnRsLXN1cHBvcnQ6IGZhbHNlICFkZWZhdWx0O1xyXG4kZGFyay1zdHlsZTogdHJ1ZSAhZGVmYXVsdDtcclxuXHJcbi8vICogQ2hldnJvbiBJY29uc1xyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuJGNoZXZyb24tdXA6IFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMTBweCcgaGVpZ2h0PSc2cHgnIHZpZXdCb3g9JzAgMCAxMCA2JyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnJTNFJTNDZGVmcyUzRSUzQ3BvbHlnb24gaWQ9J3BhdGgtMScgcG9pbnRzPScwIDQuNTc5NjEzNjIgMS4yMzg4Mjk1MSA1LjcxNDI4NTcxIDUgMi4yNjkzNDQxOSA4Ljc2MTE3MDQ5IDUuNzE0Mjg1NzEgMTAgNC41Nzk2MTM2MiA1IDAnJTNFJTNDL3BvbHlnb24lM0UlM0MvZGVmcyUzRSUzQ2cgaWQ9J+Kame+4jy1TeW1ib2xzJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ2cgaWQ9JzMxKS1EYXRhVGFibGVzJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMjg5LjAwMDAwMCwgLTY0LjAwMDAwMCknJTNFJTNDZyBpZD0nVGFibGUtQmFzaWMnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCA1Mi4wMDAwMDApJyUzRSUzQ2cgaWQ9J1RhYmxlLUhlYWRlcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMTkuMDAwMDAwLCAxMC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0dyb3VwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyNzAuMDAwMDAwLCAwLjAwMDAwMCknJTNFJTNDZyBpZD0nSWNvbi1Db2xvcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDIuMTQyODU3KSclM0UlM0N1c2UgZmlsbD0nI3tzdHItcmVwbGFjZSgje3JnYmEtdG8taGV4KCRncmF5LTUwMCwkcmdiYS10by1oZXgtYmcpfSwnIycsICclMjMnKX0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDdXNlIGZpbGwtb3BhY2l0eT0nMC41JyBmaWxsPScje3N0ci1yZXBsYWNlKCN7cmdiYS10by1oZXgoJGdyYXktNTAwLCRyZ2JhLXRvLWhleC1iZyl9LCcjJywgJyUyMycpfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCI7XHJcbiRjaGV2cm9uLWRvd246IFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMTBweCcgaGVpZ2h0PSc2cHgnIHZpZXdCb3g9JzAgMCAxMCA2JyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnJTNFJTNDZGVmcyUzRSUzQ3BvbHlnb24gaWQ9J3BhdGgtMScgcG9pbnRzPSc4Ljc2MTE3MDQ5IDAgNSAzLjQ0NDk0MTUyIDEuMjM4ODI5NTEgMCAwIDEuMTM0NjcyMSA1IDUuNzE0Mjg1NzEgMTAgMS4xMzQ2NzIxJyUzRSUzQy9wb2x5Z29uJTNFJTNDL2RlZnMlM0UlM0NnIGlkPSfimpnvuI8tU3ltYm9scycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGlkPSczMSktRGF0YVRhYmxlcycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTI4OS4wMDAwMDAsIC03Ni4wMDAwMDApJyUzRSUzQ2cgaWQ9J1RhYmxlLUJhc2ljJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgNTIuMDAwMDAwKSclM0UlM0NnIGlkPSdUYWJsZS1IZWFkZXInIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDE5LjAwMDAwMCwgMTAuMDAwMDAwKSclM0UlM0NnIGlkPSdHcm91cCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMjcwLjAwMDAwMCwgMTIuMDAwMDAwKSclM0UlM0NnIGlkPSdJY29uLUNvbG9yJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMi4xNDI4NTcpJyUzRSUzQ3VzZSBmaWxsPScje3N0ci1yZXBsYWNlKCN7cmdiYS10by1oZXgoJGdyYXktNTAwLCRyZ2JhLXRvLWhleC1iZyl9LCcjJywgJyUyMycpfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScwLjgnIGZpbGw9JyN7c3RyLXJlcGxhY2UoI3tyZ2JhLXRvLWhleCgkZ3JheS01MDAsJHJnYmEtdG8taGV4LWJnKX0sJyMnLCAnJTIzJyl9JyB4bGluazpocmVmPSclMjNwYXRoLTEnJTNFJTNDL3VzZSUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9zdmclM0VcIjtcclxuIiwiQHVzZSAnLi4vLi4vc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUnIGFzIGxpZ2h0O1xyXG5AdXNlICcuLi8uLi9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvaW5jbHVkZS1kYXJrJyBhcyBkYXJrO1xyXG5AaW1wb3J0ICcuLi8uLi9zY3NzL19jdXN0b20tdmFyaWFibGVzL2xpYnMnO1xyXG5cclxuJHRhZy1saW5lLWhlaWdodDogMS41cmVtICFkZWZhdWx0O1xyXG4kdGFnLXNwYWNlcjogbGlnaHQucHgtdG8tcmVtKGZsb29yKGxpZ2h0LnJlbS10by1weCgobGlnaHQuJGlucHV0LWhlaWdodC1pbm5lciAtICR0YWctbGluZS1oZWlnaHQpICogMC41KSkpICFkZWZhdWx0O1xyXG5cclxuLnRhZ3MtaW5saW5lIHtcclxuICAudGFnaWZ5X19kcm9wZG93bl9fd3JhcHBlciB7XHJcbiAgICBwYWRkaW5nOiAwICR0YWctc3BhY2VyICR0YWctc3BhY2VyICR0YWctc3BhY2VyO1xyXG4gIH1cclxuICAudGFnaWZ5X19kcm9wZG93bl9faXRlbSB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICBwYWRkaW5nOiAwLjNlbSAwLjVlbTtcclxuICAgIG1hcmdpbjogJHRhZy1zcGFjZXIgJHRhZy1zcGFjZXIgMCAwO1xyXG4gICAgZm9udC1zaXplOiAwLjg1ZW07XHJcbiAgICB0cmFuc2l0aW9uOiAwcztcclxuICB9XHJcbn1cclxuXHJcbi8vUlRMXHJcbkBpbmNsdWRlIGFwcC1ydGwoZmFsc2UpIHtcclxuICAudGFncy1pbmxpbmUge1xyXG4gICAgLnRhZ2lmeV9fZHJvcGRvd25fX2l0ZW0ge1xyXG4gICAgICBtYXJnaW46ICR0YWctc3BhY2VyIDAgMCAkdGFnLXNwYWNlcjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIExpZ2h0IHN0eWxlc1xyXG5AaWYgJGVuYWJsZS1saWdodC1zdHlsZSB7XHJcbiAgLmxpZ2h0LXN0eWxlIHtcclxuICAgIC50YWdzLWlubGluZSB7XHJcbiAgICAgIC50YWdpZnlfX2Ryb3Bkb3duX19pdGVtIHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBsaWdodC4kYm9yZGVyLWNvbG9yO1xyXG4gICAgICAgIGNvbG9yOiBsaWdodC4kYm9keS1jb2xvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gRGFyayBzdHlsZXNcclxuQGlmICRlbmFibGUtZGFyay1zdHlsZSB7XHJcbiAgLmRhcmstc3R5bGUge1xyXG4gICAgLnRhZ3MtaW5saW5lIHtcclxuICAgICAgLnRhZ2lmeV9fZHJvcGRvd25fX2l0ZW0ge1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGRhcmsuJGJvcmRlci1jb2xvcjtcclxuICAgICAgICBjb2xvcjogZGFyay4kYm9keS1jb2xvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJAdXNlIFwic2FzczptYXRoXCI7XHJcblxyXG4vLyBUaGUgc3VnZ2VzdGlvbnMgbGlzdCAoZHJvcGRvd24pIGlzIGFwcGVuZGVkIHRvIHRoZSBkb2N1bWVudCdzIGJvZHkgc28gdGhlIENTUyB2YXJpYWJsZXMgc2hvdWxkIGJlIGRlZmluZWQgYXQgcm9vdC1sZXZlbFxyXG46cm9vdCB7XHJcbiAgICAtLXRhZ2lmeS1kZC1jb2xvci1wcmltYXJ5OiByZ2IoNTMsMTQ5LDI0Nik7IC8vIHNob3VsZCBiZSBzYW1lIGFzIFwiJHRhZ3MtZm9jdXMtYm9yZGVyLWNvbG9yXCJcclxuICAgIC0tdGFnaWZ5LWRkLWJnLWNvbG9yOiB3aGl0ZTtcclxuICAgIC0tdGFnaWZ5LWRkLWl0ZW0tcGFkOiAuM2VtIC41ZW07IC8vIHNob3VsZCBiZSBzYW1lIGFzICR0YWctcGFkIChiZWxvdylcclxufVxyXG5cclxuLnRhZ2lmeXtcclxuICAgIC8vIFNDU1MgXCJkZWZhdWx0XCIgYWxsb3dzIG92ZXJyaWRpbmcgdmFyaWFibGVzIEJFRk9SRSB0aGV5IGFyZSBzZXQgaW4gdGhlIGJlbG93IGxpbmVzIG9mIGNvZGVcclxuICAgICRzZWxmOiAmO1xyXG4gICAgJHRhZ3MtYm9yZGVyLWNvbG9yICAgICAgIDogI0RERCAhZGVmYXVsdDtcclxuICAgICR0YWdzLWhvdmVyLWJvcmRlci1jb2xvciA6ICNDQ0MgIWRlZmF1bHQ7XHJcbiAgICAkdGFncy1mb2N1cy1ib3JkZXItY29sb3IgOiAjMzU5NWY2ICFkZWZhdWx0O1xyXG4gICAgJHRhZ01hcmdpbiAgICAgICAgICAgICAgIDogNXB4ICFkZWZhdWx0O1xyXG4gICAgJHRhZy1wYWQgICAgICAgICAgICAgICAgIDogLjNlbSAuNWVtICFkZWZhdWx0O1xyXG4gICAgJHRhZy1taW4td2lkdGggICAgICAgICAgIDogMWNoICFkZWZhdWx0O1xyXG4gICAgJHRhZy1tYXgtd2lkdGggICAgICAgICAgIDogYXV0byAhZGVmYXVsdDtcclxuICAgICR0YWctdGV4dC1jb2xvciAgICAgICAgICA6IGJsYWNrICFkZWZhdWx0O1xyXG4gICAgJHRhZy10ZXh0LWNvbG9yLS1lZGl0ICAgIDogYmxhY2sgIWRlZmF1bHQ7XHJcbiAgICAkdGFnLWJnICAgICAgICAgICAgICAgICAgOiAjRTVFNUU1ICFkZWZhdWx0O1xyXG4gICAgJHRhZy1ob3ZlciAgICAgICAgICAgICAgIDogI0QzRTJFMiAhZGVmYXVsdDtcclxuICAgICR0YWctcmVtb3ZlICAgICAgICAgICAgICA6ICNEMzk0OTQgIWRlZmF1bHQ7XHJcbiAgICAkdGFnLXJlbW92ZS1idG4tY29sb3IgICAgOiAkdGFnLXRleHQtY29sb3IgIWRlZmF1bHQ7XHJcbiAgICAkdGFnLXJlbW92ZS1idG4tYmcgICAgICAgOiBub25lICFkZWZhdWx0O1xyXG4gICAgJHRhZy1yZW1vdmUtYnRuLWJnLS1ob3ZlcjogZGFya2VuKCR0YWctcmVtb3ZlLCA4KSAhZGVmYXVsdDtcclxuICAgICR0YWctaW52YWxpZC1jb2xvciAgICAgICA6ICR0YWctcmVtb3ZlICFkZWZhdWx0O1xyXG4gICAgJHRhZy1pbnZhbGlkLWJnICAgICAgICAgIDogcmdiYSgkdGFnLXJlbW92ZSwgLjUpICFkZWZhdWx0O1xyXG4gICAgJHRhZy1pbnNldC1zaGFkb3ctc2l6ZSAgIDogMS4xZW0gIWRlZmF1bHQ7XHJcbiAgICAkdGFnLWhpZGUtdHJhbnNpdGlvbiAgICAgOiAuM3MgIWRlZmF1bHQ7XHJcbiAgICAkcGxhY2Vob2xkZXItY29sb3IgICAgICAgOiByZ2JhKCR0YWctdGV4dC1jb2xvciwgLjQpICFkZWZhdWx0O1xyXG4gICAgJHBsYWNlaG9sZGVyLWNvbG9yLWZvY3VzIDogcmdiYSgkdGFnLXRleHQtY29sb3IsIC4yNSkgIWRlZmF1bHQ7XHJcbiAgICAkaW5wdXQtY29sb3IgICAgICAgICAgICAgOiBpbmhlcml0ICFkZWZhdWx0O1xyXG4gICAgJHRhZ2lmeS1kZC1iZy1jb2xvciAgICAgIDogd2hpdGUgIWRlZmF1bHQ7XHJcbiAgICAkdGFnaWZ5LWRkLWNvbG9yLXByaW1hcnkgOiByZ2IoNTMsMTQ5LDI0NikgIWRlZmF1bHQ7XHJcblxyXG4gICAgLy8gQ1NTIHZhcmlhYmxlc1xyXG4gICAgLS10YWdzLWRpc2FibGVkLWJnICAgICAgICAgOiAjRjFGMUYxO1xyXG4gICAgLS10YWdzLWJvcmRlci1jb2xvciAgICAgICAgOiAjeyR0YWdzLWJvcmRlci1jb2xvcn07XHJcbiAgICAtLXRhZ3MtaG92ZXItYm9yZGVyLWNvbG9yICA6ICN7JHRhZ3MtaG92ZXItYm9yZGVyLWNvbG9yfTtcclxuICAgIC0tdGFncy1mb2N1cy1ib3JkZXItY29sb3IgIDogI3skdGFncy1mb2N1cy1ib3JkZXItY29sb3J9O1xyXG4gICAgLS10YWctYm9yZGVyLXJhZGl1cyAgICAgICAgOiAzcHg7XHJcbiAgICAtLXRhZy1iZyAgICAgICAgICAgICAgICAgICA6ICN7JHRhZy1iZ307XHJcbiAgICAtLXRhZy1ob3ZlciAgICAgICAgICAgICAgICA6ICN7JHRhZy1ob3Zlcn07XHJcbiAgICAtLXRhZy10ZXh0LWNvbG9yICAgICAgICAgICA6ICN7JHRhZy10ZXh0LWNvbG9yfTtcclxuICAgIC0tdGFnLXRleHQtY29sb3ItLWVkaXQgICAgIDogI3skdGFnLXRleHQtY29sb3ItLWVkaXR9O1xyXG4gICAgLS10YWctcGFkICAgICAgICAgICAgICAgICAgOiAjeyR0YWctcGFkfTtcclxuICAgIC0tdGFnLWluc2V0LXNoYWRvdy1zaXplICAgIDogI3skdGFnLWluc2V0LXNoYWRvdy1zaXplfTtcclxuICAgIC0tdGFnLWludmFsaWQtY29sb3IgICAgICAgIDogI3skdGFnLWludmFsaWQtY29sb3J9O1xyXG4gICAgLS10YWctaW52YWxpZC1iZyAgICAgICAgICAgOiAjeyR0YWctaW52YWxpZC1iZ307XHJcbiAgICAtLXRhZy1yZW1vdmUtYmcgICAgICAgICAgICA6ICN7cmdiYSgkdGFnLXJlbW92ZSwgLjMpfTtcclxuICAgIC0tdGFnLXJlbW92ZS1idG4tY29sb3IgICAgIDogI3skdGFnLXJlbW92ZS1idG4tY29sb3J9O1xyXG4gICAgLS10YWctcmVtb3ZlLWJ0bi1iZyAgICAgICAgOiAjeyR0YWctcmVtb3ZlLWJ0bi1iZ307XHJcbiAgICAtLXRhZy1yZW1vdmUtYnRuLWJnLS1ob3ZlciA6ICN7JHRhZy1yZW1vdmUtYnRuLWJnLS1ob3Zlcn07XHJcbiAgICAtLWlucHV0LWNvbG9yICAgICAgICAgICAgICA6ICN7JGlucHV0LWNvbG9yfTtcclxuICAgIC0tdGFnLS1taW4td2lkdGggICAgICAgICAgIDogI3skdGFnLW1pbi13aWR0aH07XHJcbiAgICAtLXRhZy0tbWF4LXdpZHRoICAgICAgICAgICA6ICN7JHRhZy1tYXgtd2lkdGh9O1xyXG4gICAgLS10YWctaGlkZS10cmFuc2l0aW9uICAgICAgOiAjeyR0YWctaGlkZS10cmFuc2l0aW9ufTtcclxuICAgIC0tcGxhY2Vob2xkZXItY29sb3IgICAgICAgIDogI3skcGxhY2Vob2xkZXItY29sb3J9O1xyXG4gICAgLS1wbGFjZWhvbGRlci1jb2xvci1mb2N1cyAgOiAjeyRwbGFjZWhvbGRlci1jb2xvci1mb2N1c307XHJcbiAgICAtLWxvYWRlci1zaXplICAgICAgICAgICAgICA6IC44ZW07XHJcbiAgICAtLXJlYWRvbmx5LXN0cmlwZWQgICAgICAgICA6IDE7XHJcblxyXG4gICAgQG1peGluIGZpcmVmb3gge1xyXG4gICAgICAgIEBhdC1yb290IHtcclxuICAgICAgICAgICAgQC1tb3otZG9jdW1lbnQgdXJsLXByZWZpeCgpIHtcclxuICAgICAgICAgICAgICAgICYgeyBAY29udGVudDsgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBtaXhpbiBwbGFjZWhvbGRlciggJHNob3c6dHJ1ZSApe1xyXG4gICAgICAgIHRyYW5zaXRpb246IC4ycyBlYXNlLW91dDtcclxuXHJcbiAgICAgICAgQGlmICRzaG93ID09IHRydWUge1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBlbHNlIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGV4KDZweCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBtaXhpbiBsb2FkZXIoKXtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgd2lkdGg6IC43ZW07XHJcbiAgICAgICAgaGVpZ2h0OiAuN2VtO1xyXG4gICAgICAgIHdpZHRoOiB2YXIoLS1sb2FkZXItc2l6ZSk7XHJcbiAgICAgICAgaGVpZ2h0OiB2YXIoLS1sb2FkZXItc2l6ZSk7XHJcbiAgICAgICAgbWluLXdpZHRoOiAwO1xyXG4gICAgICAgIGJvcmRlcjogM3B4IHNvbGlkO1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjogI0VFRSAjQkJCICM4ODggdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIGFuaW1hdGlvbjogcm90YXRlTG9hZGVyIC40cyBpbmZpbml0ZSBsaW5lYXI7XHJcbiAgICB9XHJcblxyXG4gICAgQG1peGluIHRhZ1JlYWRvbmx5QkcoJHNpemU6NXB4KXtcclxuICAgICAgICBhbmltYXRpb246IHJlYWRvbmx5U3R5bGVzIDFzIGNhbGMoLTFzICogKHZhcigtLXJlYWRvbmx5LXN0cmlwZWQpIC0gMSkpIHBhdXNlZDtcclxuXHJcbiAgICAgICAgQGtleWZyYW1lcyByZWFkb25seVN0eWxlcyB7XHJcbiAgICAgICAgICAgIDAlIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgdmFyKC0tdGFnLWJnKSAgMjUlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNwYXJlbnQgICAgMjUlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNwYXJlbnQgICAgNTAlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyKC0tdGFnLWJnKSAgNTAlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyKC0tdGFnLWJnKSAgNzUlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNwYXJlbnQgICAgNzUlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNwYXJlbnQpICAgMC8jeyRzaXplfSAjeyRzaXplfTtcclxuICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBmaWx0ZXI6IGJyaWdodG5lc3MoLjk1KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAa2V5ZnJhbWVzIHRhZ3MtLWJ1bXB7XHJcbiAgICAgICAgMzAlIHsgdHJhbnNmb3JtOiBzY2FsZSgxLjIpOyB9XHJcbiAgICB9XHJcblxyXG4gICAgQGtleWZyYW1lcyByb3RhdGVMb2FkZXIge1xyXG4gICAgICAgIHRveyB0cmFuc2Zvcm06IHJvdGF0ZSgxdHVybikgfVxyXG4gICAgfVxyXG5cclxuICAgIGRpc3BsYXkgICAgICAgOiBpbmxpbmUtZmxleDtcclxuICAgIGFsaWduLWl0ZW1zICAgOiBmbGV4LXN0YXJ0O1xyXG4gICAgZmxleC13cmFwICAgICA6IHdyYXA7XHJcbiAgICBib3JkZXIgICAgICAgIDogMXB4IHNvbGlkIHZhcigtLXRhZ3MtYm9yZGVyLWNvbG9yKTtcclxuICAgIHBhZGRpbmcgICAgICAgOiAwO1xyXG4gICAgbGluZS1oZWlnaHQgICA6IDA7XHJcbiAgICBjdXJzb3IgICAgICAgIDogdGV4dDtcclxuICAgIG91dGxpbmUgICAgICAgOiBub25lO1xyXG4gICAgcG9zaXRpb24gICAgICA6IHJlbGF0aXZlO1xyXG4gICAgYm94LXNpemluZyAgICA6IGJvcmRlci1ib3g7XHJcbiAgICB0cmFuc2l0aW9uICAgIDogLjFzO1xyXG5cclxuICAgICY6aG92ZXI6bm90KC50YWdpZnktLWZvY3VzKTpub3QoLnRhZ2lmeS0taW52YWxpZCl7XHJcbiAgICAgICAgLS10YWdzLWJvcmRlci1jb2xvciA6IHZhcigtLXRhZ3MtaG92ZXItYm9yZGVyLWNvbG9yKTtcclxuICAgIH1cclxuXHJcbiAgICAmW2Rpc2FibGVkXXtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS10YWdzLWRpc2FibGVkLWJnKTtcclxuICAgICAgICBmaWx0ZXI6IHNhdHVyYXRlKDApO1xyXG4gICAgICAgIG9wYWNpdHk6IC41O1xyXG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEdsb2JhbCBcInJlYWQtb25seVwiIG1vZGUgKG5vIGlucHV0IGJ1dHRvbilcclxuICAgICZbcmVhZG9ubHldLCAmW2Rpc2FibGVkXXtcclxuICAgICAgICAmI3skc2VsZn0tLXNlbGVjdHtcclxuICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOm5vdCgjeyRzZWxmfS0tbWl4KTpub3QoI3skc2VsZn0tLXNlbGVjdCl7XHJcbiAgICAgICAgICAgIGN1cnNvcjogZGVmYXVsdDtcclxuICAgICAgICAgICAgPiAjeyRzZWxmfV9faW5wdXR7XHJcbiAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMDtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogJHRhZ01hcmdpbiAwO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAjeyRzZWxmfV9fdGFnID4gZGl2e1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogdmFyKC0tdGFnLXBhZCk7XHJcbiAgICAgICAgICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgdGFnUmVhZG9ubHlCRztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgI3sgJHNlbGYgfV9fdGFnX19yZW1vdmVCdG57IGRpc3BsYXk6bm9uZTsgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAmLS1sb2FkaW5ne1xyXG4gICAgICAgICN7ICRzZWxmIH1fX2lucHV0e1xyXG4gICAgICAgICAgICA+IGJyOmxhc3QtY2hpbGR7IGRpc3BsYXk6bm9uZTsgfVxyXG4gICAgICAgICAgICAmOjpiZWZvcmV7IGNvbnRlbnQ6bm9uZTsgfVxyXG4gICAgICAgICAgICAmOjphZnRlcntcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGxvYWRlcjtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IC0ycHggMCAtMnB4IC41ZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJjplbXB0eXtcclxuICAgICAgICAgICAgICAgICY6OmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4gICAgLy8gSGlkZXMgb3JpZ2luYWxzXHJcbiAgICArIGlucHV0LFxyXG4gICAgKyB0ZXh0YXJlYXtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcclxuICAgICAgICBsZWZ0OiAtOTk5OWVtICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwKSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RhZ3tcclxuICAgICAgICBkaXNwbGF5ICAgIDogaW5saW5lLWZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4gICAgIDogJHRhZ01hcmdpbiAwICR0YWdNYXJnaW4gJHRhZ01hcmdpbjtcclxuICAgICAgICBwb3NpdGlvbiAgIDogcmVsYXRpdmU7XHJcbiAgICAgICAgei1pbmRleCAgICA6IDE7XHJcbiAgICAgICAgb3V0bGluZSAgICA6IG5vbmU7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICBjdXJzb3IgICAgIDogZGVmYXVsdDtcclxuICAgICAgICB0cmFuc2l0aW9uIDogLjEzcyBlYXNlLW91dDtcclxuXHJcbiAgICAgICAgPiBkaXZ7ICAvLyA6bm90KFtjb250ZW50ZWRpdGFibGVdKVxyXG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbiA6IHRvcDtcclxuICAgICAgICAgICAgYm94LXNpemluZyAgICAgOiBib3JkZXItYm94O1xyXG4gICAgICAgICAgICBtYXgtd2lkdGggICAgICA6IDEwMCU7XHJcbiAgICAgICAgICAgIHBhZGRpbmcgICAgICAgIDogdmFyKC0tdGFnLXBhZCk7XHJcbiAgICAgICAgICAgIGNvbG9yICAgICAgICAgIDogdmFyKC0tdGFnLXRleHQtY29sb3IpO1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodCAgICA6IGluaGVyaXQ7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXMgIDogdmFyKC0tdGFnLWJvcmRlci1yYWRpdXMpO1xyXG4gICAgICAgICAvLyB1c2VyLXNlbGVjdCAgICA6IG5vbmU7ICAvLyBzaG91bGQgYWxsb3cgc2VsZWN0aW5nIHRleHQgaWYgdGhlIHVzZXIgd2lzaGVzIHRvIGNvcHkgc29tZXRoaW5nXHJcbiAgICAgICAgICAgIHdoaXRlLXNwYWNlICAgIDogbm93cmFwO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uICAgICA6IC4xM3MgZWFzZS1vdXQ7XHJcblxyXG4gICAgICAgICAgICA+ICp7XHJcbiAgICAgICAgICAgICAgICB3aGl0ZS1zcGFjZSAgICA6IHByZS13cmFwO1xyXG4gICAgICAgICAgICAgICAgb3ZlcmZsb3cgICAgICAgOiBoaWRkZW47XHJcbiAgICAgICAgICAgICAgICB0ZXh0LW92ZXJmbG93ICA6IGVsbGlwc2lzO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheSAgICAgICAgOiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbiA6IHRvcDtcclxuICAgICAgICAgICAgICAgIG1pbi13aWR0aCAgICAgIDogdmFyKC0tdGFnLS1taW4td2lkdGgpO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoICAgICAgOiB2YXIoLS10YWctLW1heC13aWR0aCk7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uICAgICA6IC44cyBlYXNlLCAuMXMgY29sb3I7XHJcblxyXG5cclxuICAgICAgICAgICAgICAgICZbY29udGVudGVkaXRhYmxlXXtcclxuICAgICAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgIHVzZXItc2VsZWN0OiB0ZXh0O1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogdGV4dDtcclxuICAgICAgICAgICAgICAgICAgICAvLyBmaXg6IHNvbWV0aW1lcyB0aGUgY2FyZXQgYWZ0ZXIgdGhlIGxhc3QgY2hhcmFjdGVyIHdhc24ndCB2aXNpYmxlICh3aGVuIHNldHRpbmcge2JhY2tzcGFjZTpcImVkaXRcIn0pXHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAtMnB4O1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDJweDtcclxuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDM1MHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XHJcbiAgICAgICAgICAgICAgICBpbnNldDogdmFyKC0tdGFnLWJnLWluc2V0LCAwKTtcclxuICAgICAgICAgICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6bm9uZTtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IDEyMG1zIGVhc2U7XHJcbiAgICAgICAgICAgICAgICBhbmltYXRpb24gOiB0YWdzLS1idW1wIC4zcyBlYXNlLW91dCAxO1xyXG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMCAwIDAgdmFyKC0tdGFnLWluc2V0LXNoYWRvdy1zaXplKSB2YXIoLS10YWctYmcpIGluc2V0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOmhvdmVyOm5vdChbcmVhZG9ubHldKSxcclxuICAgICAgICAmOmZvY3Vze1xyXG4gICAgICAgICAgICBkaXZ7ICAvLyA6bm90KFtjb250ZW50ZWRpdGFibGVdKVxyXG4gICAgICAgICAgICAgICAgJjo6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgICAgIC0tdGFnLWJnLWluc2V0OiAje21hdGguZGl2KC0kdGFnTWFyZ2luLCAyKX07XHJcbiAgICAgICAgICAgICAgICAgICAgLS10YWctYmc6IHZhcigtLXRhZy1ob3Zlcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtLWxvYWRpbmd7XHJcbiAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAgICAgICAgICAgLnRhZ2lmeV9fdGFnX19yZW1vdmVCdG57XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOjphZnRlcntcclxuICAgICAgICAgICAgICAgIC0tbG9hZGVyLXNpemU6ICAuNGVtO1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgbG9hZGVyO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIC41ZW0gMCAtLjFlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi0tZmxhc2h7XHJcbiAgICAgICAgICAgIGRpdjo6YmVmb3JleyBhbmltYXRpb246bm9uZTsgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi0taGlkZXtcclxuICAgICAgICAgICAgd2lkdGggICAgICAgICAgOiAwICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdCAgIDogMDtcclxuICAgICAgICAgICAgcGFkZGluZy1yaWdodCAgOiAwO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdCAgICA6IDA7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodCAgIDogMDtcclxuICAgICAgICAgICAgb3BhY2l0eSAgICAgICAgOiAwO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm0gICAgICA6IHNjYWxlKDApO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uICAgICA6IHZhcigtLXRhZy1oaWRlLXRyYW5zaXRpb24pO1xyXG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50cyA6IG5vbmU7XHJcblxyXG4gICAgICAgICAgICA+IGRpdiA+ICp7XHJcbiAgICAgICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmI3sgJHNlbGYgfXtcclxuICAgICAgICAgICAgJi0tbm9Bbmlte1xyXG4gICAgICAgICAgICAgID4gZGl2OjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICBhbmltYXRpb246bm9uZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtLW5vdEFsbG93ZWQ6bm90KC50YWdpZnlfX3RhZy0tZWRpdGFibGUpe1xyXG4gICAgICAgICAgICAgICAgZGl2e1xyXG4gICAgICAgICAgICAgICAgICAgID4gc3Bhbnsgb3BhY2l0eTouNTsgfSAvLyBmaWx0ZXI6Ymx1ciguMnB4KTtcclxuICAgICAgICAgICAgICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC0tdGFnLWJnOiB2YXIoLS10YWctaW52YWxpZC1iZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IC4ycztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZbcmVhZG9ubHlde1xyXG4gICAgICAgICAgICAjeyAkc2VsZiB9X190YWdfX3JlbW92ZUJ0bnsgZGlzcGxheTpub25lOyB9XHJcbiAgICAgICAgICAgID4gZGl2ey8vIHBhZGRpbmc6ICR0YWctcGFkO1xyXG4gICAgICAgICAgICAgICAgJjo6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRhZ1JlYWRvbmx5Qkc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtLWVkaXRhYmxle1xyXG4gICAgICAgICAgICA+IGRpdntcclxuICAgICAgICAgICAgICAgIGNvbG9yIDogdmFyKC0tdGFnLXRleHQtY29sb3ItLWVkaXQpO1xyXG5cclxuICAgICAgICAgICAgICAgICY6OmJlZm9yZXtcclxuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAycHggdmFyKC0tdGFnLWhvdmVyKSBpbnNldCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICA+ICN7JHNlbGZ9X190YWdfX3JlbW92ZUJ0bntcclxuICAgICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAgICAgICAgICAgICAgICY6OmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpIHRyYW5zbGF0ZVgoNXB4KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJi50YWdpZnktLWludmFsaWR7XHJcbiAgICAgICAgICAgICAgICA+IGRpdntcclxuICAgICAgICAgICAgICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDJweCB2YXIoLS10YWctaW52YWxpZC1jb2xvcikgaW5zZXQgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3JlbW92ZUJ0bntcclxuICAgICAgICAgICAgJHNpemU6IDE0cHg7XHJcblxyXG4gICAgICAgICAgICBvcmRlciAgICAgICAgICA6IDU7XHJcbiAgICAgICAgICAgIGRpc3BsYXkgICAgICAgIDogaW5saW5lLWZsZXg7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zICAgIDogY2VudGVyO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1cyAgOiA1MHB4O1xyXG4gICAgICAgICAgICBjdXJzb3IgICAgICAgICA6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgIGZvbnQgICAgICAgICAgIDogI3skc2l6ZX0vMSBBcmlhbDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZCAgICAgOiB2YXIoLS10YWctcmVtb3ZlLWJ0bi1iZyk7XHJcbiAgICAgICAgICAgIGNvbG9yICAgICAgICAgIDogdmFyKC0tdGFnLXJlbW92ZS1idG4tY29sb3IpO1xyXG5cclxuICAgICAgICAgICAgd2lkdGggICAgICAgICAgOiAkc2l6ZTtcclxuICAgICAgICAgICAgaGVpZ2h0ICAgICAgICAgOiAkc2l6ZTtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0ICAgOiBtYXRoLmRpdigkc2l6ZSwzKTtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQgICAgOiBhdXRvO1xyXG5cclxuICAgICAgICAgICAgb3ZlcmZsb3cgICAgICAgOiBoaWRkZW47XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb24gICAgIDogLjJzIGVhc2Utb3V0O1xyXG5cclxuICAgICAgICAgICAgJjo6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlxcMDBEN1wiO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogLjNzLCBjb2xvciAwcztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHZhcigtLXRhZy1yZW1vdmUtYnRuLWJnLS1ob3Zlcik7XHJcbiAgICAgICAgICAgICAgICAvLyArIHNwYW57IGJveC1zaGFkb3c6IDAgMCAwIDJweCAkdGFnLXJlbW92ZSBpbnNldDsgdHJhbnNpdGlvbjouMnM7IH1cclxuICAgICAgICAgICAgICAgICsgZGl2e1xyXG4gICAgICAgICAgICAgICAgICAgID4gc3Bhbnsgb3BhY2l0eTouNTsgfSAvLyBmaWx0ZXI6Ymx1ciguMnB4KTtcclxuICAgICAgICAgICAgICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIHZhcigtLXRhZy1pbnNldC1zaGFkb3ctc2l6ZSkgdmFyKC0tdGFnLXJlbW92ZS1iZywgcmdiYSgkdGFnLXJlbW92ZSwgLjMpKSBpbnNldCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IC4ycztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgICY6bm90KCN7JHNlbGZ9LS1taXgpe1xyXG4gICAgICAgICN7ICRzZWxmIH1fX2lucHV0e1xyXG4gICAgICAgICAgICAvLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTM0NzAyMTAvMTA0MzgwXHJcbiAgICAgICAgICAgIGJyIHsgZGlzcGxheTpub25lOyB9XHJcbiAgICAgICAgICAgICogeyBkaXNwbGF5OmlubGluZTsgd2hpdGUtc3BhY2U6bm93cmFwOyB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuICAgIC8vIEhvbGRzIHRoZSBwbGFjZWhvbGRlciAmIHRoZSB0YWdzIGlucHV0XHJcbiAgICAmX19pbnB1dHtcclxuICAgICAgICAkcGxhY2Vob2xkZXItd2lkdGggOiAxMTBweDtcclxuICAgICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIG1pbi13aWR0aDogJHBsYWNlaG9sZGVyLXdpZHRoO1xyXG4gICAgICAgIG1hcmdpbjogJHRhZ01hcmdpbjtcclxuICAgICAgICBwYWRkaW5nOiB2YXIoLS10YWctcGFkKTtcclxuICAgICAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IC8vICMxNjAgTGluZSBicmVhayAoXFxuKSBhcyBkZWxpbWV0ZXJcclxuICAgICAgICBjb2xvcjogdmFyKC0taW5wdXQtY29sb3IpO1xyXG4gICAgICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XHJcblxyXG4gICAgICAgICY6ZW1wdHl7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGZpcmVmb3gge1xyXG4gICAgICAgICAgICAgIC8vIGNsaWNraW5nIHR3aWNlIG9uIHRoZSBpbnB1dCAobm90IGZhc3QpIGRpc2FsbG93cyB0eXBpbmcgKGJ1Zykgb25seSB3aGVuIHRoZSBpbnB1dCBoYXMgXCJkaXNwbGF5OmZsZXhcIi5cclxuICAgICAgICAgICAgICAvLyBkaXNhYmxlZCB0aGUgYmVsb3cgcnVsZSBmb3IgdGhlIGFib3ZlIHJlYXNvbjpcclxuICAgICAgICAgICAgICAvLyAgZGlzcGxheTogZmxleDsgLy8gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9OTA0ODQ2I2M0NVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOmZvY3Vze1xyXG4gICAgICAgICAgICBvdXRsaW5lOm5vbmU7XHJcblxyXG4gICAgICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBwbGFjZWhvbGRlcihmYWxzZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgLyogQUxMIE1TIEJST1dTRVJTOiBoaWRlIHBsYWNlaG9sZGVyIChvbiBmb2N1cykgb3RoZXJ3aXNlIHRoZSBjYXJldCBpcyBwbGFjZWQgYWZ0ZXIgaXQsIHdoaWNoIGlzIHdlaXJkICovXHJcbiAgICAgICAgICAgICAgICAvKiBJRSBFZGdlIDEyKyBDU1Mgc3R5bGVzIGdvIGhlcmUgKi9cclxuICAgICAgICAgICAgICAgIEBzdXBwb3J0cyAoIC1tcy1pbWUtYWxpZ246YXV0byApIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOmVtcHR5e1xyXG4gICAgICAgICAgICAgICAgJjo6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHBsYWNlaG9sZGVyKHRydWUpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvLyBTZWVtcyB0byBiZSBmaXhlZCEgbm8gbmVlZCBmb3IgdGhlIGJlbG93IGhhY2tcclxuICAgICAgICAgICAgICAgICAgICAvLyBAaW5jbHVkZSBmaXJlZm94IHtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgLy8gcmVtb3ZlIFwiOmFmdGVyXCIgcHNldWRvIGVsZW1lbnQ6IGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTkwNDg0NiNjNDVcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgY29udGVudDogdW5zZXQ7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIC8vIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRwbGFjZWhvbGRlci1jb2xvci1mb2N1cztcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogdmFyKC0tcGxhY2Vob2xkZXItY29sb3ItZm9jdXMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAmOjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBmaXJlZm94IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6OmJlZm9yZXtcclxuICAgICAgICAgICAgY29udGVudDogYXR0cihkYXRhLXBsYWNlaG9sZGVyKTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxZW07XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxZW07XHJcbiAgICAgICAgICAgIG1hcmdpbjogYXV0byAwO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tcGxhY2Vob2xkZXItY29sb3IpO1xyXG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvKiBTZWVtcyBmaXJlZm94IG5ld2VyIHZlcnNpb25zIGRvbid0IG5lZWQgdGhpcyBhbnkgbW9yZVxyXG4gICAgICAgIEBzdXBwb3J0cyAoIC1tb3otYXBwZWFyYW5jZTpub25lICl7XHJcbiAgICAgICAgICAgICY6OmJlZm9yZXtcclxuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgKi9cclxuICAgICAgICAvLyB0cmllcyB0byBzdWdnZXN0IHRoZSByZXN0IG9mIHRoZSB2YWx1ZSBmcm9tIHRoZSBmaXJzdCBpdGVtIGluIHRoZSB3aGl0ZWxpc3Qgd2hpY2ggbWF0Y2hlcyBpdFxyXG4gICAgICAgICY6OmFmdGVye1xyXG4gICAgICAgICAgICBjb250ZW50OiBhdHRyKGRhdGEtc3VnZ2VzdCk7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuXHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgbWluLXdpZHRoOiBjYWxjKDEwMCUgLSAxLjVlbSk7XHJcbiAgICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgICAgICAgICAgd2hpdGUtc3BhY2U6IHByZTsgLyogYWxsb3dzIHNwYWNlcyBhdCB0aGUgYmVnaW5uaW5nICovXHJcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS10YWctdGV4dC1jb2xvcik7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IC4zO1xyXG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czpub25lO1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEwMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gJi0taW52YWxpZHtcclxuICAgICAgICAvLyAgICAgLy8gY29sb3I6ICRpbnZhbGlkLWlucHV0LWNvbG9yO1xyXG4gICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgLy8gaW4gXCJtaXggbW9kZVwiIHRoZSB0YWdzIG1pZ2h0IGJlIG5leHQgdG8gcGxhaW4gdGV4dCwgc28gc3ByZWFkIHRoaW5ncyBhIGJpdFxyXG4gICAgICAgICN7ICRzZWxmIH1fX3RhZ3tcclxuICAgICAgICAgICAgbWFyZ2luOiAwIDFweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi0tbWl4IHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jazsgLy8gZGlzcGxheTpmbGV4IG1ha2VzIENocm9tZSBnZW5lcmF0ZXMgPGRpdj48YnI+PC9kaXY+IHdoZW4gcHJlc3NpbmcgRU5URVIga2V5XHJcblxyXG4gICAgICAgICN7ICRzZWxmIH1fX2lucHV0e1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAkdGFnTWFyZ2luO1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyAvLyBuZWVkZWQgdG8gcmVzb2x2ZSB0aGlzIGJ1ZzogaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9MTE4MjYyMVxyXG5cclxuICAgICAgICAgICAgJjo6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OmF1dG87XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIG5vIHN1Z2dlc3RlZC1jb21wbGV0ZSBhcmUgc2hvd24gaW4gbWl4LW1vZGUgd2hpbGUgaGlnaWxpZ2h0aW5nIGRyb3Bkb3duIG9wdGlvbnNcclxuICAgICAgICAgICAgJjo6YWZ0ZXJ7IGNvbnRlbnQ6bm9uZTsgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS1zZWxlY3R7XHJcbiAgICAgICAgJjo6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICRzaXplOiAxNnB4O1xyXG5cclxuICAgICAgICAgICAgY29udGVudDogJz4nO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAuNTtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgZm9udDogJHNpemUgbW9ub3NwYWNlO1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogbWF0aC5kaXYoJHNpemUsMik7XHJcbiAgICAgICAgICAgIGhlaWdodDogbWF0aC5kaXYoJHNpemUsMik7XHJcbiAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMTUwJSwgLTUwJSkgc2NhbGVYKDEuMikgcm90YXRlKDkwZGVnKTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogLjJzIGVhc2UtaW4tb3V0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJlthcmlhLWV4cGFuZGVkPXRydWVde1xyXG4gICAgICAgICAgICAmOjphZnRlcntcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xNTAlLCAtNTAlKSByb3RhdGUoMjcwZGVnKSBzY2FsZVkoMS4yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgI3skc2VsZn1fX3RhZ3tcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAxLjhlbTtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG5cclxuICAgICAgICAgICAgZGl2e1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgI3skc2VsZn1fX2lucHV0e1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi0tZW1wdHl7XHJcbiAgICAgICAgI3sgJHNlbGYgfV9faW5wdXR7XHJcbiAgICAgICAgICAgICY6OmJlZm9yZXtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHBsYWNlaG9sZGVyO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IGF1dG87XHJcblxyXG4gICAgICAgICAgICAgICAgI3sgJHNlbGYgfS0tbWl4ICZ7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtLWZvY3Vze1xyXG4gICAgICAgIC0tdGFncy1ib3JkZXItY29sb3I6IHZhcigtLXRhZ3MtZm9jdXMtYm9yZGVyLWNvbG9yKTtcclxuICAgICAgICB0cmFuc2l0aW9uOiAwcztcclxuICAgIH1cclxuXHJcbiAgICAmLS1pbnZhbGlke1xyXG4gICAgICAgIC0tdGFncy1ib3JkZXItY29sb3IgOiAjeyR0YWctaW52YWxpZC1jb2xvcn07XHJcbiAgICB9XHJcblxyXG4gICAgLy8gU2luY2UgdGhlIGRyb3Bkb3duIGlzIGFuIGV4dGVybmFsIGVsZW1lbnQsIHdoaWNoIGlzIHBvc2l0aW9uZWQgZGlyZWN0bHkgb24gdGhlIGJvZHkgZWxlbWVudFxyXG4gICAgLy8gaXQgY2Fubm90IGluZ2VyaXQgdGhlIENTUyB2YXJpYWJsZXMgYXBwbGllZCBvbiB0aGUgXCIuVGFnaWZ5XCIgZWxlbWVudFxyXG4gICAgJl9fZHJvcGRvd257XHJcbiAgICAgICAgJGRyb3Bkb3duOiAmO1xyXG4gICAgICAgICR0cmFuczogLjI1cyBjdWJpYy1iZXppZXIoMCwxLC41LDEpO1xyXG5cclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgei1pbmRleDogOTk5OTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXB4KTtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgICAgICAmW3BsYWNlbWVudD1cInRvcFwiXXtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcclxuXHJcbiAgICAgICAgICAgICN7JGRyb3Bkb3dufV9fd3JhcHBlcntcclxuICAgICAgICAgICAgICAgIGJvcmRlci10b3Atd2lkdGg6IDEuMXB4OyAvLyBmaXhlcyAtIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTExNDc1MjNcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIHdoZW4gdGhlIGRyb3Bkb3duIHNob3dzIG5leHQgdG8gdGhlIGNhcmV0IHdoaWxlIHR5cGluZ1xyXG4gICAgICAgICZbcG9zaXRpb249XCJ0ZXh0XCJde1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAzcHggcmdiYSh2YXIoLS10YWdpZnktZGQtY29sb3ItcHJpbWFyeSksIC4xKTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAuOWVtO1xyXG5cclxuICAgICAgICAgICAgI3skZHJvcGRvd259X193cmFwcGVye1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3dyYXBwZXJ7XHJcbiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDMwMHB4O1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogYXV0bztcclxuICAgICAgICAgICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS10YWdpZnktZGQtYmctY29sb3IpO1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZDtcclxuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS10YWdpZnktZGQtY29sb3ItcHJpbWFyeSk7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDEuNXB4OyAvLyBmaXhlcyAtIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTExNDc1MjNcclxuICAgICAgICAgICAgYm9yZGVyLXRvcC13aWR0aDogMDtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMCAycHggNHB4IC0ycHggcmdiYShibGFjaywuMik7XHJcbiAgICAgICAgICAgIC8vIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246ICR0cmFucztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2hlYWRlcntcclxuICAgICAgICAgICAgJjplbXB0eXsgZGlzcGxheTogbm9uZTsgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fZm9vdGVye1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC41ZW07XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IHZhcigtLXRhZ2lmeS1kZC1pdGVtLXBhZCk7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC43ZW07XHJcbiAgICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgICAgICAgICAgb3BhY2l0eTogLjU7XHJcblxyXG4gICAgICAgICAgICAmOmVtcHR5eyBkaXNwbGF5OiBub25lOyB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBpbnRpYWwgc3RhdGUsIHByZS1yZW5kZXJlZFxyXG4gICAgICAgICYtLWluaXRpYWx7XHJcbiAgICAgICAgICAgICN7JGRyb3Bkb3dufV9fd3JhcHBlcntcclxuICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFlbSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICZbcGxhY2VtZW50PVwidG9wXCJde1xyXG4gICAgICAgICAgICAgICAgI3skZHJvcGRvd259X193cmFwcGVye1xyXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyZW0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19pdGVte1xyXG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiB2YXIoLS10YWdpZnktZGQtaXRlbS1wYWQpO1xyXG4gICAgICAgICAgICBtYXJnaW46IDFweDtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgICAgICAgICAgbWF4LWhlaWdodDogNjBweDtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG5cclxuICAgICAgICAgICAgJi0tYWN0aXZle1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tdGFnaWZ5LWRkLWNvbG9yLXByaW1hcnkpO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOmFjdGl2ZXtcclxuICAgICAgICAgICAgICAgIGZpbHRlcjogYnJpZ2h0bmVzcygxMDUlKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLyogY3VzdG9tIGhpZGRlbiB0cmFuc2l0aW9uIGVmZmVjdCBpcyBuZWVkZWQgZm9yIGhvcml6b250YWwtbGF5b3V0IHN1Z2dlc3Rpb25zICovXHJcbiAgICAgICAgICAgICYtLWhpZGRlbntcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAwO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgMXB4O1xyXG4gICAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMDtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IHZhcigtLXRhZ2lmeS1kZC1pdGVtLS1oaWRkZW4tZHVyYXRpb24sIC4zcykgIWltcG9ydGFudDtcclxuXHJcbiAgICAgICAgICAgICAgICA+ICoge1xyXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XHJcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBpbmhlcml0O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiQHVzZSAnLi4vLi4vc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUnIGFzIGxpZ2h0O1xyXG5AdXNlICcuLi8uLi9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvaW5jbHVkZS1kYXJrJyBhcyBkYXJrO1xyXG5AaW1wb3J0ICcuLi8uLi9zY3NzL19jdXN0b20tdmFyaWFibGVzL2xpYnMnO1xyXG5AaW1wb3J0ICd0YWdpZnktdXNlcnMtbGlzdCc7XHJcbkBpbXBvcnQgJ3RhZ2lmeS1pbmxpbmUtc3VnZ2VzdGlvbic7XHJcblxyXG5AaW1wb3J0ICdtaXhpbnMnO1xyXG5cclxuLy8gSGVpZ2h0IGNsYWMgdG8gbWF0Y2ggZm9ybS1jb250cm9sIGhlaWdodFxyXG4kdGFnLWxpbmUtaGVpZ2h0OiAxLjVyZW0gIWRlZmF1bHQ7XHJcbiR0YWctc3BhY2VyOiBsaWdodC5weC10by1yZW0oZmxvb3IobGlnaHQucmVtLXRvLXB4KChsaWdodC4kaW5wdXQtaGVpZ2h0LWlubmVyIC0gJHRhZy1saW5lLWhlaWdodCkgKiAwLjUpKSkgIWRlZmF1bHQ7XHJcblxyXG4vLyBPdmVycmlkZSB0YWdpZnkgdmFyc1xyXG4kdGFnLXJlbW92ZTogbGlnaHQuJGRhbmdlciAhZGVmYXVsdDtcclxuJHRhZy1yZW1vdmUtYnRuLWJnLS1ob3ZlcjogZGFya2VuKCR0YWctcmVtb3ZlLCA1KSAhZGVmYXVsdDtcclxuJHRhZy1pbnZhbGlkLWNvbG9yOiAkdGFnLXJlbW92ZSAhZGVmYXVsdDtcclxuJHRhZy1pbnZhbGlkLWJnOiByZ2JhKCR0YWctcmVtb3ZlLCAwLjUpICFkZWZhdWx0O1xyXG5cclxuQGltcG9ydCAnLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B5YWlyZW8vdGFnaWZ5L3NyYy90YWdpZnknO1xyXG5cclxuLnRhZ2lmeSB7XHJcbiAgJi5mb3JtLWNvbnRyb2wge1xyXG4gICAgcGFkZGluZzogMCAkdGFnLXNwYWNlciAkdGFnLXNwYWNlciAkdGFnLXNwYWNlcjtcclxuICB9XHJcbiAgJl9fdGFnLFxyXG4gICZfX2lucHV0IHtcclxuICAgIG1hcmdpbjogJHRhZy1zcGFjZXIgJHRhZy1zcGFjZXIgMCAwICFpbXBvcnRhbnQ7XHJcbiAgICBsaW5lLWhlaWdodDogMTtcclxuICB9XHJcbiAgJl9faW5wdXQge1xyXG4gICAgbGluZS1oZWlnaHQ6ICR0YWctbGluZS1oZWlnaHQ7XHJcbiAgICAmOmVtcHR5OjpiZWZvcmUge1xyXG4gICAgICB0b3A6IDRweDtcclxuICAgIH1cclxuICB9XHJcbiAgJl9fdGFnIHtcclxuICAgID4gZGl2IHtcclxuICAgICAgbGluZS1oZWlnaHQ6ICR0YWctbGluZS1oZWlnaHQ7XHJcbiAgICAgIHBhZGRpbmc6IDAgMCAwICR0YWctc3BhY2VyO1xyXG4gICAgICAudGFnaWZ5X190YWctdGV4dCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAwLjgxMjVyZW07XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICZfX3JlbW92ZUJ0biB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogJHRhZy1zcGFjZXI7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAkdGFnLXNwYWNlciAqIDAuNTtcclxuICAgICAgY29sb3I6IGxpZ2h0LiRib2R5LWNvbG9yO1xyXG4gICAgfVxyXG4gICAgJjpob3Zlcjpub3QoW3JlYWRvbmx5XSksXHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgZGl2OjpiZWZvcmUge1xyXG4gICAgICAgIHRvcDogMHB4O1xyXG4gICAgICAgIHJpZ2h0OiAwcHg7XHJcbiAgICAgICAgYm90dG9tOiAwcHg7XHJcbiAgICAgICAgbGVmdDogMHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gICZbcmVhZG9ubHldOm5vdCgudGFnaWZ5LS1taXgpIC50YWdpZnlfX3RhZyA+IGRpdiB7XHJcbiAgICBwYWRkaW5nOiAwICR0YWctc3BhY2VyIDAgJHRhZy1zcGFjZXIgIWltcG9ydGFudDtcclxuICB9XHJcbiAgJl9faW5wdXQge1xyXG4gICAgcGFkZGluZzogMDtcclxuICB9XHJcbn1cclxuXHJcbi8vUlRMXHJcbkBpbmNsdWRlIGFwcC1ydGwoZmFsc2UpIHtcclxuICAudGFnaWZ5IHtcclxuICAgICZfX3RhZyxcclxuICAgICZfX2lucHV0IHtcclxuICAgICAgbWFyZ2luOiAkdGFnLXNwYWNlciAwIDAgJHRhZy1zcGFjZXI7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGFnIHtcclxuICAgICAgPiBkaXYge1xyXG4gICAgICAgIHBhZGRpbmc6IDAgJHRhZy1zcGFjZXIgMCAwO1xyXG4gICAgICB9XHJcbiAgICAgICZfX3JlbW92ZUJ0biB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6ICR0YWctc3BhY2VyO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogJHRhZy1zcGFjZXIgKiAwLjU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIExpZ2h0IHN0eWxlc1xyXG5AaWYgJGVuYWJsZS1saWdodC1zdHlsZSB7XHJcbiAgLmxpZ2h0LXN0eWxlIHtcclxuICAgIC50YWdpZnkge1xyXG4gICAgICAmX190YWcge1xyXG4gICAgICAgID4gZGl2OjpiZWZvcmUge1xyXG4gICAgICAgICAgYm94LXNoYWRvdzogMCAwIDAgMS4xZW0gbGlnaHQucmdiYS10by1oZXgocmdiYShsaWdodC4kZ3JheS0yMDAsIDAuMDgpKSBpbnNldDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLnRhZ2lmeV9fdGFnLXRleHQge1xyXG4gICAgICAgICAgY29sb3I6IGxpZ2h0LiRib2R5LWNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmhvdmVyOm5vdChbcmVhZG9ubHldKSxcclxuICAgICAgICAmOmZvY3VzIHtcclxuICAgICAgICAgIGRpdjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMCAwIDAgMS4xZW0gbGlnaHQucmdiYS10by1oZXgocmdiYShsaWdodC4kZ3JheS0yMDAsIDAuMTYpKSBpbnNldDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJjpob3Zlcjpub3QoW3JlYWRvbmx5XSkge1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjogbGlnaHQuJGlucHV0LWJvcmRlci1jb2xvcjtcclxuICAgICAgfVxyXG4gICAgICAmX19pbnB1dDo6YmVmb3JlIHtcclxuICAgICAgICBjb2xvcjogbGlnaHQuJGlucHV0LXBsYWNlaG9sZGVyLWNvbG9yICFpbXBvcnRhbnQ7XHJcbiAgICAgIH1cclxuICAgICAgJl9fZHJvcGRvd24ge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IGxpZ2h0LiRkcm9wZG93bi1ib3gtc2hhZG93O1xyXG4gICAgICAgICZfX3dyYXBwZXIge1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogbGlnaHQuJGRyb3Bkb3duLWJnO1xyXG4gICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC50YWdpZnktLWZvY3VzIHtcclxuICAgICAgYm9yZGVyLWNvbG9yOiBsaWdodC4kYm9yZGVyLWNvbG9yICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAudGFnaWZ5X19kcm9wZG93bl9faXRlbS0tYWN0aXZlIHtcclxuICAgICAgYmFja2dyb3VuZDogcmdiYShsaWdodC4kYmxhY2ssIDAuMDQpICFpbXBvcnRhbnQ7XHJcbiAgICAgIGNvbG9yOiBsaWdodC4kYm9keS1jb2xvcjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIERhcmsgc3R5bGVzXHJcbkBpZiAkZW5hYmxlLWRhcmstc3R5bGUge1xyXG4gIC5kYXJrLXN0eWxlIHtcclxuICAgIC50YWdpZnkge1xyXG4gICAgICAmX190YWcge1xyXG4gICAgICAgID4gZGl2IHtcclxuICAgICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDEuMWVtIHJnYmEoZGFyay4kYmFzZSwgMC4wOCkgaW5zZXQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAudGFnaWZ5X190YWctdGV4dCB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBkYXJrLiRib2R5LWNvbG9yO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmOmhvdmVyOm5vdChbcmVhZG9ubHldKSxcclxuICAgICAgICAmOmZvY3VzIHtcclxuICAgICAgICAgIGRpdjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMCAwIDAgMS4xZW0gcmdiYShkYXJrLiRiYXNlLCAwLjE2KSBpbnNldDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJl9fcmVtb3ZlQnRuIHtcclxuICAgICAgICAgIGNvbG9yOiBkYXJrLiRpbnB1dC1jb2xvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJjpob3Zlcjpub3QoW3JlYWRvbmx5XSkge1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjogZGFyay4kaW5wdXQtYm9yZGVyLWNvbG9yO1xyXG4gICAgICB9XHJcbiAgICAgICZfX2lucHV0OjpiZWZvcmUge1xyXG4gICAgICAgIGNvbG9yOiBkYXJrLiRpbnB1dC1wbGFjZWhvbGRlci1jb2xvciAhaW1wb3J0YW50O1xyXG4gICAgICB9XHJcbiAgICAgICZbcmVhZG9ubHldOm5vdCgudGFnaWZ5LS1taXgpIC50YWdpZnlfX3RhZyA+IGRpdjo6YmVmb3JlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICAgIDQ1ZGVnLFxyXG4gICAgICAgICAgICBkYXJrLiRpbnB1dC1ib3JkZXItY29sb3IgMjUlLFxyXG4gICAgICAgICAgICB0cmFuc3BhcmVudCAyNSUsXHJcbiAgICAgICAgICAgIHRyYW5zcGFyZW50IDUwJSxcclxuICAgICAgICAgICAgZGFyay4kaW5wdXQtYm9yZGVyLWNvbG9yIDUwJSxcclxuICAgICAgICAgICAgZGFyay4kaW5wdXQtYm9yZGVyLWNvbG9yIDc1JSxcclxuICAgICAgICAgICAgdHJhbnNwYXJlbnQgNzUlLFxyXG4gICAgICAgICAgICB0cmFuc3BhcmVudFxyXG4gICAgICAgICAgKVxyXG4gICAgICAgICAgMC81cHhcclxuICAgICAgICAgIDVweDtcclxuICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAxLjFlbSByZ2JhKGRhcmsuJGJhc2UsIDAuMTYpIGluc2V0O1xyXG4gICAgICB9XHJcbiAgICAgICZfX2Ryb3Bkb3duIHtcclxuICAgICAgICBib3gtc2hhZG93OiBkYXJrLiRkcm9wZG93bi1ib3gtc2hhZG93O1xyXG4gICAgICAgICZfX3dyYXBwZXIge1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogZGFyay4kZHJvcGRvd24tYmc7XHJcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnRhZ2lmeS0tZm9jdXMge1xyXG4gICAgICBib3JkZXItY29sb3I6IGRhcmsuJGJvcmRlci1jb2xvciAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgLnRhZ2lmeV9fZHJvcGRvd25fX2l0ZW0tLWFjdGl2ZSB7XHJcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoZGFyay4kYmFzZSwgMC4xKSAhaW1wb3J0YW50O1xyXG4gICAgICBjb2xvcjogZGFyay4kYm9keS1jb2xvcjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuLy8hIEFkZGVkIGluIGxhc3QgYXMgaXQgd2FzIGdldHRpbmcgb3ZlcnJpZGVcclxuQGltcG9ydCAndGFnaWZ5LWVtYWlsLWxpc3QnO1xyXG4iLCJAdXNlICcuLi8uLi9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvaW5jbHVkZScgYXMgbGlnaHQ7XHJcbkB1c2UgJy4uLy4uL3Njc3MvX2Jvb3RzdHJhcC1leHRlbmRlZC9pbmNsdWRlLWRhcmsnIGFzIGRhcms7XHJcbkBpbXBvcnQgJy4uLy4uL3Njc3MvX2N1c3RvbS12YXJpYWJsZXMvbGlicyc7XHJcblxyXG4kdGFnLWxpbmUtaGVpZ2h0OiAxLjVyZW0gIWRlZmF1bHQ7XHJcbiR0YWctc3BhY2VyOiBsaWdodC5weC10by1yZW0oZmxvb3IobGlnaHQucmVtLXRvLXB4KChsaWdodC4kaW5wdXQtaGVpZ2h0LWlubmVyIC0gJHRhZy1saW5lLWhlaWdodCkgKiAwLjUpKSkgIWRlZmF1bHQ7XHJcblxyXG4udGFnaWZ5LWVtYWlsLWxpc3Qge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBtaW4td2lkdGg6IDA7XHJcbiAgYm9yZGVyOiBub25lO1xyXG5cclxuICAudGFnaWZ5X190YWcge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgbWFyZ2luOiAwIDAgJHRhZy1zcGFjZXIgJHRhZy1zcGFjZXI7XHJcbiAgICA+IGRpdiB7XHJcbiAgICAgIHBhZGRpbmc6ICR0YWctc3BhY2VyICogMC41ICR0YWctc3BhY2VyICogMjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qIERvIG5vdCBzaG93IHRoZSBcInJlbW92ZSB0YWdcIiAoeCkgYnV0dG9uIHdoZW4gb25seSBhIHNpbmdsZSB0YWcgcmVtYWlucyAqL1xyXG4gIC50YWdpZnlfX3RhZzpvbmx5LW9mLXR5cGUgLnRhZ2lmeV9fdGFnX19yZW1vdmVCdG4ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcblxyXG4gIC50YWdpZnlfX3RhZ19fcmVtb3ZlQnRuIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTZweCkgc2NhbGUoMC41KTtcclxuICAgIG1hcmdpbi1sZWZ0OiAtM2NoO1xyXG4gICAgdHJhbnNpdGlvbjogMC4xMnM7XHJcbiAgfVxyXG5cclxuICAudGFnaWZ5X190YWc6aG92ZXIgLnRhZ2lmeV9fdGFnX19yZW1vdmVCdG4ge1xyXG4gICAgdHJhbnNmb3JtOiBub25lO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIG1hcmdpbi1sZWZ0OiAtMWNoO1xyXG4gIH1cclxuXHJcbiAgLnRhZ2lmeV9faW5wdXQge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbi50YWdpZnlfX3RhZyA+IGRpdiB7XHJcbiAgYm9yZGVyLXJhZGl1czogMC4xODc1cmVtO1xyXG59XHJcblxyXG4vL1JUTFxyXG5AaW5jbHVkZSBhcHAtcnRsKGZhbHNlKSB7XHJcbiAgLnRhZ2lmeS1lbWFpbC1saXN0IHtcclxuICAgIC50YWdpZnlfX3RhZyB7XHJcbiAgICAgIG1hcmdpbjogMCAkdGFnLXNwYWNlciAkdGFnLXNwYWNlciAwO1xyXG4gICAgICAmOmhvdmVyIC50YWdpZnlfX3RhZ19fcmVtb3ZlQnRuIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC0xY2g7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC50YWdpZnlfX3RhZ19fcmVtb3ZlQnRuIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDZweCkgc2NhbGUoMC41KTtcclxuICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICAgIG1hcmdpbi1yaWdodDogLTNjaDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIExpZ2h0IHN0eWxlc1xyXG5AaWYgJGVuYWJsZS1saWdodC1zdHlsZSB7XHJcbiAgLmxpZ2h0LXN0eWxlIHtcclxuICAgIC50YWdpZnktZW1haWwtbGlzdCB7XHJcbiAgICAgIC50YWdpZnlfX3RhZyB7XHJcbiAgICAgICAgJi0tZWRpdGFibGU6bm90KC50YWdpZnktLWludmFsaWQpID4gZGl2OjpiZWZvcmUge1xyXG4gICAgICAgICAgYm94LXNoYWRvdzogMCAwIDAgMnB4IGxpZ2h0LiRib3JkZXItY29sb3IgaW5zZXQgIWltcG9ydGFudDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIERhcmsgc3R5bGVzXHJcbkBpZiAkZW5hYmxlLWRhcmstc3R5bGUge1xyXG4gIC5kYXJrLXN0eWxlIHtcclxuICAgIC50YWdpZnktZW1haWwtbGlzdCB7XHJcbiAgICAgIC50YWdpZnlfX3RhZyB7XHJcbiAgICAgICAgJi0tZWRpdGFibGU6bm90KC50YWdpZnktLWludmFsaWQpID4gZGl2OjpiZWZvcmUge1xyXG4gICAgICAgICAgYm94LXNoYWRvdzogMCAwIDAgMnB4IGRhcmsuJGJvcmRlci1jb2xvciBpbnNldCAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0= */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
